<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMC_Blog</title>
  
  
  <link href="http://lmc.pub/atom.xml" rel="self"/>
  
  <link href="http://lmc.pub/"/>
  <updated>2022-10-05T09:58:13.704Z</updated>
  <id>http://lmc.pub/</id>
  
  <author>
    <name>LMC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Bug】Android 用OkHttp去访问Apache上的xml文件结果连接失败或者超时</title>
    <link href="http://lmc.pub/2022/10/05/%E3%80%90Bug%E3%80%91Android-%E7%94%A8OkHttp%E5%8E%BB%E8%AE%BF%E9%97%AEApache%E4%B8%8A%E7%9A%84xml%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%9C%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5%E6%88%96%E8%80%85%E8%B6%85%E6%97%B6/"/>
    <id>http://lmc.pub/2022/10/05/%E3%80%90Bug%E3%80%91Android-%E7%94%A8OkHttp%E5%8E%BB%E8%AE%BF%E9%97%AEApache%E4%B8%8A%E7%9A%84xml%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%9C%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5%E6%88%96%E8%80%85%E8%B6%85%E6%97%B6/</id>
    <published>2022-10-05T09:43:31.000Z</published>
    <updated>2022-10-05T09:58:13.704Z</updated>
    
    <content type="html"><![CDATA[<h1>Android 用OkHttp去访问Apache上的xml文件结果连接失败或者超时</h1><blockquote><p>解决的主要问题：</p><ol><li>java.net.ConnectException: Failed to connect to</li><li>java.net.ConnectException: Connection timed out</li></ol></blockquote><h2 id="一，情况描述">一，情况描述</h2><p>昨天备课到《第一行代码 第三版》的第十一章的 11.3小节解析XML数据，他是说，自己搭建一个Apache服务器在自己电脑上（也有问题，已经解决前面有篇博客写了），然后准备了一个xml文件在Apaches上。然后我们在AS中用OkHttp去访问这个Apache读取这个xml文件并拿回来解析。</p><p>但是在按照书上写的来做之后一直在报错：开始是说连接失败(<code>java.net.ConnectException: Failed to connect to</code>)。后来上网查找原因又去改，又出来连接超时（<code> java.net.ConnectException: Connection timed out</code>）的问题。</p><p>网上给出的结果有很多：防火墙的原因，网络原因，还有OkHttp和Apache服务器的默认网络超时设置……再统统试过之后发现其实是代码中的IP原因。</p><h2 id="二，总结">二，总结</h2><h3 id="正确用法">正确用法</h3><p>写的程序如果是运行在手机，则手机和电脑要在同一个WiFI下面；如果是运行在虚拟机其实虚拟机和电脑就是在同一个WiFi下。</p><p>然后拿到电脑主机在当前WiFi下的IP（怎末拿到看下面），然后如果你的Apache没有改端口还是80就可以直接<code>http://ip/get_data.xml</code>，如果改成了别的端口（比如8066）那就需要在IP后面加上现在的端口，比如：<code>http://ip:8066/get_data.xml</code></p><h3 id="怎末拿到电脑在当前WiFi下的正确IP">怎末拿到电脑在当前WiFi下的正确IP?</h3><p><code>win+R</code> 然后输入<code>cmd</code>回车调出来黑框框，然后指令输入<code>ipconfig</code>回车,然后下拉到最下面就可以看到了</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005174652534.png" alt="image-20221005174652534"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005174827274.png" alt="image-20221005174827274"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005175019223.png" alt="image-20221005175019223"></p><h3 id="网上其他可能原因分析">网上其他可能原因分析</h3><h4 id="localhost">localhost</h4><p>这个不行的原因是他跑到不管你的手机还是虚拟机，它指的都不是电脑主机了，而是手机的localhost或者虚拟机的localhost，所以才会出现Failed to connect 的问题</p><h4 id="10-0-2-2">10.0.2.2</h4><p>《第一行代码 第三版》中用的 10.0.2.2 其实是郭霖老师他跑在AS的虚拟机，然后这个IP指的就是AS虚拟机外面的电脑主机IP，不过看格式来说也有一种可能是他截图的时候他家电脑连他家的WiFi然后这个情况下他的电脑在这个WiFi下的IP就是 10.0.2.2。但是这个是用不了的，还是Failed to connect 问题。</p><h4 id="其他">其他</h4><p>此外什么Apache和OkHttp超时设置也是不需要的（有很大一部分回答是说这个能解决，其实不是）,防火墙也不是关键，一般不用管，如果担心可能会有影响可以自己关了</p><h2 id="三，自己当时的求证和探寻过程">三，自己当时的求证和探寻过程</h2><h3 id="test1">test1</h3><p>该次成功条件：</p><blockquote><p>电脑防火墙全关了</p><p>程序是跑在手机（真机）上</p><p>手机开热点，电脑连热点（两个在同一个WiFI下）</p><p>url地址用的是电脑的<code>无线局域网适配器 WLAN</code>哪里的IPv4地址</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005150144188.png" alt="image-20221005150144188"></p><h3 id="test2">test2</h3><p>这次打开电脑全部防火墙 -》 成功 说明不是防火墙的原因</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005150635677.png" alt="image-20221005150635677"></p><h3 id="test3">test3</h3><p>跑虚拟机</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005150937068.png" alt="image-20221005150937068"></p><h3 id="test4">test4</h3><p>手机和电脑都连校园网，那么这里的url中那个IP地址就要改了，要改成现在电脑和手机练的WiFi下的电脑主机IP，否者会提示不能连接目标端口。</p><blockquote><p>怎末知道？</p><p>打开电脑命令提示符黑框框</p><p>然后输入ipconfig回车</p><p>那个<code>无限区域网适配器 WLAN</code>下的IPv4的地址就是结果</p><p>！！！注意是WLAN下的，什么以太网，什么本地连接也有相像的，不是那个！！！</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005151722929.png" alt="image-20221005151722929"></p><h3 id="test5">test5</h3><p>电脑连接Wifi，手机用流量，程序跑手机结果如下</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005152508930.png" alt="image-20221005152508930"></p><h3 id="test6">test6</h3><p>电脑连接WiFi，然后程序跑在虚拟机还是可以的。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005152813804.png" alt="image-20221005152813804"></p><h3 id="test7">test7</h3><p>《第一行代码 第三版》中的那个IP是不行的，本来这个10.0.2.2 是跑在AS虚拟机</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005153438492.png" alt="image-20221005153438492"></p><h3 id="test8">test8</h3><p>用localhost跑在虚拟机</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005154600506.png" alt="image-20221005154600506"></p><h3 id="test9">test9</h3><p>用localhost跑在同一个WIFI下的手机</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221005154757468.png" alt="image-20221005154757468"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Android 用OkHttp去访问Apache上的xml文件结果连接失败或者超时&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;解决的主要问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;java.net.ConnectException: Failed to connect to&lt;/li</summary>
      
    
    
    
    <category term="Bug" scheme="http://lmc.pub/categories/Bug/"/>
    
    <category term="浏览器" scheme="http://lmc.pub/categories/Bug/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>Apache下载安装</title>
    <link href="http://lmc.pub/2022/10/04/2022-10-04-Apache%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
    <id>http://lmc.pub/2022/10/04/2022-10-04-Apache%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</id>
    <published>2022-10-04T13:57:26.000Z</published>
    <updated>2022-10-04T12:55:09.698Z</updated>
    
    <content type="html"><![CDATA[<h1>Windows下载安装Apache</h1><blockquote><p>作者：李敏烂</p><p>Mac和Linux自带了Apache就不用来凑热闹了。</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><h2 id="一，下载源">一，下载源</h2><p>官方下载网址：<a href="https://httpd.apache.org/download.cgi#apache24">https://httpd.apache.org/download.cgi#apache24</a></p><p>我蓝奏云放了一个Apache最新版的可用的压缩包：<a href="https://wwc.lanzoum.com/ianTZ0d4iksj">https://wwc.lanzoum.com/ianTZ0d4iksj</a></p><p>上面两个都可以</p><h2 id="二，从官网下载">二，从官网下载</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004191312983.png" alt="image-20221004191312983"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004191452198.png" alt="image-20221004191452198"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004191640759.png" alt="image-20221004191640759"></p><p>然后我这边就会弹出下载窗口</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004191721347.png" alt="image-20221004191721347"></p><h2 id="三，用蓝奏云的压缩包">三，用蓝奏云的压缩包</h2><p>这里的这个下载的压缩包我放在蓝奏云了：<a href="https://wwc.lanzoum.com/ianTZ0d4iksj">https://wwc.lanzoum.com/ianTZ0d4iksj</a></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004192120955.png" alt="image-20221004192120955"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004192220480.png" alt="image-20221004192220480"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004192422351.png" alt="image-20221004192422351"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004194058520.png" alt="image-20221004194058520"></p><p>双击打开这个 <code>Apache24</code>,然后赋值此时的地址，然后再点开conf文件夹</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004194231651.png" alt="image-20221004194231651"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004194503554.png" alt="image-20221004194503554"></p><p>然后 win + Q 或者直接来到桌面点下图中任务栏中的放大镜</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004194754753.png" alt="image-20221004194754753"></p><p>回到刚才D盘下面那个Apach24目录然后点进去bin目录，赋值bin所在的地址</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004195028478.png" alt="image-20221004195028478"></p><p>在命令提示符那个黑框框里面输入<code>cd /d D:\Apache24\bin</code> 后面那个是刚才 复制的bin 的路径</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004195150182.png" alt="image-20221004195150182"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004195542823.png" alt="image-20221004195542823"></p><h2 id="四，问题：端口被占用的解决">四，问题：端口被占用的解决</h2><p>接输入<code>netstat -ano</code>查一下电脑端口使用情况</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004195805621.png" alt="image-20221004195805621"></p><p>你这里也可能是80 号端口被某一个代号的占用了，记下来这个代号</p><p>直接<code>tasklist |findstr 8340</code>（后面辣个8340就是占用的代号，你是多少这里就填多少）</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004200116268.png" alt="image-20221004200116268"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004200720747.png" alt="image-20221004200720747"></p><p>不一定非要改为444端口，没有程序在用的端口就可以了</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004200956047.png" alt="image-20221004200956047"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004201036120.png" alt="image-20221004201036120"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004201340212.png" alt="image-20221004201340212"></p><p>记得每一个文件修改过都要保存（Ctrl+S）</p><h2 id="五，解决了问题继续">五，解决了问题继续</h2><p>然后再回到命令提示符黑框框重新安装一次</p><p><code>httpd -k uninstall</code></p><p><code>httpd -k install</code></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004203404174.png" alt="image-20221004203404174"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004203711501.png" alt="image-20221004203711501"></p><p>右击点开后，选择最上面那个Open。。。出来下面界面。如果有什么管理员授权直接给就好了</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004203833205.png" alt="image-20221004203833205"></p><p>来到浏览器网址框输入：<code>localhost:8088</code>(如果你当初那个80端口改了，这里后面就填你改的端口)</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004204119557.png" alt="image-20221004204119557"></p><p>多说一嘴：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221004192658983.png" alt="image-20221004192658983"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Windows下载安装Apache&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：李敏烂&lt;/p&gt;
&lt;p&gt;Mac和Linux自带了Apache就不用来凑热闹了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Typora美化主题</title>
    <link href="http://lmc.pub/2022/10/03/Typora%E7%BE%8E%E5%8C%96%E4%B8%BB%E9%A2%98/"/>
    <id>http://lmc.pub/2022/10/03/Typora%E7%BE%8E%E5%8C%96%E4%B8%BB%E9%A2%98/</id>
    <published>2022-10-03T13:57:26.000Z</published>
    <updated>2022-10-05T11:28:04.947Z</updated>
    
    <content type="html"><![CDATA[<h1>Typora美化主题</h1><blockquote><p>作者：李敏烂</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><h2 id="一，主题获取">一，主题获取</h2><ol><li>官网：<a href="https://theme.typora.io/">https://theme.typora.io/</a></li><li>百度搜索：Typora主题推荐</li><li>文章结尾的阿里云网盘链接：我在用的</li></ol><h2 id="二，怎么换主题">二，怎么换主题</h2><ol><li>把主题压缩包下载下来解压成文件夹</li><li>打开Typora，左上角文件-》偏好设置-》左边外观-》打开主题文件夹</li><li>把你下载的主题文件夹中的<code>.css</code>文件粘贴复制到2中打开的主题文件夹</li><li>重启 Typora，上面主题就有了</li></ol><h2 id="三，主题欣赏">三，主题欣赏</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190650012.png" alt="image-20221003190650012"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190709215.png" alt="image-20221003190709215"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190721761.png" alt="image-20221003190721761"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190738616.png" alt="image-20221003190738616"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190757626.png" alt="image-20221003190757626"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190816556.png" alt="image-20221003190816556"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190831253.png" alt="image-20221003190831253"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190851302.png" alt="image-20221003190851302"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190914399.png" alt="image-20221003190914399"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003190934936.png" alt="image-20221003190934936"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003191013309.png" alt="image-20221003191013309"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003191040778.png" alt="image-20221003191040778"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003191056166.png" alt="image-20221003191056166"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003191117429.png" alt="image-20221003191117429"></p><h2 id="四，我的主题合集资源">四，我的主题合集资源</h2><blockquote><p>TyporaThemes <a href="https://www.aliyundrive.com/s/Raei5yXxYYM">https://www.aliyundrive.com/s/Raei5yXxYYM</a> 点击链接保存，或者复制本段内容，打开「阿里云盘」APP ，无需下载极速在线查看，视频原画倍速播放。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Typora美化主题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;作者：李敏烂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android49</title>
    <link href="http://lmc.pub/2022/09/20/Android49/"/>
    <id>http://lmc.pub/2022/09/20/Android49/</id>
    <published>2022-09-20T13:57:26.000Z</published>
    <updated>2022-10-04T01:34:38.069Z</updated>
    
    <content type="html"><![CDATA[<h1>【Kotlin8】Kotlin 泛型特色</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="2-14-泛型高级特性-v2">2.14 泛型高级特性</h3><h4 id="2-14-1-对泛型进行实化-v2">2.14.1 对泛型进行实化</h4><p>Java中没有泛型实化这个概念，但是需要了解一个叫泛型擦除机制。</p><blockquote><p>Java在JDK1.5之后才引入泛型，他的实现就是通过泛型擦除机制。泛型对于类型的约束只在编译时期存在 ，JVM是识别不出来我们在代码中指定的泛型类型。</p><p>所以用不了 <code>T::class.java</code> 这种语法，因为 T的实际类型在运行的时候是已经抹去的。  不能拿到泛型的实际类型（泛型无法实化）</p></blockquote><p>Kotlin 的解决方案：inline（内联函数代码替换）+ reified</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> <span class="title">getGenericType</span><span class="params">()</span></span> = T::<span class="keyword">class</span>.java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> result1 = getGenericType&lt;String&gt;()</span><br><span class="line">    <span class="keyword">val</span> result2 = getGenericType&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line">    println(<span class="string">&quot;result1 is <span class="variable">$result1</span>&quot;</span>)<span class="comment">//String</span></span><br><span class="line">    println(<span class="string">&quot;result2 is <span class="variable">$result2</span>&quot;</span>)<span class="comment">//Integer</span></span><br><span class="line">&#125;          </span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221003143929760.png" alt="image-20221003143929760"></p><p>泛型实化的应用：优化 Intent 的使用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//之前</span></span><br><span class="line"><span class="keyword">val</span> intent = Intent(context, TestActivity::<span class="keyword">class</span>.java)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param1&quot;</span>, <span class="string">&quot;data&quot;</span>)</span><br><span class="line">intent.putExtra(<span class="string">&quot;param2&quot;</span>, <span class="number">123</span>)</span><br><span class="line">context.startActivity(intent)</span><br><span class="line"></span><br><span class="line"><span class="comment">//现在 泛型实化+ 高阶函数</span></span><br><span class="line"><span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> <span class="title">startActivity</span><span class="params">(context: <span class="type">Context</span>, block: <span class="type">Intent</span>.() -&gt; <span class="type">Unit</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(context, T::<span class="keyword">class</span>.java)<span class="comment">//这个地方体现了泛型实化</span></span><br><span class="line">    intent.block()</span><br><span class="line">    context.startActivity(intent)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">startActivity&lt;TestActivity&gt;(context) &#123;</span><br><span class="line">    putExtra(<span class="string">&quot;param1&quot;</span>, <span class="string">&quot;data&quot;</span>)</span><br><span class="line">    putExtra(<span class="string">&quot;param2&quot;</span>, <span class="number">123</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kotlin将能够识别出指定泛型的实际类型，并启动相应的Activity。</p><h4 id="2-14-2-泛型的协变-v2">2.14.2 泛型的协变</h4><blockquote><p>在开始学习协变和逆变之前，我们还得先了解一个约定。一个泛型类或者泛型接口中的方法，它的参数列表是接收数据的地方，因此可以称它为in位置，而它的返回值是输出数据的地方，因此可以称它为out位置</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220726155134887.png" alt="image-20220726155134887"></p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>(<span class="keyword">val</span> name: String, <span class="keyword">val</span> age: <span class="built_in">Int</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>(name: String, age: <span class="built_in">Int</span>) : Person(name, age)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span></span>(name: String, age: <span class="built_in">Int</span>) : Person(name, age)</span><br></pre></td></tr></table></figure><p>Student 是 Person 的子类，但是 List<Student>不能成为List<Person>的子类，否则将可能存在类型转换的安全隐患</p><p>安全隐患举例：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleData</span>&lt;<span class="type">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> <span class="keyword">data</span>: T? = <span class="literal">null</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">set</span><span class="params">(t: <span class="type">T</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">data</span> = t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">get</span><span class="params">()</span></span>: T? &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">data</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> student = Student(<span class="string">&quot;Tom&quot;</span>, <span class="number">19</span>)</span><br><span class="line">    <span class="keyword">val</span> <span class="keyword">data</span> = SimpleData&lt;Student&gt;()</span><br><span class="line">    <span class="keyword">data</span>.<span class="keyword">set</span>(student)</span><br><span class="line">    handleSimpleData(<span class="keyword">data</span>) <span class="comment">// 实际上这行代码会报错，这里假设它能编译通过</span></span><br><span class="line">    <span class="keyword">val</span> studentData = <span class="keyword">data</span>.<span class="keyword">get</span>()<span class="comment">//我想拿到一个 Student 的里面确是一个 Teacher的实例</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">handleSimpleData</span><span class="params">(<span class="keyword">data</span>: <span class="type">SimpleData</span>&lt;<span class="type">Person</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> teacher = Teacher(<span class="string">&quot;Jack&quot;</span>, <span class="number">35</span>)</span><br><span class="line">    <span class="keyword">data</span>.<span class="keyword">set</span>(teacher)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即使Student是Person的子类，SimpleData<Student>并不是SimpleData<Person>的子类。</p><p>问题所在：在handleSimpleData()方法中向SimpleData<Person>里设置了一个Teacher的实例。如果SimpleData在泛型T上是只读的话，肯定就没有类型转换的安全隐患了</p><blockquote><p>泛型协变定义：假如定义了一个MyClass<T>的泛型类，其中 A 是 B 的子类，同时MyClass<A>又是MyClass<B>的子类型，那么我们就可以称MyClass 在 T 这个泛型上是协变的。</p><p>但是如何才能让MyClass<A>成为MyClass<B>的子类型呢？刚才已经讲了，如果一个泛型类在其泛型类型的数据上是只读的话，那么它是没有类型转换安全隐患的。而要实现这一点，则需要让MyClass<T>类中的所有方法都不能接收T类型的参数。换句话说，T只能出现在out位置上，而不能出现在in位置上。</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleData</span>&lt;<span class="type">out T</span>&gt;</span>(<span class="keyword">val</span> <span class="keyword">data</span>: T?) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">get</span><span class="params">()</span></span>: T? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> student = Student(<span class="string">&quot;Tom&quot;</span>, <span class="number">19</span>)</span><br><span class="line">    <span class="keyword">val</span> <span class="keyword">data</span> = SimpleData&lt;Student&gt;(student)</span><br><span class="line">    handleMyData(<span class="keyword">data</span>)</span><br><span class="line">    <span class="keyword">val</span> studentData = <span class="keyword">data</span>.<span class="keyword">get</span>()<span class="comment">//拿到了一个 Tom 学生这个实例</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">handleMyData</span><span class="params">(<span class="keyword">data</span>: <span class="type">SimpleData</span>&lt;<span class="type">Person</span>&gt;)</span></span> &#123;</span><br><span class="line"><span class="keyword">val</span> personData = <span class="keyword">data</span>.<span class="keyword">get</span>()<span class="comment">//拿到了一个 Tom 学生这个实例</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让 SimpleData 在泛型T上是协变的。</p><p>谈一下 List 简化源码：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">List</span>&lt;<span class="type">out E</span>&gt; : <span class="type">Collection</span>&lt;<span class="type">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">val</span> size: <span class="built_in">Int</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">isEmpty</span><span class="params">()</span></span>: <span class="built_in">Boolean</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">contains</span><span class="params">(element: @<span class="type">UnsafeVariance</span> <span class="type">E</span>)</span></span>: <span class="built_in">Boolean</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">iterator</span><span class="params">()</span></span>: Iterator&lt;E&gt;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">get</span><span class="params">(index: <span class="type">Int</span>)</span></span>: E</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-14-3-泛型的逆变-v2">2.14.3  泛型的逆变</h4><blockquote><p>逆变与协变却完全相反。那么这里先引出定义吧，假如定义了一个<br>MyClass<T> 的泛型类，其中A是B的子类型，同时 MyClass<B> 又是MyClass<A> 的子类型，那么我们就可以称 MyClass 在T这个泛型上是逆变的。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220726161721389.png" alt="image-20220726161721389"></p></blockquote><p>如果没有逆变很难办的情况：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Transformer</span>&lt;<span class="type">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">transform</span><span class="params">(t: <span class="type">T</span>)</span></span>: String</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> trans = <span class="keyword">object</span> : Transformer&lt;Person&gt; &#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">transform</span><span class="params">(t: <span class="type">Person</span>)</span></span>: String &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;<span class="subst">$&#123;t.name&#125;</span> <span class="subst">$&#123;t.age&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    handleTransformer(trans) <span class="comment">// 这行代码会报错</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">handleTransformer</span><span class="params">(trans: <span class="type">Transformer</span>&lt;<span class="type">Student</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> student = Student(<span class="string">&quot;Tom&quot;</span>, <span class="number">19</span>)</span><br><span class="line">    <span class="keyword">val</span> result = trans.transform(student)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Transformer<Person>并不是Transformer<Student>的子类型   -&gt; 解决就是 让 T 变为逆变</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Transformer</span>&lt;<span class="type">in T</span>&gt; </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">transform</span><span class="params">(t: <span class="type">T</span>)</span></span>: String</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么逆变的 T 不能出现在 out 位置上？</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Transformer</span>&lt;<span class="type">in T</span>&gt; </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">transform</span><span class="params">(name: <span class="type">String</span>, age: <span class="type">Int</span>)</span></span>: <span class="meta">@UnsafeVariance</span> T</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> trans = <span class="keyword">object</span> : Transformer&lt;Person&gt; &#123;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">transform</span><span class="params">(name: <span class="type">String</span>, age: <span class="type">Int</span>)</span></span>: Person &#123;</span><br><span class="line">            <span class="keyword">return</span> Teacher(name, age)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    handleTransformer(trans)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">handleTransformer</span><span class="params">(trans: <span class="type">Transformer</span>&lt;<span class="type">Student</span>&gt;)</span></span> &#123;</span><br><span class="line"><span class="keyword">val</span> result = trans.transform(<span class="string">&quot;Tom&quot;</span>, <span class="number">19</span>)<span class="comment">//期望得到一个 Student 对象，实际却是一个 Teacher 对象</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Kotlin8】Kotlin 泛型特色&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android48</title>
    <link href="http://lmc.pub/2022/09/19/Android48/"/>
    <id>http://lmc.pub/2022/09/19/Android48/</id>
    <published>2022-09-19T13:57:26.000Z</published>
    <updated>2022-10-01T11:11:11.975Z</updated>
    
    <content type="html"><![CDATA[<h1>【Service4】更多技巧</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="10-4-Service-更多技巧-v2">10.4 Service 更多技巧</h3><h4 id="10-4-1-使用前台-Service-v2">10.4.1 使用前台 Service</h4><blockquote><p>前台Service ：Android 8.0之后希望 Service 能够一直保持运行状态。<br>前台 Service 和普通 Service 最大的区别就在于，它一直会有一个正在运行的图标在系统的状态栏显示，下拉状态栏后可以看到更加详细的信息，非常类似于通知的效果</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyService</span> : <span class="type">Service</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        Log.d(<span class="string">&quot;MyService&quot;</span>, <span class="string">&quot;onCreate executed&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//下面是加的东西</span></span><br><span class="line">        <span class="keyword">val</span> manager = getSystemService(Context.NOTIFICATION_SERVICE) <span class="keyword">as</span> NotificationManager</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            <span class="keyword">val</span> channel = NotificationChannel(<span class="string">&quot;my_service&quot;</span>, <span class="string">&quot;前台Service通知&quot;</span>,</span><br><span class="line">            NotificationManager.IMPORTANCE_DEFAULT)</span><br><span class="line">            manager.createNotificationChannel(channel)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">        <span class="keyword">val</span> pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;my_service&quot;</span>)</span><br><span class="line">        .setContentTitle(<span class="string">&quot;This is content title&quot;</span>)</span><br><span class="line">        .setContentText(<span class="string">&quot;This is content text&quot;</span>)</span><br><span class="line">        .setSmallIcon(R.drawable.small_icon)</span><br><span class="line">        .setLargeIcon(BitmapFactory.decodeResource(resources, R.drawable.large_icon))</span><br><span class="line">        .setContentIntent(pi)</span><br><span class="line">        .build()</span><br><span class="line">        <span class="comment">//上面都是通知的套路，就这里改了一下子</span></span><br><span class="line">        startForeground(<span class="number">1</span>, notification)</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，从Android 9.0系统开始，使用前台Service必须在AndroidManifest.xml文件中进行权限声明才行</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;manifest xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    <span class="keyword">package</span>=<span class="string">&quot;com.example.servicetest&quot;</span>&gt;</span><br><span class="line">    &lt;uses-permission android:name=<span class="string">&quot;android.permission.FOREGROUND_SERVICE&quot;</span> /&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221001190719398.png" alt="image-20221001190719398"></p><h4 id="10-4-2-使用-IntentService-v2">10.4.2 使用 IntentService</h4><blockquote><p>Service中的代码都是默认运行在主线程当中的，如果直接在Service里处理一些耗时的逻辑，就很容易出现ANR（Application Not Responding）的情况。所以这个时候就需要用到 Android 多线程编程的技术了，我们应该在Service的每个具体的方法里开启一个子线程，然后在这里处理那些耗时的逻辑。</p></blockquote><p>本来一套逻辑</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyService</span> : <span class="type">Service</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartCommand</span><span class="params">(intent: <span class="type">Intent</span>, flags: <span class="type">Int</span>, startId: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        thread &#123;</span><br><span class="line">            <span class="comment">// 处理具体的逻辑</span></span><br><span class="line">            stopSelf()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了可以简单地创建一个异步的、会自动停止的Service，Android专门提供了一个 IntentService 类</p><p>IntentService</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyIntentService</span> : <span class="type">IntentService</span></span>(<span class="string">&quot;MyIntentService&quot;</span>) &#123;<span class="comment">//构造字符串随意好了</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onHandleIntent</span><span class="params">(intent: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">        <span class="comment">//说明这里就是一个子线程，安全而且可以自动停止</span></span><br><span class="line">        <span class="comment">// 打印当前线程的id</span></span><br><span class="line">        Log.d(<span class="string">&quot;MyIntentService&quot;</span>, <span class="string">&quot;Thread id is <span class="subst">$&#123;Thread.currentThread().name&#125;</span>&quot;</span>)</span><br><span class="line">     &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        Log.d(<span class="string">&quot;MyIntentService&quot;</span>, <span class="string">&quot;onDestroy executed&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后要在子类中实现 onHandleIntent() 这个抽象方法，这个方法中可以处理一些耗时的逻辑，而不用担心ANR的问题，因为这个方法已经是在子线程中运行的了。这里为了证实一下，我们在 onHandleIntent() 方法中打印了当前线程名。另外，根据 IntentService 的特性，这个 Service 在运行结束后应该是会自动停止的，所以我们又重写了 onDestroy() 方法，在这里也打印了一行日志，以证实 Service 是不是停止了。</p><p>验证工作：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/startIntentServiceBtn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Start IntentService&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    startIntentServiceBtn.setOnClickListener &#123;</span><br><span class="line">            <span class="comment">// 打印主线程的id</span></span><br><span class="line">            Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;Thread id is <span class="subst">$&#123;Thread.currentThread().name&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, MyIntentService::<span class="keyword">class</span>.java)</span><br><span class="line">            startService(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，Service 有没有在AndroidManifest 中注册（手动自动）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">package</span>=<span class="string">&quot;com.example.servicetest&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;.MyIntentService&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221001190215550.png" alt="image-20221001190215550"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Service4】更多技巧&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android47</title>
    <link href="http://lmc.pub/2022/09/18/Android47/"/>
    <id>http://lmc.pub/2022/09/18/Android47/</id>
    <published>2022-09-18T13:57:26.000Z</published>
    <updated>2022-10-01T10:26:00.165Z</updated>
    
    <content type="html"><![CDATA[<h1>【Service3】Service生命周期</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="10-3-Service-生命周期-v2">10.3 Service 生命周期</h3><blockquote><p>从调用Context的startService()方法，相应的Service就会启动，并回调onStartCommand()方法。如果这个Service之前还没有创建过，onCreate()方法会先于onStartCommand()方法执行。Service启动了之后会一直保持运行状态，直到stopService()或stopSelf()方法被调用，或者被系统回收。注意，虽然每调用一次startService()方法，onStartCommand()就会执行一次，但实际上每个Service只会存在一个实例。也就是说他是重新开启自己，相当于刷新了一下。所以不管你调用了多少次startService()方法，只需调用一次stopService()或stopSelf()方法，Service就会停止。</p><p>调用Context的bindService()来获取一个Service 的持久连接，这时就会回调Service中的onBind()方法。类似地，如果这个Service之前还没有创建过，onCreate()方法会先于onBind()方法执行。之后，调用方可以获取到onBind()方法里返回的IBinder对象的实例，这样就能自由地和Service进行通信了。只要调用方和Service之间的连接没有断开，Service就会一直保持运行状态，直到被系统回收。<br>当调用了startService()方法后，再去调用stopService()方法。这时Service中的<br>onDestroy()方法就会执行，表示Service已经销毁了。类似地，当调用了bindService()方法后，再去调用unbindService()方法，onDestroy()方法也会执行，这两种情况都很好理解。</p><p>但是需要注意，我们是完全有可能对一个Service既调用了startService()方法，又调用了bindService()方法的，在这种情况下该如何让Service销毁呢？根据Android系统的机制，一个Service只要被启动或者被绑定了之后，就会处于运行状态，<strong>必须要让以上两种条件同时不满足</strong>，Service才能被销毁。所以，这种情况下要同时调用stopService()和unbindService()方法，onDestroy()方法才会执行。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Service3】Service生命周期&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android46</title>
    <link href="http://lmc.pub/2022/09/17/Android46/"/>
    <id>http://lmc.pub/2022/09/17/Android46/</id>
    <published>2022-09-17T13:57:26.000Z</published>
    <updated>2022-10-01T10:12:39.048Z</updated>
    
    <content type="html"><![CDATA[<h1>【Service2】Service基本用法</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="10-2-Service-基本用法-v2">10.2 Service 基本用法</h3><p>新建项目</p><h4 id="10-2-1-定义一个-Service-v2">10.2.1 定义一个 Service</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android46</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyService</span> : <span class="type">Service</span></span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> tag = <span class="string">&quot;MyService&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//唯一抽象方法</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBind</span><span class="params">(intent: <span class="type">Intent</span>)</span></span>: IBinder &#123;</span><br><span class="line">        TODO(<span class="string">&quot;Return the communication channel to the service.&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第一次创建Service执行</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        Log.d(tag, <span class="string">&quot;onCreating&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//启动Service时候调用</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartCommand</span><span class="params">(intent: <span class="type">Intent</span>?, flags: <span class="type">Int</span>, startId: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        Log.d(tag, <span class="string">&quot;onStartCommanding&quot;</span>)<span class="comment">//这个必须在上面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//销毁Service时候调用</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        Log.d(tag, <span class="string">&quot;onDestoring&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 onCreate() 方法会在 Service 创建的时候调用，onStartCommand() 方法会在每次Service 启动的时候调用，onDestroy() 方法会在 Service 销毁的时候调用。</p><h4 id="10-2-2-启动和停止-Service-v2">10.2.2 启动和停止 Service</h4><p>xml文件自己加一下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android46</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.startServiceBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,MyService::<span class="keyword">class</span>.java)</span><br><span class="line">            startService(intent)<span class="comment">//启动Service</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.stopServiceBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>,MyService::<span class="keyword">class</span>.java)</span><br><span class="line">            stopService(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service 自我停止运行 = Service 内部调用stopSelf()</p><p>APP在前台可见时候 Service 才能保证稳定运行，一旦应用进入后台之后，Service随时都有可能被系统回收，解决办法可以使用 前台Service 或者 WorkManager</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220928161639921.png" alt="image-20220928161639921"></p><h4 id="10-2-3-Activity和Service进行通信-v2">10.2.3 Activity和Service进行通信</h4><p>利用 onBind 方法</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyService</span> : <span class="type">Service</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> mBinder = DownloadBinder()</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadBinder</span> : <span class="type">Binder</span></span>() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">startDownload</span><span class="params">()</span></span> &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;MyService&quot;</span>, <span class="string">&quot;startDownload executed&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">getProgress</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;MyService&quot;</span>, <span class="string">&quot;getProgress executed&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBind</span><span class="params">(intent: <span class="type">Intent</span>)</span></span>: IBinder &#123;</span><br><span class="line">    <span class="keyword">return</span> mBinder</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/bindServiceBtn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Bind Service&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/unbindServiceBtn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Unbind Service&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了在Activity中控制Service1，可以把两者绑定起来</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> downloadBinder: MyService.DownloadBinder</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> connection = <span class="keyword">object</span> : ServiceConnection &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceConnected</span><span class="params">(name: <span class="type">ComponentName</span>, service: <span class="type">IBinder</span>)</span></span> &#123;<span class="comment">//Activity与Service成功绑定的时候调用</span></span><br><span class="line">            downloadBinder = service <span class="keyword">as</span> MyService.DownloadBinder<span class="comment">//向下转型</span></span><br><span class="line">            <span class="comment">//从这里开始可以从Activity中调用Service中的方法</span></span><br><span class="line">            downloadBinder.startDownload()</span><br><span class="line">            downloadBinder.getProgress()</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onServiceDisconnected</span><span class="params">(name: <span class="type">ComponentName</span>)</span></span> &#123;</span><br><span class="line">            <span class="comment">//在Service的创建进程崩溃或者被杀掉的时候</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="comment">//这个叫匿名类</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.bindServiceBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, MyService::<span class="keyword">class</span>.java)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//第三个参数则是一个标志位，这里传入BIND_AUTO_CREATE表示在Activity和Service进行绑定后自动创建Service。这会使得MyService中的onCreate()方法得到执行，但onStartCommand()方法不会执行</span></span><br><span class="line">            <span class="comment">//也就是说这种的一绑定的话就会自动 create Service</span></span><br><span class="line">            bindService(intent, connection, Context.BIND_AUTO_CREATE) <span class="comment">// 绑定Service</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.unbindServiceBtn).setOnClickListener &#123;</span><br><span class="line">        unbindService(connection) <span class="comment">// 解绑Service</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service在整个应用程序范围内都是通用的，MyService可以和多个Activity进行绑定，而且在绑定完成后，它们都可以获取相同的DownloadBinder实例。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220928173327494.png" alt="image-20220928173327494"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Service2】Service基本用法&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android45</title>
    <link href="http://lmc.pub/2022/09/16/Android45/"/>
    <id>http://lmc.pub/2022/09/16/Android45/</id>
    <published>2022-09-16T13:57:26.000Z</published>
    <updated>2022-10-01T09:43:32.966Z</updated>
    
    <content type="html"><![CDATA[<h1>【Service1】多线程编程</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h2 id="十，Service-v2">十，Service</h2><p>Service并不是运行在一个独立的进程当中的，而是依赖于创建Service时所在的 APP 进程。  当某个应用程序进程被杀掉时，所有依赖于该进程的Service也会停止运行。</p><h3 id="10-1-Android-多线程编程-v2">10.1  Android 多线程编程</h3><h4 id="10-1-1-线程基本用法-v2">10.1.1 线程基本用法</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">thread &#123;</span><br><span class="line"><span class="comment">// 编写具体的逻辑 从这里开始开启了一个子线程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>演变和其他版本可以看参考教材《第一行代码  第三版》</p><h4 id="10-1-2-在子线程中更新-UI-v2">10.1.2 在子线程中更新 UI</h4><blockquote><p>Android的 UI 也是线程不安全的。</p><h2 id="Android不允许在子线程中操作UI-v2">Android不允许在子线程中操作UI</h2><p>解决办法：异步消息处理机制</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/changeTextBtn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Change Text&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello world&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android45</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.os.Handler</span><br><span class="line"><span class="keyword">import</span> android.os.Looper</span><br><span class="line"><span class="keyword">import</span> android.os.Message</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView</span><br><span class="line"><span class="keyword">import</span> kotlin.concurrent.thread</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> updateText = <span class="number">1</span></span><br><span class="line">    <span class="keyword">val</span> handler = <span class="keyword">object</span> : Handler(Looper.getMainLooper())&#123;</span><br><span class="line">        <span class="comment">//主线程处理处</span></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">handleMessage</span><span class="params">(msg: <span class="type">Message</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">when</span> (msg.what)&#123;</span><br><span class="line">                <span class="comment">//在这里进行UI操作</span></span><br><span class="line">                updateText -&gt; findViewById&lt;TextView&gt;(R.id.textView).text = <span class="string">&quot;你好，世界。&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用异步消息处理机制</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.changeTextBtn).setOnClickListener &#123;</span><br><span class="line">            thread &#123;</span><br><span class="line">                <span class="comment">//这里面就是子线程啦</span></span><br><span class="line">                <span class="keyword">val</span> msg = Message()</span><br><span class="line">                msg.what = updateText</span><br><span class="line">                handler.sendMessage(msg)<span class="comment">//将Message对象发送出去</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%8A%A8%E7%94%BB.gif" alt="动画"></p><h4 id="10-1-3-解析异步消息处理机制-v2">10.1.3 解析异步消息处理机制</h4><p>组成：Message、Handler、MessageQueue 和 Looper。</p><ol><li>Message<br>不同线程之间传递的消息，内部携带少量的信息，<br>Message的what字段，除此之外还可以使用arg1和arg2字段来携带一些整型数据，使用obj字段携带一个Object对象。</li><li>Handler<br>Handler顾名思义也就是处理者的意思，它主要是用于发送和处理消息的。发送消息一般是子线程使用Handler的sendMessage()方法、post()方法等，而发出的消息经过一系列地辗转处理后，最终会传递到Handler的handleMessage()方法中。</li><li>MessageQueue<br>MessageQueue 是消息队列的意思，它主要用于存放所有通过Handler发送的消息。这部分消息会一直存在于消息队列中，等待被处理。每个线程中只会有一 MessageQueue对象。</li><li>Looper<br>Looper 是每个线程中的 MessageQueue 的管家，调用 Looper 的 loop() 方法后，就会进入一个无限循环当中，然后每当发现MessageQueue中存在一条消息时，就会将它取出，并传递到Handler的handleMessage()方法中。每个线程中只会有一个Looper对象。</li></ol><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220726104234370.png" alt="image-20220726104234370"></p><p>异步消息处理流程：</p><p>首先需要在主线程当中创建一个Handler对象，并重写handleMessage()方法。然后当子线程中需要进行UI操作时，就创建一个Message对象，并通过Handler将这条消息发送出去。之后这条消息会被添加到MessageQueue的队列中等待被处理，而Looper则会一直尝试从MessageQueue中取出待处理消息，最后分发回Handler的handleMessage()方法中。由于Handler的构造函数中我们传入了Looper.getMainLooper()，所以此时handleMessage()方法中的代码也会在主线程中运行，于是我们在这里就可以安心地进行UI操作了。</p><h4 id="10-1-4-使用AsyncTask-v2">10.1.4 使用AsyncTask</h4><p>用来取代啥子异步信息处理机制的</p><p>AsyncTask是抽象类，想使用就必须创建一个子类去继承。在继承时我们可以为AsyncTask类指定3个泛型参数</p><ul><li>Params。在执行AsyncTask时需要传入的参数，可用于在后台任务中使用。</li><li>Progress。在后台任务执行时，如果需要在界面上显示当前的进度，则使用这里指定的泛型作为进度单位。</li><li>Result。当任务执行完毕后，如果需要对结果进行返回，则使用这里指定的泛型作为返回值类型。</li></ul><p>这个抽象类需要重写的方法</p><ol><li><p>onPreExecute()<br>在后台任务开始执行之前调用，用于进行一些界面上的初始化操作，比如显示一个进度条对话框等。</p></li><li><p>doInBackground(Params…)<br>这个方法中的所有代码都会在 <strong>子线程</strong> 中运行，我们应该在这里去处理所有的耗时任务。任务一旦完成，就可以通过return语句将任务的执行结果返回，如果AsyncTask的第三个泛型参数指定的是Unit，就可以不返回任务执行结果。注意，在这个方法中是不可以进行UI操作的，如果需要更新UI元素，比如说反馈当前任务的执行进度，可以调用 publishProgress (Progress…) 方法来完成。</p></li><li><p>onProgressUpdate(Progress…)</p><p>当在后台任务中调用了publishProgress(Progress…)方法后，onProgressUpdate (Progress…)方法就会很快被调用，该方法中携带的参数就是在后台任务中传递过来的。在这个方法中可以<strong>对UI进行操作</strong>，利用参数中的数值就可以对界面元素进行相应的更新。</p></li><li><p>onPostExecute(Result)<br>当后台任务执行完毕并通过return语句进行返回时，这个方法就很快会被调用。返回的数据会作为参数传递到此方法中，可以利用返回的数据进行一些UI操作，比如说提醒任务执行的结果，以及关闭进度条对话框等。</p></li></ol><p>完整 Async Task</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span> : <span class="type">AsyncTask</span>&lt;<span class="type">Unit, Int, Boolean</span>&gt;</span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPreExecute</span><span class="params">()</span></span> &#123;</span><br><span class="line">    progressDialog.show() <span class="comment">// 显示进度对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//只有我是在子线程中干活的</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">doInBackground</span><span class="params">(<span class="keyword">vararg</span> params: <span class="type">Unit</span>?)</span></span> = <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                <span class="keyword">val</span> downloadPercent = doDownload() <span class="comment">// 这是一个虚构的方法</span></span><br><span class="line">                publishProgress(downloadPercent)<span class="comment">//就一句这个直接从子线程切换到UI线程</span></span><br><span class="line">                <span class="keyword">if</span> (downloadPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="literal">true</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">        <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onProgressUpdate</span><span class="params">(<span class="keyword">vararg</span> values: <span class="type">Int</span>?)</span></span> &#123;</span><br><span class="line">        <span class="comment">// 在这里更新下载进度</span></span><br><span class="line">        progressDialog.setMessage(<span class="string">&quot;Downloaded <span class="subst">$&#123;values[<span class="number">0</span>]&#125;</span>%&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onPostExecute</span><span class="params">(result: <span class="type">Boolean</span>)</span></span> &#123;</span><br><span class="line">        progressDialog.dismiss()<span class="comment">// 关闭进度对话框</span></span><br><span class="line">        <span class="comment">// 在这里提示下载结果</span></span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            Toast.makeText(context, <span class="string">&quot;Download succeeded&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Toast.makeText(context, <span class="string">&quot; Download failed&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动这个任务</span></span><br><span class="line">DownloadTask().execute()</span><br></pre></td></tr></table></figure><p>简单来说，使用AsyncTask的诀窍就是，在doInBackground()方法中执行具体的耗时任务，在onProgressUpdate()方法中进行UI操作，在onPostExecute()方法中执行一些任务的收尾工作。</p><p>你也可以给 execute() 方法传入任意数量的参数，这些参数将会传递到 DownloadTask 的 doInBackground() 方法当中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Service1】多线程编程&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android44</title>
    <link href="http://lmc.pub/2022/09/15/Android44/"/>
    <id>http://lmc.pub/2022/09/15/Android44/</id>
    <published>2022-09-15T13:57:26.000Z</published>
    <updated>2022-09-29T04:32:26.493Z</updated>
    
    <content type="html"><![CDATA[<h1>【Kotlin7】infix</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="2-13-infix-增强代码可读性-v2">2.13  infix 增强代码可读性</h3><p>未被 infix 加工前</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">&quot;Hello Kotlin&quot;</span>.startsWith(<span class="string">&quot;Hello&quot;</span>)) &#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>infix 开始加工</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">infix</span> <span class="function"><span class="keyword">fun</span> String.<span class="title">beginsWith</span><span class="params">(prefix: <span class="type">String</span>)</span></span> = startsWith(prefix)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&quot;Hello Kotlin&quot;</span> beginsWith <span class="string">&quot;Hello&quot;</span>) &#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>infix 函数允许我们将函数调用时的小数点、括号等计算机相关的语法去掉，从而使用一种更接近英语的语法来编写程序，让代码看起来更加具有可读性。</p><p>infix 函数限制：<br>首先，infix 函数是不能定义成顶层函数的，它必须是某个类的成员函数，可以使用扩展函数的方式将它定义到某个类当中；<br>其次，infix 函数必须接收且只能接收一个参数</p><p>再看两个</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Pear&quot;</span>, <span class="string">&quot;Grape&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (list.contains(<span class="string">&quot;Banana&quot;</span>)) &#123;</span><br><span class="line">    <span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">infix</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Collection<span class="type">&lt;T&gt;</span>.<span class="title">has</span><span class="params">(element: <span class="type">T</span>)</span></span> = contains(element)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Pear&quot;</span>, <span class="string">&quot;Grape&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (list has <span class="string">&quot;Banana&quot;</span>) &#123;</span><br><span class="line"><span class="comment">// 处理具体的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//to 源码</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">infix</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;A, B&gt;</span> A.<span class="title">to</span><span class="params">(that: <span class="type">B</span>)</span></span>: Pair&lt;A, B&gt; = Pair(<span class="keyword">this</span>, that)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Kotlin7】infix&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android43</title>
    <link href="http://lmc.pub/2022/09/14/Android43/"/>
    <id>http://lmc.pub/2022/09/14/Android43/</id>
    <published>2022-09-14T13:57:26.000Z</published>
    <updated>2022-09-29T04:28:28.347Z</updated>
    
    <content type="html"><![CDATA[<h1>【九，多媒体3】播放多媒体</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="9-3-播放多媒体文件-v2">9.3  播放多媒体文件</h3><h4 id="9-3-1-播放音频-v2">9.3.1 播放音频</h4><p>MediaPlayer 类</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220725213752826.png" alt="image-20220725213752826"></p><p>MediaPlayer 的工作流程</p><ol><li>创建MediaPlayer 对象</li><li>调 setDataSource()方法设置音频文件的路径</li><li>调用 prepare() 方法使 MediaPlayer 进入准备状态</li><li>接下来调用 start() 方法就可以开始播放音频</li><li>调用pause()方法就会暂停播放</li><li>调用 reset() 方法就会停止播放。</li></ol><p>新建一个项目</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/play&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Play&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/pause&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Pause&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/stop&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Stop&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>main 下创建一个assets目录，并在这个目录下存放任意文件和子目录，这些文件和子目录在项目打包时会一并被打包到安装文件中，然后我们在程序中就可以借助AssetManager这个类提供的接口对assets目录下的文件进行读取。</p><p>右击app/src/main→New→Directory，在弹出的对话框中输入“assets”，目录就创建好了，放一个mp3文件</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> mediaPlayer = MediaPlayer()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        initMediaPlayer()</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.play).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mediaPlayer.isPlaying) &#123;</span><br><span class="line">                mediaPlayer.start() <span class="comment">// 开始播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.pause).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (mediaPlayer.isPlaying) &#123;</span><br><span class="line">                mediaPlayer.pause() <span class="comment">// 暂停播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.stop).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (mediaPlayer.isPlaying) &#123;</span><br><span class="line">                mediaPlayer.reset() <span class="comment">// 停止播放</span></span><br><span class="line">                initMediaPlayer()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">initMediaPlayer</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> assetManager = assets</span><br><span class="line">        <span class="keyword">val</span> fd = assetManager.openFd(<span class="string">&quot;music.mp3&quot;</span>)</span><br><span class="line">        mediaPlayer.setDataSource(fd.fileDescriptor, fd.startOffset, fd.length)</span><br><span class="line">        mediaPlayer.prepare()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy()</span><br><span class="line">        mediaPlayer.stop()</span><br><span class="line">        mediaPlayer.release()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-3-2-播放视频-v2">9.3.2 播放视频</h4><p>VideoView 工具类</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220725215336925.png" alt="image-20220725215336925"></p><p>VideoView不支持直接播放assets目录下的视频资源<br>res目录下允许我们再创建一个raw目录，音频、视频之类的资源文件可以放在这里，VideoView是可以直接播放这个目录下的视频资源的。  mp4</p><p>新建一个项目</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/play&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Play&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/pause&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Pause&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/replay&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Replay&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">VideoView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/videoView&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span></span><br><span class="line">&lt;/LinearLay</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android43</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> android.widget.VideoView</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;android.resource://<span class="variable">$packageName</span>/<span class="subst">$&#123;R.raw.video&#125;</span>&quot;</span>)</span><br><span class="line">        videoView.setVideoURI(uri)</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.play).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (!videoView.isPlaying)&#123;</span><br><span class="line">                videoView.start()<span class="comment">//开始播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        findViewById&lt;Button&gt;(R.id.pause).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (videoView.isPlaying)&#123;</span><br><span class="line">                videoView.pause()<span class="comment">//暂停播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        findViewById&lt;Button&gt;(R.id.replay).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">if</span> (videoView.isPlaying)&#123;<span class="comment">//其实可以去掉</span></span><br><span class="line">                videoView.resume()<span class="comment">//重新播放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDestroy</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="keyword">super</span>.onDestroy()</span><br><span class="line">            videoView.<span class="keyword">suspend</span>()</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【九，多媒体3】播放多媒体&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://lmc.pub/2022/09/14/Device%20File%20Explorer%20There%20were%20errors%20downloading%20files%20andor%20directories%20Cannot%20delete%20&#39;CUsersMicenleeDesktop/"/>
    <id>http://lmc.pub/2022/09/14/Device%20File%20Explorer%20There%20were%20errors%20downloading%20files%20andor%20directories%20Cannot%20delete%20&#39;CUsersMicenleeDesktop/</id>
    <published>2022-09-14T05:10:07.040Z</published>
    <updated>2022-10-05T11:34:58.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Device-File-Explorer-There-were-errors-downloading-files-and-or-directories-Cannot-delete-‘C-Users-Micenlee-Desktop-BookStore-db’">Device File Explorer /There were errors downloading files and/or directories:/ Cannot delete ‘C:\Users\Micenlee\Desktop\BookStore.db’</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914125755795.png" alt="image-20220914125755795"></p><p>上 Android 课的时候，到了SQLite。在 Device File Explorer 中准备把 db文件另存为时候。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914125946032.png" alt="image-20220914125946032"></p><p>保存目录下有同名文件</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130225271.png" alt="image-20220914130225271"></p><p>保存就报错说，删除不了原来同名文件。</p><blockquote><p>stackoverflow该问题解答（唯一中文就是俺写的）：<a href="https://stackoverflow.com/questions/52202720/android-studio-device-file-explorer-gets-stuck-when-downloading-a-file">https://stackoverflow.com/questions/52202720/android-studio-device-file-explorer-gets-stuck-when-downloading-a-file</a></p></blockquote><p>实际原因：</p><p>自己在AS中的DB Browser 中已经打开了，而在win11 下，已经打开的文件是删除不了的</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130547642.png" alt="image-20220914130547642"></p><p>解决：</p><p>打开DB Browser ,跟图操作</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130751440.png" alt="image-20220914130751440"></p><p>把这所有的connection 全 删了（选中一个点一下➖）</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130827360.png" alt="image-20220914130827360"></p><p>然后再回去 Save As就好了</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914131001014.png" alt="image-20220914131001014"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Device-File-Explorer-There-were-errors-downloading-files-and-or-directories-Cannot-delete-‘C-Users-Micenlee-Desktop-BookStore-db’&quot;&gt;D</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Android42</title>
    <link href="http://lmc.pub/2022/09/13/Android42/"/>
    <id>http://lmc.pub/2022/09/13/Android42/</id>
    <published>2022-09-13T13:57:26.000Z</published>
    <updated>2022-09-29T03:43:48.607Z</updated>
    
    <content type="html"><![CDATA[<h1>【九，多媒体2】拍照</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><h3 id="9-2-摄像头-相册-v2">9.2  摄像头&amp;相册</h3><h4 id="9-2-1-调用摄像头拍照-v2">9.2.1 调用摄像头拍照</h4><p>新建一个项目</p><p>xml 中</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">android:layout_height=<span class="string">&quot;match_parent&quot;</span> &gt;</span><br><span class="line">    &lt;Button</span><br><span class="line">    android:id=<span class="string">&quot;@+id/takePhotoBtn&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:text=<span class="string">&quot;Take Photo&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">    android:id=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_gravity=<span class="string">&quot;center_horizontal&quot;</span> /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>有个 button 和 一个 image 显示拍出来的照片</p><p>/系统文件/Android/data/<package name>/cache</p><p>MainActivity</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android42</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix</span><br><span class="line"><span class="keyword">import</span> android.media.ExifInterface</span><br><span class="line"><span class="keyword">import</span> android.media.Image</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> android.os.Build</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.FileProvider</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> imageUri: Uri</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> outputImage: File</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> activityResultLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult())&#123;</span><br><span class="line">        result -&gt;</span><br><span class="line">        <span class="keyword">if</span> (result.resultCode == RESULT_OK )&#123;</span><br><span class="line">            <span class="comment">//返回处理</span></span><br><span class="line">            <span class="keyword">val</span> bitmap = BitmapFactory.decodeStream(contentResolver.openInputStream(imageUri))<span class="comment">//解析为Bitmap对象</span></span><br><span class="line">            findViewById&lt;ImageView&gt;(R.id.imageView).setImageBitmap(rotateIfRequired(bitmap))<span class="comment">//让照片在页面控件中显示出来</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.takePhotoBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">//做放图片的文件</span></span><br><span class="line">            outputImage = File(externalCacheDir, <span class="string">&quot;output_image.jpg&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (outputImage.exists())&#123;</span><br><span class="line">                outputImage.delete()</span><br><span class="line">            &#125;</span><br><span class="line">            outputImage.createNewFile()</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//拿到照片文件的本地真实路径</span></span><br><span class="line">            imageUri = <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N)&#123;</span><br><span class="line">                FileProvider.getUriForFile(<span class="keyword">this</span>,<span class="string">&quot;com.lmc.android42.fileprovider&quot;</span>,outputImage)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Uri.fromFile(outputImage)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//启动相机程序</span></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="string">&quot;android.media.action.IMAGE_CAPTURE&quot;</span>)</span><br><span class="line">            intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri)<span class="comment">//指明照片保存地址</span></span><br><span class="line">            activityResultLauncher.launch(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面的可以看不懂没关系，就是如有需要就把图片反转一下</span></span><br><span class="line">    <span class="comment">//判断是否需要旋转</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">rotateIfRequired</span><span class="params">(bitmap: <span class="type">Bitmap</span>)</span></span>: Bitmap &#123;</span><br><span class="line">        <span class="keyword">val</span> exif = ExifInterface(outputImage.path)</span><br><span class="line">        <span class="keyword">val</span> orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,ExifInterface.ORIENTATION_NORMAL)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">when</span> (orientation) &#123;</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_90 -&gt; rotateBitmap(bitmap, <span class="number">90</span>)</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_180 -&gt; rotateBitmap(bitmap, <span class="number">180</span>)</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_270 -&gt; rotateBitmap(bitmap, <span class="number">270</span>)</span><br><span class="line">            <span class="keyword">else</span> -&gt; bitmap</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">rotateBitmap</span><span class="params">(bitmap: <span class="type">Bitmap</span>, degree: <span class="type">Int</span>)</span></span>: Bitmap &#123;</span><br><span class="line">        <span class="keyword">val</span> matrix = Matrix()</span><br><span class="line">        matrix.postRotate(degree.toFloat())</span><br><span class="line">        <span class="keyword">val</span> rotatedBitmap = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.width, bitmap.height,matrix, <span class="literal">true</span>)</span><br><span class="line">        bitmap.recycle() <span class="comment">// 将不再需要的Bitmap对象回收</span></span><br><span class="line">        <span class="keyword">return</span> rotatedBitmap</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AndroidManifest.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">package</span>=<span class="string">&quot;com.example.cameraalbumtest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">&quot;@style/AppTheme&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;androidx.core.content.FileProvider&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:authorities</span>=<span class="string">&quot;com.lmc.android42.fileprovider&quot;</span></span></span><br><span class="line"><span class="tag">       &lt;！<span class="attr">-</span>上面这个属性必须跟<span class="attr">FileProvider.getUriForFile</span>第二个参数一致  <span class="attr">-</span>&gt;</span></span><br><span class="line">        android:exported=&quot;false&quot;</span><br><span class="line">        android:grantUriPermissions=&quot;true&quot;&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:resource</span>=<span class="string">&quot;@xml/file_paths&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>右击xml目录→New→File，创建一个file_paths.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">paths</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">external-path</span> <span class="attr">name</span>=<span class="string">&quot;my_images&quot;</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">paths</span>&gt;</span></span><br></pre></td></tr></table></figure><p>external-path就是用来指定Uri共享路径的，name属性的值可以随便填，path属性的值表示共享的具体路径。这里使用一个单斜线表示将整个系统目录进行共享，当然你也可以仅共享存放output_image.jpg这张图片的路径。</p><h4 id="9-2-2-从相册中选择图片-v2">9.2.2 从相册中选择图片</h4><p>在上面的APP中直接改好了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/fromAlbumBtn&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">&quot;From Album&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">val</span> activityResultLauncher2 = registerForActivityResult(ActivityResultContracts.StartActivityForResult())&#123;</span><br><span class="line">            result -&gt;</span><br><span class="line">        <span class="keyword">if</span> (result.resultCode == RESULT_OK )&#123;</span><br><span class="line">            <span class="keyword">val</span> <span class="keyword">data</span> = result.<span class="keyword">data</span></span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">data</span> != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">data</span>.<span class="keyword">data</span>?.let &#123; uri -&gt;</span><br><span class="line">                    <span class="comment">//将选择的图片显示</span></span><br><span class="line">                    <span class="keyword">val</span> bitmap2 = getBitmapFromUri(uri)</span><br><span class="line">                    findViewById&lt;ImageView&gt;(R.id.imageView).setImageBitmap(bitmap2)<span class="comment">//让照片在页面控件中显示出来</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        findViewById&lt;Button&gt;(R.id.fromAlbumBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">//打开文件选择器</span></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(Intent.ACTION_OPEN_DOCUMENT)</span><br><span class="line">            intent.addCategory(Intent.CATEGORY_OPENABLE)</span><br><span class="line">            <span class="comment">//指定显示图片</span></span><br><span class="line">            intent.type = <span class="string">&quot;image/*&quot;</span></span><br><span class="line">            activityResultLauncher2.launch(intent)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将Uri转换成Bitmap对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getBitmapFromUri</span><span class="params">(uri: <span class="type">Uri</span>)</span></span> = contentResolver</span><br><span class="line">    .openFileDescriptor(uri, <span class="string">&quot;r&quot;</span>)?.use &#123;</span><br><span class="line">    BitmapFactory.decodeFileDescriptor(it.fileDescriptor)</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思考：如果照片像素很高直接加载到内存会直接崩溃的，一般会压缩之后再导进来的。</p><p>最终成品贴一下：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android42</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix</span><br><span class="line"><span class="keyword">import</span> android.media.ExifInterface</span><br><span class="line"><span class="keyword">import</span> android.media.Image</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> android.os.Build</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.FileProvider</span><br><span class="line"><span class="keyword">import</span> java.io.File</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> imageUri: Uri</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> outputImage: File</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> activityResultLauncher1 = registerForActivityResult(ActivityResultContracts.StartActivityForResult())&#123;</span><br><span class="line">        result -&gt;</span><br><span class="line">        <span class="keyword">if</span> (result.resultCode == RESULT_OK )&#123;</span><br><span class="line">            <span class="comment">//返回处理</span></span><br><span class="line">            <span class="keyword">val</span> bitmap1 = BitmapFactory.decodeStream(contentResolver.openInputStream(imageUri))<span class="comment">//解析为Bitmap对象</span></span><br><span class="line">            findViewById&lt;ImageView&gt;(R.id.imageView).setImageBitmap(rotateIfRequired(bitmap1))<span class="comment">//让照片在页面控件中显示出来</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> activityResultLauncher2 = registerForActivityResult(ActivityResultContracts.StartActivityForResult())&#123;</span><br><span class="line">            result -&gt;</span><br><span class="line">        <span class="keyword">if</span> (result.resultCode == RESULT_OK )&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> <span class="keyword">data</span> = result.<span class="keyword">data</span></span><br><span class="line">            <span class="keyword">if</span> ( <span class="keyword">data</span> != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">data</span>.<span class="keyword">data</span>?.let &#123; uri -&gt;</span><br><span class="line">                    <span class="comment">//将选择的图片显示</span></span><br><span class="line">                    <span class="keyword">val</span> bitmap2 = getBitmapFromUri(uri)</span><br><span class="line">                    findViewById&lt;ImageView&gt;(R.id.imageView).setImageBitmap(bitmap2)<span class="comment">//让照片在页面控件中显示出来</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.takePhotoBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">//做图片的文件</span></span><br><span class="line">             outputImage = File(externalCacheDir, <span class="string">&quot;output_image.jpg&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (outputImage.exists())&#123;</span><br><span class="line">                outputImage.delete()</span><br><span class="line">            &#125;</span><br><span class="line">            outputImage.createNewFile()</span><br><span class="line">            <span class="comment">//拿到照片文件的本地真是路径</span></span><br><span class="line">            imageUri = <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N)&#123;</span><br><span class="line">                FileProvider.getUriForFile(<span class="keyword">this</span>,<span class="string">&quot;com.lmc.android42.fileprovider&quot;</span>,outputImage)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                Uri.fromFile(outputImage)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//启动相机程序</span></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="string">&quot;android.media.action.IMAGE_CAPTURE&quot;</span>)</span><br><span class="line">            intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri)<span class="comment">//指明照片保存地址</span></span><br><span class="line">            activityResultLauncher1.launch(intent)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.fromAlbumBtn).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">//打开文件选择器</span></span><br><span class="line">            <span class="keyword">val</span> intent = Intent(Intent.ACTION_OPEN_DOCUMENT)</span><br><span class="line">            intent.addCategory(Intent.CATEGORY_OPENABLE)</span><br><span class="line">            <span class="comment">//指定显示图片</span></span><br><span class="line">            intent.type = <span class="string">&quot;image/*&quot;</span></span><br><span class="line">            activityResultLauncher2.launch(intent)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//下面的可以看不懂没关系，就是如有需要就把图片反转一下</span></span><br><span class="line">    <span class="comment">//判断是否需要旋转</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">rotateIfRequired</span><span class="params">(bitmap: <span class="type">Bitmap</span>)</span></span>: Bitmap &#123;</span><br><span class="line">        <span class="keyword">val</span> exif = ExifInterface(outputImage.path)</span><br><span class="line">        <span class="keyword">val</span> orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,ExifInterface.ORIENTATION_NORMAL)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">when</span> (orientation) &#123;</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_90 -&gt; rotateBitmap(bitmap, <span class="number">90</span>)</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_180 -&gt; rotateBitmap(bitmap, <span class="number">180</span>)</span><br><span class="line">            ExifInterface.ORIENTATION_ROTATE_270 -&gt; rotateBitmap(bitmap, <span class="number">270</span>)</span><br><span class="line">            <span class="keyword">else</span> -&gt; bitmap</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">rotateBitmap</span><span class="params">(bitmap: <span class="type">Bitmap</span>, degree: <span class="type">Int</span>)</span></span>: Bitmap &#123;</span><br><span class="line">        <span class="keyword">val</span> matrix = Matrix()</span><br><span class="line">        matrix.postRotate(degree.toFloat())</span><br><span class="line">        <span class="keyword">val</span> rotatedBitmap = Bitmap.createBitmap(bitmap, <span class="number">0</span>, <span class="number">0</span>, bitmap.width, bitmap.height,matrix, <span class="literal">true</span>)</span><br><span class="line">        bitmap.recycle() <span class="comment">// 将不再需要的Bitmap对象回收</span></span><br><span class="line">        <span class="keyword">return</span> rotatedBitmap</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将Uri转换成Bitmap对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getBitmapFromUri</span><span class="params">(uri: <span class="type">Uri</span>)</span></span> = contentResolver</span><br><span class="line">        .openFileDescriptor(uri, <span class="string">&quot;r&quot;</span>)?.use &#123;</span><br><span class="line">            BitmapFactory.decodeFileDescriptor(it.fileDescriptor)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%8A%A8%E7%94%BB.gif" alt="动画"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/1%20.jpg" alt="1 "></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/2.jpg" alt="2"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/3.jpg" alt="3"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/4.jpg" alt="4"><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【九，多媒体2】拍照&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android41</title>
    <link href="http://lmc.pub/2022/09/12/Android41/"/>
    <id>http://lmc.pub/2022/09/12/Android41/</id>
    <published>2022-09-12T13:57:26.000Z</published>
    <updated>2022-09-29T03:03:18.890Z</updated>
    
    <content type="html"><![CDATA[<h1>【九，多媒体1】通知</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h2 id="九，多媒体-v2">九，多媒体</h2><h3 id="9-1-通知-v2">9.1  通知</h3><h4 id="9-1-1-通知渠道-v2">9.1.1 通知渠道</h4><blockquote><p>什么是通知渠道呢？</p><p>根据通知的重要等级分为不同类</p></blockquote><ol><li><p>NotificationManager  通知管理</p><p>调用 Context 的getSystemService() 方法获取。<br>getSystemService() 方法接收一个字符串参数（获取系统的哪个服务）</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> manager = getSystemService(Context.NOTIFICATION_SERVICE) <span class="keyword">as</span> NotificationManager</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>NotificationChannel  通知渠道</p><p>调用 NotificationManager 的 createNotificationChannel() 方法完成创建。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment">//由于NotificationChannel 类和 createNotificationChannel() 方法都是 Android 8.0 系统中新增的API所以要进行版本判断才可以</span></span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">    <span class="comment">//渠道ID(保证全局唯一)、渠道名称以及初始状态下的重要等级（IMPORTANCE_HIGH/IMPORTANCE_DEFAULT/IMPORTANCE_LOW/IMPORTANCE_MIN）</span></span><br><span class="line">    <span class="keyword">val</span> channel = NotificationChannel(channelId, channelName, importance)<span class="comment">//构建通知渠道</span></span><br><span class="line">    manager.createNotificationChannel(channel)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="9-1-2-通知的基本用法-v2">9.1.2 通知的基本用法</h4><ol><li><p>创建 Notification 对象</p><ul><li>空的</li></ul><blockquote><p>首先需要使用一个Builder构造器来创建Notification对象，Android版本迭代大问题多，推荐用 AndroidX 库中提供的兼容API。AndroidX库中提供了一个NotificationCompat 类</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(context, channelId).build()</span><br></pre></td></tr></table></figure><p>NotificationCompat.Builde接收两个参数：第一个参数是 context；第二个参数是渠道ID，也就是说在创建通知的时候就要指明他是什么渠道类型的</p><ul><li>实际的</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(context, channelId)</span><br><span class="line">    .setContentTitle(<span class="string">&quot;title&quot;</span>)<span class="comment">//标题</span></span><br><span class="line">    .setContentText(<span class="string">&quot;content text&quot;</span>)<span class="comment">//内容</span></span><br><span class="line">    .setSmallIcon(R.drawable.small_icon)</span><br><span class="line">.setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.large_icon))</span><br><span class="line">    .build()</span><br><span class="line">manager.notify(<span class="number">1</span>, notification)<span class="comment">//让通知显示处理</span></span><br></pre></td></tr></table></figure><p>notify()方法接收两个参数：第一个参数是id，要保证为每个通知指定的id都是不同的；第二个参数则是Notification对象</p></li><li><p>全局 MainActivity</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android41</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.NotificationChannel</span><br><span class="line"><span class="keyword">import</span> android.app.NotificationManager</span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapFactory</span><br><span class="line"><span class="keyword">import</span> android.os.Build</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AlertDialog</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.NotificationCompat</span><br><span class="line"></span><br><span class="line"><span class="comment">//搞一个通知</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.拿到NotificationManager 通知管理</span></span><br><span class="line">        <span class="keyword">val</span> manager = getSystemService(Context.NOTIFICATION_SERVICE) <span class="keyword">as</span> NotificationManager</span><br><span class="line">        <span class="comment">//2.拿到NotificationChannel 通知渠道</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O)&#123;</span><br><span class="line">            <span class="keyword">val</span> channel =</span><br><span class="line">            NotificationChannel(<span class="string">&quot;normal&quot;</span>, <span class="string">&quot;Normal&quot;</span>, NotificationManager.IMPORTANCE_DEFAULT)</span><br><span class="line">            manager.createNotificationChannel(channel)<span class="comment">//渠道创建</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.创建Notification</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.sendNotice).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">                .setContentTitle(<span class="string">&quot;快看俺鸭！&quot;</span>)</span><br><span class="line">                .setContentText(<span class="string">&quot;哈哈哈，就是打个招呼没准备干哈啦&quot;</span>)</span><br><span class="line">                .setSmallIcon(R.drawable.small_icon)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(resources,R.drawable.large_icon))</span><br><span class="line">                .build()<span class="comment">//创建通知</span></span><br><span class="line">            manager.notify(<span class="number">1</span>,notification)<span class="comment">//让通知显示处理</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xml文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/sendNotice&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;点我发通知&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>图片可以自己准备也可以用老师源码文件夹的</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220927_145333_com.lmc.android41.jpg" alt="Screenshot_20220927_145333_com.lmc.android41"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220927_145328_com.lmc.android41.jpg" alt="Screenshot_20220927_145328_com.lmc.android41"></p></li><li><p>PendingIntent</p><p>通知被点击反应设置</p><p>获取PendingIntent的实例 -&gt; getActivity()方法、getBroadcast()方法，还是getService()方法。<br>这几个方法所接收的参数都是相同的：第一个参数Context；第二个参数传入0即可；第三个参数是一个Intent对象；第四个参数用于确 PendingIntent的行为(FLAG_ONE_SHOT/FLAG_NO_CREATE/FLAG_CANCEL_CURRENT/FLAG_UPDATE_CURRENT)通常情况下传入0。</p><p>NotificationCompat.Builder。这个构造器还可以连缀一个 setContentIntent() 方法，接收的参数正是一个PendingIntent对象。因此，这里就可以通过PendingIntent构建一个延迟执行的“意图”，当用户点击这条通知时就会执行相应的逻辑。</p><p>这地方要准备另外一个Activity 作为点击通知就跳转的工具Activity</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        findViewById&lt;Button&gt;(R.id.sendNotice).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, OtherActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">                .setContentTitle(<span class="string">&quot;快看俺鸭！&quot;</span>)</span><br><span class="line">                .setContentText(<span class="string">&quot;哈哈哈，就是打个招呼没准备干哈啦&quot;</span>)</span><br><span class="line">                .setSmallIcon(R.drawable.small_icon)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(resources,</span><br><span class="line">                R.drawable.large_icon))</span><br><span class="line">                .setContentIntent(pi)</span><br><span class="line">                .build()</span><br><span class="line">            manager.notify(<span class="number">1</span>, notification)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>点了通知后，通知图标没有消失</p><p>一种是在NotificationCompat.Builder中再连缀一个setAutoCancel()方法，<br>一种是在被打开页面中显式地调用NotificationManager的cancel()方法将它取消。  （不建议）</p><p>第一种办法：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">    ...</span><br><span class="line">    .setAutoCancel(<span class="literal">true</span>)</span><br><span class="line">    .build()</span><br></pre></td></tr></table></figure><p>第二种：（这种是不是有点麻烦？）</p><p>想取消什么通知就传入对应它的 id</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotificationActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_notification)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">val</span> manager = getSystemService(Context.NOTIFICATION_SERVICE) <span class="keyword">as</span> NotificationManager</span><br><span class="line">        manager.cancel(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="9-1-3-通知的进阶技巧-v2">9.1.3 通知的进阶技巧</h4><h5 id="9-1-3-1-setStyle-v2">9.1.3.1 setStyle</h5><ol><li>通知内容文字过长</li></ol><p>用 <code>setStyle</code>代替<code>setContentText</code></p><p>原来</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">...</span><br><span class="line">.setContentText(<span class="string">&quot;西南大学第八次学代会代表推荐：\n&quot;</span> +</span><br><span class="line"><span class="comment">//                        &quot;一．代表名额及构成\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;按照学院安排，推荐代表候选人的要求如下：19-21级每个班最多可推荐4名同学，22级每个班最多可推荐一名同学，研究生自愿报名人数不限。\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;鼓励女生和少数民族报名参加，在推荐条件基础相同的情况下，团支部优先推荐少数民族同学。\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;二、代表应具备的条件\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;1.思想信念坚定。深入贯彻习近平新时代中国特色社会主义思想，认真学习习近平总书记关于青年工作的重要思想和关于教育的重要论述，争做有理想、敢担当、能吃苦、肯奋斗的新时代好青年。\n&quot; +</span></span><br><span class="line"><span class="comment">//                    )</span></span><br><span class="line">...</span><br><span class="line">.build()</span><br></pre></td></tr></table></figure><p>升级</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">...</span><br><span class="line">.setStyle(NotificationCompat.BigTextStyle().bigText(<span class="string">&quot;西南大学第八次学代会代表推荐：\n&quot;</span> +</span><br><span class="line"><span class="comment">//                        &quot;一．代表名额及构成\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;按照学院安排，推荐代表候选人的要求如下：19-21级每个班最多可推荐4名同学，22级每个班最多可推荐一名同学，研究生自愿报名人数不限。\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;鼓励女生和少数民族报名参加，在推荐条件基础相同的情况下，团支部优先推荐少数民族同学。\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;二、代表应具备的条件\n&quot; +</span></span><br><span class="line"><span class="comment">//                        &quot;1.思想信念坚定。深入贯彻习近平新时代中国特色社会主义思想，认真学习习近平总书记关于青年工作的重要思想和关于教育的重要论述，争做有理想、敢担当、能吃苦、肯奋斗的新时代好青年。\n&quot; +</span></span><br><span class="line"><span class="comment">//                    ))</span></span><br><span class="line">.build()</span><br></pre></td></tr></table></figure><ol start="2"><li>显示图片</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;normal&quot;</span>)</span><br><span class="line">...</span><br><span class="line">.setStyle(NotificationCompat.BigPictureStyle().bigPicture(BitmapFactory.decodeResource(resources, R.drawable.small_icon)))</span><br><span class="line">.build()</span><br></pre></td></tr></table></figure><p>style只能有一个，不然装不下去</p><h5 id="9-1-3-2-不同重要等级渠道对通知行为具体影响-v2">9.1.3.2 不同重要等级渠道对通知行为具体影响</h5><blockquote><p>通知渠道的重要等级越高，发出的通知就越容易获得用户的注意。<br>(打开王者，他自己会弹出来最新的活动，那个活动就是等级最高的通知)</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="comment">//建立一个新的渠道</span></span><br><span class="line">            <span class="keyword">val</span> channel2 = NotificationChannel(<span class="string">&quot;important&quot;</span>, <span class="string">&quot;Important&quot;</span>,NotificationManager.IMPORTANCE_HIGH)</span><br><span class="line">            manager.createNotificationChannel(channel2)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//自己在xml文件中加一个按钮啦</span></span><br><span class="line">       findViewById&lt;Button&gt;(R.id.sendImportantNotice).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(<span class="keyword">this</span>, OtherActivity::<span class="keyword">class</span>.java)</span><br><span class="line">            <span class="keyword">val</span> pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">val</span> notification = NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;important&quot;</span>)</span><br><span class="line">                .setContentTitle(<span class="string">&quot;我是重要通知&quot;</span>)</span><br><span class="line">                .setContentText(<span class="string">&quot;捣蛋鬼别捣蛋&quot;</span>)</span><br><span class="line">                .setSmallIcon(R.drawable.small_icon)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(resources, R.drawable.large_icon))</span><br><span class="line">                .setAutoCancel(<span class="literal">true</span>)<span class="comment">//点击通知后，通知自动消失</span></span><br><span class="line">                .setContentIntent(pi)<span class="comment">//设置通知点击事件</span></span><br><span class="line">                .build()<span class="comment">//创建通知</span></span><br><span class="line">            manager.notify(<span class="number">1</span>, notification)<span class="comment">//让通知显示处理</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有浮窗或者声音：<a href="https://blog.csdn.net/weixin_44794112/article/details/103231373">关于Android通知的浮动通知(横幅)不显示的解决方法_IT冰棍的博客-CSDN博客_android 不显示浮动通知</a></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220927_162135_com.lmc.android41.jpg" alt="Screenshot_20220927_162135_com.lmc.android41"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/1.jpg" alt="1"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【九，多媒体1】通知&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android40</title>
    <link href="http://lmc.pub/2022/09/11/Android40/"/>
    <id>http://lmc.pub/2022/09/11/Android40/</id>
    <published>2022-09-11T13:57:26.000Z</published>
    <updated>2022-09-25T10:58:26.608Z</updated>
    
    <content type="html"><![CDATA[<h1>【Kotlin进阶6】泛型基础和委派</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="2-12-泛型基础和委托-v2">2.12 泛型基础和委托</h3><h4 id="2-12-1-泛型基础-v2">2.12.1 泛型基础</h4><blockquote><p>在一般的编程模式下，我们需要给任何一个变量指定一个具体的类型，而泛型允许我们在不指定具体类型的情况下进行编程，这样编写出来的代码将会拥有更好的扩展性。</p></blockquote><p>定义：<T></p><p>泛型类：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>&lt;<span class="type">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">method</span><span class="params">(param: <span class="type">T</span>)</span></span>: T &#123;</span><br><span class="line">    <span class="keyword">return</span> param</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> myClass = MyClass&lt;<span class="built_in">Int</span>&gt;()</span><br><span class="line"><span class="keyword">val</span> result = myClass.method(<span class="number">123</span>)<span class="comment">//return也是Int类型</span></span><br></pre></td></tr></table></figure><p>泛型方法：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">method</span><span class="params">(param: <span class="type">T</span>)</span></span>: T &#123;</span><br><span class="line">        <span class="keyword">return</span> param</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">val</span> myClass = MyClass()</span><br><span class="line"><span class="keyword">val</span> result = myClass.method&lt;<span class="built_in">Int</span>&gt;(<span class="number">123</span>)</span><br><span class="line"><span class="comment">//因为自动类型推断</span></span><br><span class="line"><span class="keyword">val</span> myClass = MyClass()</span><br><span class="line"><span class="keyword">val</span> result = myClass.method(<span class="number">123</span>)</span><br></pre></td></tr></table></figure><p>泛型限制</p><p>不手动指定上界的时候，泛型的上界默认是Any?  ，如果想不可为空那就指定为 Any</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">//指定上限为Number</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T : Number&gt;</span> <span class="title">method</span><span class="params">(param: <span class="type">T</span>)</span></span>: T &#123;</span><br><span class="line">    <span class="keyword">return</span> param</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小小实践：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只能作用在StringBuilder类上面</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> StringBuilder.<span class="title">build</span><span class="params">(block: <span class="type">StringBuilder</span>.() -&gt; <span class="type">Unit</span>)</span></span>: StringBuilder &#123;</span><br><span class="line">    block()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//作用在所有类 类似 apply</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> T.<span class="title">build</span><span class="params">(block: <span class="type">T</span>.() -&gt; <span class="type">Unit</span>)</span></span>: T &#123;</span><br><span class="line">    block()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-12-2-委托-v2">2.12.2 委托</h4><blockquote><p>委托是一种设计模式，它的基本理念是：操作对象自己不会去处理某段逻辑，而是会把工作委托给另外一个辅助对象去处理。</p></blockquote><h5 id="2-12-2-1-类委托-v2">2.12.2.1 类委托</h5><p>将一个类的具体实现委托给另一个类去完成。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//巧妙利用 委托实现自己的Set类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySet</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">val</span> helperSet: HashSet&lt;T&gt;) : Set&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">val</span> size: <span class="built_in">Int</span></span><br><span class="line">    <span class="keyword">get</span>() = helperSet.size</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">contains</span><span class="params">(element: <span class="type">T</span>)</span></span> = helperSet.contains(element)</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">containsAll</span><span class="params">(elements: <span class="type">Collection</span>&lt;<span class="type">T</span>&gt;)</span></span> = helperSet.containsAll(elements)</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">isEmpty</span><span class="params">()</span></span> = helperSet.isEmpty()</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">iterator</span><span class="params">()</span></span> = helperSet.iterator()</span><br><span class="line">    <span class="comment">//下面可以加自己的东西，那样就是一个新的Set了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，MySet的构造函数中接收了一个HashSet参数，这就相当于一个辅助对象。然后在 Set 接口所有的方法实现中，我们都没有进行自己的实现，而是调用了辅助对象中相应的方法实现，这其实就是一种委托模式。</p><p>如果我们只是让大部分的方法实现调用辅助对象中的方法，少部分的方法实现由自己来重写，甚至加入一些自己独有的方法，那么MySet就会成为一个全新的数据结构类，这就是委托模式的意义所在。</p><p>Kotlin中委托使用的关键字是by，我们只需要在接口声明的后面使用by关键字，再接上受委托的辅助对象，就可以免去之前所写的一大堆模板式的代码了，如下所示：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySet</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">val</span> helperSet: HashSet&lt;T&gt;) : Set&lt;T&gt; <span class="keyword">by</span> helperSet &#123;</span><br><span class="line">    <span class="comment">//里面写自己特有的东西</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">helloWorld</span><span class="params">()</span></span> = println(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">isEmpty</span><span class="params">()</span></span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-12-2-2-委托属性-v2">2.12.2.2 委托属性</h5><p>将一个属性（字段）的具体实现委托给另一个类去完成</p><p>语法结构：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p <span class="keyword">by</span> Delegate()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Delegate</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> propValue: Any? = <span class="literal">null</span></span><br><span class="line">    <span class="comment">//访问p就回去Delegate类的getValue方法</span></span><br><span class="line">        <span class="comment">//myClass：声明该Delegate类的委托功能可以在什么类中使用</span></span><br><span class="line">        <span class="comment">//prop：Kotlin中的一个属性操作类，可用于获取各种属性相关的值。</span></span><br><span class="line">    <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">getValue</span><span class="params">(myClass: <span class="type">MyClass</span>, prop: <span class="type">KProperty</span>&lt;*&gt;)</span></span>: Any? &#123;<span class="comment">//&lt;*&gt;这种泛型的写法表示你不知道或者不关心泛型的具体类型，只是为了通过语法编译而已</span></span><br><span class="line">    <span class="keyword">return</span> propValue</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//给p赋值就回去Delegate类的setValue方法，如果p是val下面这个方法可以没有</span></span><br><span class="line">    <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">setValue</span><span class="params">(myClass: <span class="type">MyClass</span>, prop: <span class="type">KProperty</span>&lt;*&gt;, value: <span class="type">Any</span>?)</span></span> &#123;<span class="comment">//value 表示要赋给委托属性的值</span></span><br><span class="line">    propValue = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-12-2-3-懒加载分析-v2">2.12.2.3 懒加载分析</h5><p>本质就是一个委派</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> uriMatcher <span class="keyword">by</span> lazy &#123;</span><br><span class="line">        <span class="comment">//我这个Lambda方法就是那个委托类中的getValue方法</span></span><br><span class="line">        <span class="keyword">val</span> matcher = UriMatcher(UriMatcher.NO_MATCH).apply &#123;</span><br><span class="line">            addURI(authority, <span class="string">&quot;book&quot;</span>, bookDir)</span><br><span class="line">            addURI(authority, <span class="string">&quot;book/#&quot;</span>, bookItem)</span><br><span class="line">            addURI(authority, <span class="string">&quot;category&quot;</span>, categoryDir)</span><br><span class="line">            addURI(authority, <span class="string">&quot;category/#&quot;</span>, categoryItem)</span><br><span class="line">        &#125;</span><br><span class="line">        matcher</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    *只有by才是Kotlin中的关键字，lazy在这里只是一个高阶函数而已。在lazy函数中会创建</span></span><br><span class="line"><span class="comment">并返回一个Delegate对象，当我们调用p属性的时候，其实调用的是Delegate对象的</span></span><br><span class="line"><span class="comment">getValue()方法，然后getValue()方法中又会调用lazy函数传入的Lambda表达式，这样</span></span><br><span class="line"><span class="comment">表达式中的代码就可以得到执行了，并且调用p属性后得到的值就是Lambda表达式中最后一行</span></span><br><span class="line"><span class="comment">代码的返回值。</span></span><br><span class="line"><span class="comment">    */</span></span><br></pre></td></tr></table></figure><p>仿写一个自己的lazy函数</p><p>一个Later.kt文件</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Later</span>&lt;<span class="type">T</span>&gt;</span>(<span class="keyword">val</span> block: () -&gt; T) &#123;</span><br><span class="line">    <span class="keyword">var</span> value: Any? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">operator</span> <span class="function"><span class="keyword">fun</span> <span class="title">getValue</span><span class="params">(any: <span class="type">Any</span>?, prop: <span class="type">KProperty</span>&lt;*&gt;)</span></span>: T &#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">        value = block()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value <span class="keyword">as</span> T</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//懒加载只会使用一次，所以不存在再给p赋值的情况</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">later</span><span class="params">(block: () -&gt; <span class="type">T</span>)</span></span> = Later(block)</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试可不可行的代码</span></span><br><span class="line"><span class="keyword">val</span> p <span class="keyword">by</span> later &#123;</span><br><span class="line">    Log.d(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;run codes inside later block&quot;</span>)</span><br><span class="line">    <span class="string">&quot;test later&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Kotlin进阶6】泛型基础和委派&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android39</title>
    <link href="http://lmc.pub/2022/09/10/Android39/"/>
    <id>http://lmc.pub/2022/09/10/Android39/</id>
    <published>2022-09-10T13:57:26.000Z</published>
    <updated>2022-09-25T10:29:36.718Z</updated>
    
    <content type="html"><![CDATA[<h1>【ContentProvider3】制造自己的ContentProvider</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="8-4-创建自己的-ContentProvider-v2">8.4 创建自己的 ContentProvider</h3><h4 id="8-4-1-理论知识-v2">8.4.1 理论知识</h4><p>想要自己的APP的数据也可以让别的APP共享，可以新建一个类去继承 ContentProvider ，然后实现他的6个抽象方法。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> : <span class="type">ContentProvider</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *(1) onCreate()。初始化ContentProvider的时候调用。通常会在这里完成对数据库的创建和升级等操作，返回true表示ContentProvider初始化成功，返回false则表示失败。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *(2) query()。从ContentProvider中查询数据。uri参数用于确定查询哪张表，projection参数用于确定查询哪些列，selection和selectionArgs参数用于约束查询哪些行，sortOrder参数用于对结果进行排序，查询的结果存放在Cursor对象中返回。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">query</span><span class="params">(uri: <span class="type">Uri</span>, projection: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, selection: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, sortOrder: <span class="type">String</span>?)</span></span>: Cursor? &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">    (3) insert()。向ContentProvider中添加一条数据。uri参数用于确定要添加到的表，待添加的数据保存在values参数中。添加完成后，返回一个用于表示这条新记录的URI。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">insert</span><span class="params">(uri: <span class="type">Uri</span>, values: <span class="type">ContentValues</span>?)</span></span>: Uri? &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *(4) update()。更新ContentProvider中已有的数据。uri参数用于确定更新哪一张表中的数据，新数据保存在values参数中，selection和selectionArgs参数用于约束更新哪些行，受影响的行数将作为返回值返回。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">update</span><span class="params">(uri: <span class="type">Uri</span>, values: <span class="type">ContentValues</span>?, selection: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *(5) delete()。从ContentProvider中删除数据。uri参数用于确定删除哪一张表中的数据，selection和selectionArgs参数用于约束删除哪些行，被删除的行数将作为返回值返回。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">delete</span><span class="params">(uri: <span class="type">Uri</span>, selection: <span class="type">String</span>?, selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *(6) getType()。根据传入的内容URI返回相应的MIME类型。  </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getType</span><span class="params">(uri: <span class="type">Uri</span>)</span></span>: String? &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>URI</p><p>标准：content://com.example.app.provider/table1</p><p>这就表示调用方期望访问的是com.example.app这个应用的table1表中的数据。</p><p>精准：content://com.example.app.provider/table1/1</p><p>这就表示调用方期望访问的是com.example.app这个应用的table1表中id为1的数据</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220724210009656.png" alt="image-20220724210009656"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> : <span class="type">ContentProvider</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> table1Dir = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> table1Item = <span class="number">1</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> table2Dir = <span class="number">2</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> table2Item = <span class="number">3</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> uriMatcher = UriMatcher(UriMatcher.NO_MATCH)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">init</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        *UriMatcher中</span></span><br><span class="line"><span class="comment">提供了一个addURI()方法，这个方法接收3个参数，可以分别把authority、path和一个自</span></span><br><span class="line"><span class="comment">定义代码传进去。这样，当调用UriMatcher的match()方法时，就可以将一个Uri对象传</span></span><br><span class="line"><span class="comment">入，返回值是某个能够匹配这个Uri对象所对应的自定义代码，</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        uriMatcher.addURI(<span class="string">&quot;com.example.app.provider&quot;</span>, <span class="string">&quot;table1&quot;</span>, table1Dir)</span><br><span class="line">        uriMatcher.addURI(<span class="string">&quot;com.example.app.provider &quot;</span>, <span class="string">&quot;table1/#&quot;</span>, table1Item)</span><br><span class="line">        uriMatcher.addURI(<span class="string">&quot;com.example.app.provider &quot;</span>, <span class="string">&quot;table2&quot;</span>, table2Dir)</span><br><span class="line">        uriMatcher.addURI(<span class="string">&quot;com.example.app.provider &quot;</span>, <span class="string">&quot;table2/#&quot;</span>, table2Item)</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">query</span><span class="params">(uri: <span class="type">Uri</span>, projection: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, selection: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, sortOrder: <span class="type">String</span>?)</span></span>: Cursor? &#123;</span><br><span class="line">        <span class="comment">//知道你想访问的是哪一个操作</span></span><br><span class="line">        <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            table1Dir -&gt; &#123;</span><br><span class="line">                <span class="comment">// 查询table1表中的所有数据</span></span><br><span class="line">            &#125;</span><br><span class="line">            table1Item -&gt; &#123;</span><br><span class="line">                <span class="comment">// 查询table1表中的单条数据</span></span><br><span class="line">            &#125;</span><br><span class="line">            table2Dir -&gt; &#123;</span><br><span class="line">                <span class="comment">// 查询table2表中的所有数据</span></span><br><span class="line">            &#125;</span><br><span class="line">            table2Item -&gt; &#123;</span><br><span class="line">                <span class="comment">// 查询table2表中的单条数据</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>getType() 方法</p><p>它是所有的ContentProvider都必须提供的一个方法，用于获取Uri对象所对应的MIME类型。一个内容URI 更多操作所对应的MIME字符串主要由部分组成，格式规定。</p><ul><li>必须以vnd开头。</li><li>如果内容URI以路径结尾，则后接android.cursor.dir/；如果内容URI以id结尾，则后接android.cursor.item/</li><li>最后接上vnd.<authority>.<path></li></ul><table><thead><tr><th>内容URI</th><th>MUME</th></tr></thead><tbody><tr><td>content://com.example.app.provider/table1</td><td>vnd.android.cursor.dir/vnd.com.example.app.provider.table1</td></tr><tr><td>content://com.example.app.provider/table1/1</td><td>vnd.android.cursor.item/vnd.com.example.app.provider.table1</td></tr></tbody></table><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProvider</span> : <span class="type">ContentProvider</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getType</span><span class="params">(uri: <span class="type">Uri</span>)</span></span> = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">        table1Dir -&gt; <span class="string">&quot;vnd.android.cursor.dir/vnd.com.example.app.provider.table1&quot;</span></span><br><span class="line">        table1Item -&gt; <span class="string">&quot;vnd.android.cursor.item/vnd.com.example.app.provider.table1&quot;</span></span><br><span class="line">        table2Dir -&gt; <span class="string">&quot;vnd.android.cursor.dir/vnd.com.example.app.provider.table2&quot;</span></span><br><span class="line">        table2Item -&gt; <span class="string">&quot;vnd.android.cursor.item/vnd.com.example.app.provider.table2&quot;</span></span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么 ContentResolver能保证隐私数据不会泄漏出去呢？<br>因为所有的增删改查操作都一定要匹配到相应的内容URI格式才能进行，而我们当然不可能向UriMatcher中添加隐私数据的URI，所以这部分数据根本无法被外部程序访问，安全问题也就不存在了。</p><h4 id="8-4-2-代码实践-v2">8.4.2 代码实践</h4><p>为了方便我们在Android34 来新建ContentProvider，AS会自动做其他工作,很方便的。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220924121419059.png" alt="image-20220924121419059"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220924121648990.png" alt="image-20220924121648990"></p><p>DatebaseProvider</p><blockquote><p>跨程序访问时我们不能直接使用Toast</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android34</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentProvider</span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues</span><br><span class="line"><span class="keyword">import</span> android.content.UriMatcher</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseProvider</span> : <span class="type">ContentProvider</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> bookDir = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> bookItem = <span class="number">1</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> categoryDir = <span class="number">2</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> categoryItem = <span class="number">3</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> authority = <span class="string">&quot;com.lmc.android34.provider&quot;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> dbHelper: MyDatabaseHelper<span class="comment">//这里只是拿到了SQLite类的实例</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//替UriMatcher做的准备</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> uriMatcher <span class="keyword">by</span> lazy &#123;</span><br><span class="line">        <span class="keyword">val</span> matcher = UriMatcher(UriMatcher.NO_MATCH).apply &#123;</span><br><span class="line">            addURI(authority, <span class="string">&quot;book&quot;</span>, bookDir)</span><br><span class="line">            addURI(authority, <span class="string">&quot;book/#&quot;</span>, bookItem)</span><br><span class="line">            addURI(authority, <span class="string">&quot;category&quot;</span>, categoryDir)</span><br><span class="line">            addURI(authority, <span class="string">&quot;category/#&quot;</span>, categoryItem)</span><br><span class="line">        &#125;</span><br><span class="line">        matcher</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Getter语法糖，？.操作符，let函数，？:操作符，单行代码函数语法糖</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> = context?.let &#123;</span><br><span class="line">        dbHelper = MyDatabaseHelper(it, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="literal">true</span></span><br><span class="line">    &#125; ?: <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">delete</span><span class="params">(uri: <span class="type">Uri</span>, selection: <span class="type">String</span>?, selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?)</span></span> =</span><br><span class="line">        dbHelper.let &#123;</span><br><span class="line">            <span class="comment">//删除数据</span></span><br><span class="line">            <span class="keyword">val</span> db = it.writableDatabase<span class="comment">//拿到操作数据库的对象</span></span><br><span class="line">            <span class="keyword">val</span> deleteRow = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">                bookDir -&gt; db.delete(<span class="string">&quot;Book&quot;</span>, selection, selectionArgs)</span><br><span class="line">                bookItem -&gt; &#123;</span><br><span class="line">                    <span class="keyword">val</span> bookId = uri.pathSegments[<span class="number">1</span>]<span class="comment">//【1】是id，【0】是路径</span></span><br><span class="line">                    db.delete(<span class="string">&quot;Book&quot;</span>, <span class="string">&quot;id = ?&quot;</span>, arrayOf(bookId))</span><br><span class="line">                &#125;</span><br><span class="line">                categoryDir -&gt; db.delete(<span class="string">&quot;Category&quot;</span>, selection, selectionArgs)</span><br><span class="line">                categoryItem -&gt; &#123;</span><br><span class="line">                    <span class="keyword">val</span> categoryId = uri.pathSegments[<span class="number">1</span>]</span><br><span class="line">                    db.delete(<span class="string">&quot;Category&quot;</span>, <span class="string">&quot;id = ?&quot;</span>, arrayOf(categoryId))</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> -&gt; <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            deleteRow</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getType</span><span class="params">(uri: <span class="type">Uri</span>)</span></span> = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">        bookDir -&gt; <span class="string">&quot;vnd.android.cursor.dir/vnd.com.lmc.android34.provider.book&quot;</span></span><br><span class="line">        bookItem -&gt; <span class="string">&quot;vnd.android.cursor.item/vnd.com.lmc.android34.provider.book&quot;</span></span><br><span class="line">        categoryDir -&gt; <span class="string">&quot;vnd.android.cursor.dir/vnd.com.lmc.android34.provider.category&quot;</span></span><br><span class="line">        categoryItem -&gt; <span class="string">&quot;vnd.android.cursor.item/vnd.com.lmc.android34.provider.category&quot;</span></span><br><span class="line">        <span class="keyword">else</span> -&gt; <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">insert</span><span class="params">(uri: <span class="type">Uri</span>, values: <span class="type">ContentValues</span>?)</span></span> = dbHelper.let &#123;</span><br><span class="line">        <span class="comment">// 添加数据</span></span><br><span class="line">        <span class="keyword">val</span> db = it.writableDatabase</span><br><span class="line">        <span class="keyword">val</span> uriReturn = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            bookDir, bookItem -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> newBookId = db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values)<span class="comment">//新插入行的行Id，异常就是-1</span></span><br><span class="line">                Uri.parse(<span class="string">&quot;content://<span class="variable">$authority</span>/book/<span class="variable">$newBookId</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            categoryDir, categoryItem -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> newCategoryId = db.insert(<span class="string">&quot;Category&quot;</span>, <span class="literal">null</span>, values)</span><br><span class="line">                Uri.parse(<span class="string">&quot;content://<span class="variable">$authority</span>/category/<span class="variable">$newCategoryId</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        uriReturn<span class="comment">//返回被修改数据的URI信息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">query</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        uri: <span class="type">Uri</span>, projection: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, selection: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?, sortOrder: <span class="type">String</span>?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> = dbHelper.let &#123;</span><br><span class="line">        <span class="comment">//查询数据</span></span><br><span class="line">        <span class="keyword">val</span> db = it.readableDatabase<span class="comment">//我们这里是查询所以用readable就可以了</span></span><br><span class="line">        <span class="keyword">val</span> cursor = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            bookDir -&gt; db.query(</span><br><span class="line">                <span class="string">&quot;Book&quot;</span>,</span><br><span class="line">                projection,</span><br><span class="line">                selection,</span><br><span class="line">                selectionArgs,</span><br><span class="line">                <span class="literal">null</span>,</span><br><span class="line">                <span class="literal">null</span>,</span><br><span class="line">                sortOrder)</span><br><span class="line">            bookItem -&gt; &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 *将内容URI权限之后的部分以“/”符号进行分割，并把分割后</span></span><br><span class="line"><span class="comment">                 *的结果放入一个字符串列表中，那这个列表的第0个位置存放的就是路径，第1个位置存放的就是id</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">val</span> bookId = uri.pathSegments[<span class="number">1</span>]</span><br><span class="line">                db.query(</span><br><span class="line">                    <span class="string">&quot;Book&quot;</span>,</span><br><span class="line">                    projection,</span><br><span class="line">                    <span class="string">&quot;id = ?&quot;</span>,</span><br><span class="line">                    arrayOf(bookId),</span><br><span class="line">                    <span class="literal">null</span>,</span><br><span class="line">                    <span class="literal">null</span>,</span><br><span class="line">                    sortOrder)</span><br><span class="line">            &#125;</span><br><span class="line">            categoryDir -&gt; db.query(</span><br><span class="line">                <span class="string">&quot;Category&quot;</span>,</span><br><span class="line">                projection,</span><br><span class="line">                selection,</span><br><span class="line">                selectionArgs,</span><br><span class="line">                <span class="literal">null</span>,</span><br><span class="line">                <span class="literal">null</span>,</span><br><span class="line">                sortOrder</span><br><span class="line">            )</span><br><span class="line">            categoryItem -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> categoryId = uri.pathSegments[<span class="number">1</span>]</span><br><span class="line">                db.query(</span><br><span class="line">                    <span class="string">&quot;Category&quot;</span>,</span><br><span class="line">                    projection,</span><br><span class="line">                    <span class="string">&quot;id = ?&quot;</span>,</span><br><span class="line">                    arrayOf(categoryId),</span><br><span class="line">                    <span class="literal">null</span>,</span><br><span class="line">                    <span class="literal">null</span>,</span><br><span class="line">                    sortOrder</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        cursor</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">update</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        uri: <span class="type">Uri</span>, values: <span class="type">ContentValues</span>?, selection: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        selectionArgs: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;?</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> = dbHelper.let &#123;</span><br><span class="line">        <span class="comment">// 更新数据</span></span><br><span class="line">        <span class="keyword">val</span> db = it.writableDatabase</span><br><span class="line">        <span class="keyword">val</span> updatedRows = <span class="keyword">when</span> (uriMatcher.match(uri)) &#123;</span><br><span class="line">            bookDir -&gt; db.update(<span class="string">&quot;Book&quot;</span>, values, selection, selectionArgs)</span><br><span class="line">            bookItem -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> bookId = uri.pathSegments[<span class="number">1</span>]</span><br><span class="line">                db.update(<span class="string">&quot;Book&quot;</span>, values, <span class="string">&quot;id = ?&quot;</span>, arrayOf(bookId))</span><br><span class="line">            &#125;</span><br><span class="line">            categoryDir -&gt; db.update(<span class="string">&quot;Category&quot;</span>, values, selection, selectionArgs)</span><br><span class="line">            categoryItem -&gt; &#123;</span><br><span class="line">                <span class="keyword">val</span> categoryId = uri.pathSegments[<span class="number">1</span>]</span><br><span class="line">                db.update(<span class="string">&quot;Category&quot;</span>, values, <span class="string">&quot;id = ?&quot;</span>, arrayOf(categoryId))</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        updatedRows</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是测试案例</p><p>首先，把虚拟器上的那个APP卸载重装</p><p>然后新建一个项目</p><p>xml文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/addData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Add To Book&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/queryData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Query From Book&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/updateData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Update Book&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/deleteData&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Delete From Book&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>kt文件：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android39</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.util.Log</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.contentValuesOf</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> bookId: String? = <span class="literal">null</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.addData).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">// 添加数据</span></span><br><span class="line">            <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;content://com.lmc.android34.provider/book&quot;</span>)</span><br><span class="line">            <span class="keyword">val</span> values = contentValuesOf(<span class="string">&quot;name&quot;</span> to <span class="string">&quot;新神传 杨戬&quot;</span>,</span><br><span class="line">                <span class="string">&quot;author&quot;</span> to <span class="string">&quot;猫眼娱乐&quot;</span>, <span class="string">&quot;pages&quot;</span> to <span class="number">140</span>, <span class="string">&quot;price&quot;</span> to <span class="number">22.8</span>)</span><br><span class="line">            <span class="keyword">val</span> newUri = contentResolver.insert(uri, values)</span><br><span class="line">            bookId = newUri?.pathSegments?.<span class="keyword">get</span>(<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.deleteData).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">// 删除数据</span></span><br><span class="line">            bookId?.let &#123;</span><br><span class="line">                <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;content://com.lmc.android34.provider/book/<span class="variable">$it</span>&quot;</span>)</span><br><span class="line">                contentResolver.delete(uri, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.queryData).setOnClickListener &#123;  </span><br><span class="line">            <span class="comment">// 查询数据</span></span><br><span class="line">            <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;content://com.lmc.android34.provider/book&quot;</span>)</span><br><span class="line">            contentResolver.query(uri, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>)?.apply &#123;</span><br><span class="line">                <span class="keyword">while</span> (moveToNext()) &#123;</span><br><span class="line">                    <span class="comment">//下面的代码和《第一行代码 第三版》中有出入，请注意</span></span><br><span class="line">                    <span class="keyword">val</span> name = getString(getColumnIndexOrThrow(<span class="string">&quot;name&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> author = getString(getColumnIndexOrThrow(<span class="string">&quot;author&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> pages = getInt(getColumnIndexOrThrow(<span class="string">&quot;pages&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> price = getDouble(getColumnIndexOrThrow(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book name is <span class="variable">$name</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book author is <span class="variable">$author</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book pages is <span class="variable">$pages</span>&quot;</span>)</span><br><span class="line">                    Log.d(<span class="string">&quot;MainActivity&quot;</span>, <span class="string">&quot;book price is <span class="variable">$price</span>&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                close()</span><br><span class="line">            &#125; &#125;</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.updateData).setOnClickListener &#123;      </span><br><span class="line">            <span class="comment">// 更新数据</span></span><br><span class="line">            bookId?.let &#123;</span><br><span class="line">                <span class="keyword">val</span> uri = Uri.parse(<span class="string">&quot;content://com.lmc.android34.provider/book/<span class="variable">$it</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">val</span> values = contentValuesOf(<span class="string">&quot;name&quot;</span> to <span class="string">&quot;明日战纪&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;pages&quot;</span> to <span class="number">999</span>, <span class="string">&quot;price&quot;</span> to <span class="number">0.01</span>)</span><br><span class="line">                contentResolver.update(uri, values, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">            &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【ContentProvider3】制造自己的ContentProvider&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android38</title>
    <link href="http://lmc.pub/2022/09/09/Android38/"/>
    <id>http://lmc.pub/2022/09/09/Android38/</id>
    <published>2022-09-09T13:57:26.000Z</published>
    <updated>2022-09-25T09:31:41.412Z</updated>
    
    <content type="html"><![CDATA[<h1>【ContentProvider2】用别的APP中的ContentProvider</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h3 id="8-3-访问其他程序中的数据-v2">8.3 访问其他程序中的数据</h3><blockquote><p>ContentProvider 就像APP上一个对外接口，其他APP可以通过这个口子去访问他的数据</p></blockquote><h5 id="8-3-1-访问ContentProvider-v2">8.3.1 访问ContentProvider</h5><p>ContentResolver类负责这方面。</p><p>获取该类的实例：可以通过Context中的getContentResolver()方法。</p><p>提供对应增删改查操作的数据处理方法insert() update() delete() query()</p><blockquote><p>不同于SQLiteDatabase，ContentResolver中的增删改查方法都是不接收表名参数的，而是使用一个Uri参数代替，这个参数被称为内容URI。</p><p>内容URI给ContentProvider中的数据建立了唯一标识符，它主要由三部分组成：协议申明+authority+path。</p><p>协议声明：统一是 content://<br>authority 区分不同APP，一般采用包名<br>path 区分同一APP下的不同表名，一般直接表名就可以了<br>内容URI字符串举例：</p><p>content://com.example.app.provider/table1<br>content://com.example.app.provider/table2</p><p>val uri = Uri.parse(“content://com.example.app.provider/table1”)<br>只需要调用Uri.parse()方法，就可以将内容URI字符串解析成Uri对象，Uri对象才能当参数传递</p></blockquote><p>query方法详解</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220923210712338.png" alt="image-20220923210712338"></p><p>具体代码演示：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//query</span></span><br><span class="line"><span class="keyword">val</span> cursor = contentResolver.query(</span><br><span class="line">    uri,</span><br><span class="line">    projection,</span><br><span class="line">    selection,</span><br><span class="line">    selectionArgs,</span><br><span class="line">    sortOrder)</span><br><span class="line"><span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">    <span class="keyword">val</span> column1 = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;column1&quot;</span>))</span><br><span class="line">    <span class="keyword">val</span> column2 = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;column2&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">cursor.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">//add</span></span><br><span class="line"><span class="keyword">val</span> values1 = contentValuesOf(<span class="string">&quot;column1&quot;</span> to <span class="string">&quot;text&quot;</span>, <span class="string">&quot;column2&quot;</span> to <span class="number">1</span>)</span><br><span class="line">contentResolver.insert(uri, values1)</span><br><span class="line"><span class="comment">//update</span></span><br><span class="line"><span class="keyword">val</span> values2 = contentValuesOf(<span class="string">&quot;column1&quot;</span> to <span class="string">&quot;&quot;</span>)</span><br><span class="line">contentResolver.update(uri, values2, <span class="string">&quot;column1 = ? and column2 = ?&quot;</span>, arrayOf(<span class="string">&quot;text&quot;</span>, <span class="string">&quot;1&quot;</span>))</span><br><span class="line"><span class="comment">//delete</span></span><br><span class="line">contentResolver.delete(uri, <span class="string">&quot;column2 = ?&quot;</span>, arrayOf(<span class="string">&quot;1&quot;</span>))</span><br></pre></td></tr></table></figure><h5 id="8-3-2-读取系统联系人-v2">8.3.2 读取系统联系人</h5><p>xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/contactsView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>kt文件：</p> <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android28</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest</span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.provider.ContactsContract</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> contactsList = ArrayList&lt;String&gt;()<span class="comment">//联系人信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> adapter: ArrayAdapter&lt;String&gt;<span class="comment">//ListView适配器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给ListView控件做Adapter适配器</span></span><br><span class="line">        adapter = ArrayAdapter(<span class="keyword">this</span>, android.R.layout.simple_list_item_1, contactsList)</span><br><span class="line">        <span class="keyword">val</span> contactsView = findViewById&lt;ListView&gt;(R.id.contactsView)</span><br><span class="line">        contactsView.adapter = adapter</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//检查是否授权</span></span><br><span class="line">        <span class="keyword">if</span> (ContextCompat.checkSelfPermission(</span><br><span class="line">                <span class="keyword">this</span>,</span><br><span class="line">                Manifest.permission.READ_CONTACTS</span><br><span class="line">            ) != PackageManager.PERMISSION_GRANTED</span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="comment">//没有授权就申请个（运行时申请）</span></span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>, arrayOf(Manifest.permission.READ_CONTACTS), <span class="number">1</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//有了就直接开始读取通讯录联系人</span></span><br><span class="line">            readContacts()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对运行时申请权限结果的处理</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRequestPermissionsResult</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        requestCode: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        permissions: <span class="type">Array</span>&lt;<span class="type">out</span> <span class="type">String</span>&gt;,</span></span></span><br><span class="line"><span class="params"><span class="function">        grantResults: <span class="type">IntArray</span></span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">when</span> (requestCode) &#123;</span><br><span class="line">            <span class="number">1</span> -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (grantResults.isNotEmpty() &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                    readContacts()</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//弹出申请权限被拒绝的提示</span></span><br><span class="line">                    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;您申请的权限被拒绝~&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//读取联系人的方法</span></span><br><span class="line">    <span class="meta">@SuppressLint(<span class="string">&quot;Range&quot;</span>)</span><span class="comment">//《第一行代码第三版》书上没有</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">readContacts</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">//查询联系人数据</span></span><br><span class="line">        contentResolver.query(</span><br><span class="line">            ContactsContract.CommonDataKinds.Phone.CONTENT_URI,<span class="comment">//这是 ContactsContract.CommonDataKinds.Phone 类已经帮我们做好了封装，提供了一个 CONTENT_URI 常量，而这个常量就是使用 Uri.parse() 方法解析出来的结果。  </span></span><br><span class="line">            <span class="literal">null</span>,</span><br><span class="line">            <span class="literal">null</span>,</span><br><span class="line">            <span class="literal">null</span>,</span><br><span class="line">            <span class="literal">null</span></span><br><span class="line">        )?.apply &#123;</span><br><span class="line">            <span class="keyword">while</span> (moveToNext()) &#123;</span><br><span class="line">                <span class="comment">//姓名</span></span><br><span class="line">                <span class="keyword">val</span> displayName = getString(getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME))</span><br><span class="line">                <span class="comment">//手机号</span></span><br><span class="line">                <span class="keyword">val</span> number = getString(getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER))</span><br><span class="line"></span><br><span class="line">                contactsList.add(<span class="string">&quot;<span class="variable">$displayName</span>\n<span class="variable">$number</span>&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            adapter.notifyDataSetInvalidated()</span><br><span class="line">            close()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>manifest文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.contactstest&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_CONTACTS&quot;</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>貌似我的包名当初写错啦？</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220923_225307_com.android.permission.jpg" alt="Screenshot_20220923_225307_com.android.permission"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/AAA.jpg" alt="AAA"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【ContentProvider2】用别的APP中的ContentProvider&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android37</title>
    <link href="http://lmc.pub/2022/09/08/Android37/"/>
    <id>http://lmc.pub/2022/09/08/Android37/</id>
    <published>2022-09-08T13:57:26.000Z</published>
    <updated>2022-09-25T09:01:21.796Z</updated>
    
    <content type="html"><![CDATA[<h1>【ContentProvider1】运行时权限</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><h2 id="八，ContentProvider-v2">八，ContentProvider</h2><p>Android中不同APP之间数据共享的一种手段</p><h3 id="一-，运行时权限">一 ，运行时权限</h3><p>Android目前权限分为两类</p><p>普通权限：在AndroidManifest.xml文件中添加权限声明后就可以直接使用（系统自动）</p><p>危险权限：特殊对待运行时权限处理</p><blockquote><p>到 Android 10 系统为止所有的危险权限</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220724161210148.png" alt="image-20220724161210148"></p><p>用户一旦同意了某个权限申请之后，同组的其他权限也会被系统自动授权。</p><p>但Android系统随时有可能调整权限的分组 ，利用这个小Bug貌似没啥用~</p></blockquote><h3 id="二，-在程序运行时申请权限的演示">二， 在程序运行时申请权限的演示</h3><p>Android 6.0开始在使用危险权限时必须进行运行时权限处理</p><blockquote><p>新方法简介：</p><p>ContextCompat.checkSelfPermission() 判断是否拿到某权限</p><p>接收两个参数：第一个Context，第二个具体的权限名。比如<code>Manifest.permission.CALL_PHONE</code>(打电话)</p><p>ActivityCompat.requestPermissions()   向用户申请授权。<br>接收3个参数：第一个参数要求是Activity的实例（在哪一个Activity中申请权限）；第二个参数是一个String数组，里面是申请的权限名；第三个参数是请求码，要求是唯一值</p></blockquote><p>xml文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/makeCall&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;打电话&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>MainActivity文件：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.a37</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest</span><br><span class="line"><span class="keyword">import</span> android.content.Intent</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        </span><br><span class="line">        findViewById&lt;Button&gt;(R.id.makeCall).setOnClickListener &#123;</span><br><span class="line">            <span class="comment">//判断是否获取目标权限</span></span><br><span class="line">            <span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>,</span><br><span class="line">                Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                <span class="comment">//没有就申请权限</span></span><br><span class="line">                ActivityCompat.requestPermissions(<span class="keyword">this</span>,</span><br><span class="line">                arrayOf(Manifest.permission.CALL_PHONE), <span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//有就直接执行</span></span><br><span class="line">            call()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理请求权限结果</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRequestPermissionsResult</span><span class="params">(requestCode: <span class="type">Int</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        permissions: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;, grantResults: <span class="type">IntArray</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults)</span><br><span class="line">        </span><br><span class="line">            <span class="keyword">when</span> (requestCode) &#123;</span><br><span class="line">                <span class="number">1</span> -&gt; &#123;</span><br><span class="line">                        <span class="keyword">if</span> (grantResults.isNotEmpty() </span><br><span class="line">                            &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">                        call()</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;您已经取消授权&quot;</span>,</span><br><span class="line">                            Toast.LENGTH_SHORT).show()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//把打电话的逻辑封装成一个方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">call</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(Intent.ACTION_CALL)</span><br><span class="line">            intent.<span class="keyword">data</span> = Uri.parse(<span class="string">&quot;tel:10086&quot;</span>)</span><br><span class="line">            startActivity(intent)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: SecurityException) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Manifest文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.lmc.a37&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CALL_PHONE&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.A37&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行时异常给了一次就默认一直有了，要取消去设置看</p><blockquote><p>这里当初出了一个玄学Bug，苦寻无果。最后是过了很久换了一个项目才跑起来的。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220923_103949_com.android.permission.jpg" alt="Screenshot_20220923_103949_com.android.permission"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Screenshot_20220923_200033_com.android.incallui.jpg" alt="Screenshot_20220923_200033_com.android.incallui"></p></blockquote><p>over</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【ContentProvider1】运行时权限&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android36</title>
    <link href="http://lmc.pub/2022/09/07/Android36/"/>
    <id>http://lmc.pub/2022/09/07/Android36/</id>
    <published>2022-09-07T13:57:26.000Z</published>
    <updated>2022-09-15T10:17:36.611Z</updated>
    
    <content type="html"><![CDATA[<h1>【Kotlin进阶5】 高阶函数的应用</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Android36.jpg" alt="Android36"></p><h2 id="高阶函数应用">高阶函数应用</h2><h3 id="一，简化SharedPreferences的用法">一，简化SharedPreferences的用法</h3><p>之前</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> editor = getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE).edit()</span><br><span class="line">editor.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>)</span><br><span class="line">editor.putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>)</span><br><span class="line">editor.putBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>)</span><br><span class="line">editor.apply()</span><br></pre></td></tr></table></figure><p>高阶函数升级</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> SharedPreferences.<span class="title">open</span><span class="params">(block: <span class="type">SharedPreferences</span>.<span class="type">Editor</span>.() -&gt; <span class="type">Unit</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> editor = edit()</span><br><span class="line">    editor.block()</span><br><span class="line">    editor.apply()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE).<span class="keyword">open</span> &#123;</span><br><span class="line">    putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>)</span><br><span class="line">    putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>)</span><br><span class="line">    putBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这个就是KTX扩展库中的edit函数实现</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">getSharedPreferences(<span class="string">&quot;data&quot;</span>, Context.MODE_PRIVATE).edit &#123;</span><br><span class="line">    putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>)</span><br><span class="line">    putInt(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>)</span><br><span class="line">    putBoolean(<span class="string">&quot;married&quot;</span>, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二，简化ContentValues的用法">二，简化ContentValues的用法</h3><p>原来：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> values = ContentValues()</span><br><span class="line">values.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Game of Thrones&quot;</span>)</span><br><span class="line">values.put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;George Martin&quot;</span>)</span><br><span class="line">values.put(<span class="string">&quot;pages&quot;</span>, <span class="number">720</span>)</span><br><span class="line">values.put(<span class="string">&quot;price&quot;</span>, <span class="number">20.85</span>)</span><br><span class="line"></span><br><span class="line">db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values)</span><br></pre></td></tr></table></figure><p>Pair对象  Kotlin中一种A to B的键值对数据结构</p><p>vararg:可变</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">cvOf</span><span class="params">(<span class="keyword">vararg</span> pairs: <span class="type">Pair</span>&lt;<span class="type">String</span>, Any?&gt;)</span></span>: ContentValues &#123;</span><br><span class="line">    <span class="keyword">val</span> cv = ContentValues()</span><br><span class="line">    <span class="keyword">for</span> (pair <span class="keyword">in</span> pairs) &#123;</span><br><span class="line">        <span class="keyword">val</span> key = pair.first</span><br><span class="line">        <span class="keyword">val</span> value = pair.second</span><br><span class="line">        <span class="keyword">when</span> (value) &#123;</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Int</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Long</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Short</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Float</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Double</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Boolean</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> String -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Byte</span> -&gt; cv.put(key, value)</span><br><span class="line">            <span class="keyword">is</span> ByteArray -&gt; cv.put(key, value)</span><br><span class="line">            <span class="literal">null</span> -&gt; cv.putNull(key)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cv</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kotlin中的Smart Cast功能。在When/if中判断为某一类型如果符合就会自动转换为这种类型</p><p>优化一下下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">cvOf</span><span class="params">(<span class="keyword">vararg</span> pairs: <span class="type">Pair</span>&lt;<span class="type">String</span>, Any?&gt;)</span></span> = ContentValues().apply &#123;</span><br><span class="line">    <span class="keyword">for</span> (pair <span class="keyword">in</span> pairs) &#123;</span><br><span class="line">        <span class="keyword">val</span> key = pair.first</span><br><span class="line">        <span class="keyword">val</span> value = pair.second</span><br><span class="line">        <span class="keyword">when</span> (value) &#123;</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Int</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Long</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Short</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Float</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Double</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Boolean</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> String -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Byte</span> -&gt; put(key, value)</span><br><span class="line">            <span class="keyword">is</span> ByteArray -&gt; put(key, value)</span><br><span class="line">            <span class="literal">null</span> -&gt; putNull(key)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KTX中的contentValuesOf()</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> values = contentValuesOf(<span class="string">&quot;name&quot;</span> to <span class="string">&quot;Game of Thrones&quot;</span>, <span class="string">&quot;author&quot;</span> to <span class="string">&quot;George Martin&quot;</span>,</span><br><span class="line"><span class="string">&quot;pages&quot;</span> to <span class="number">720</span>, <span class="string">&quot;price&quot;</span> to <span class="number">20.85</span>)</span><br><span class="line">db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Kotlin进阶5】 高阶函数的应用&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android35</title>
    <link href="http://lmc.pub/2022/09/06/Android35/"/>
    <id>http://lmc.pub/2022/09/06/Android35/</id>
    <published>2022-09-06T13:57:26.000Z</published>
    <updated>2022-09-15T10:17:18.326Z</updated>
    
    <content type="html"><![CDATA[<h1>【数据存储5】 SQLite两个小技巧</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Android35.jpg" alt="Android35"></p><h2 id="SQLite数据库的最佳实践">SQLite数据库的最佳实践</h2><p>事务的特性可以保证让一系列的操作要么全部完成，要么一个都不会完成。</p><h3 id="一，使用事务">一，使用事务</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> &gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/replaceData&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">&quot;Replace Data&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">        ...</span><br><span class="line">        replaceData.setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            db.beginTransaction() <span class="comment">// 开启事务</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                db.delete(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                    <span class="comment">// 手动抛出一个异常，让事务失败</span></span><br><span class="line">                    <span class="keyword">throw</span> NullPointerException()</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">val</span> values = ContentValues().apply &#123;</span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Game of Thrones&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;George Martin&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>, <span class="number">720</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>, <span class="number">20.85</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values)</span><br><span class="line">                db.setTransactionSuccessful() <span class="comment">// 事务已经执行成功</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            db.endTransaction() <span class="comment">// 结束事务</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h3 id="二，升级数据库的最佳写法">二，升级数据库的最佳写法</h3><p>这里需要为每一个版本号赋予其所对应的数据库变动，然后在onUpgrade()方法中对当前数据库的版本号进行判断，再执行相应的改变就可以了。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span></span>(<span class="keyword">val</span> context: Context, name: String, version: <span class="built_in">Int</span>):</span><br><span class="line">    SQLiteOpenHelper(context, name, <span class="literal">null</span>, version) &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book (&quot;</span> +</span><br><span class="line">        <span class="string">&quot; id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;author text,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;price real,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;pages integer,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;name text)&quot;</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table Category (&quot;</span> +</span><br><span class="line">        <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;category_name text,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;category_code integer)&quot;</span></span><br><span class="line">       <span class="comment">//2.实现两个抽象方法</span></span><br><span class="line">    <span class="comment">//2.1创建数据库</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?)</span></span> &#123;</span><br><span class="line">        p0?.apply &#123;</span><br><span class="line">            execSQL(createBook)</span><br><span class="line">            <span class="comment">//升级2</span></span><br><span class="line">            execSQL(createCategory)</span><br><span class="line">            Toast.makeText(context, <span class="string">&quot;创建数据库成功！&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.2升级数据库</span></span><br><span class="line">    <span class="comment">//《第一行代码》p1 = oldVersion p2 = oldVersion</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?, p1: <span class="type">Int</span>, p2: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">//升级3</span></span><br><span class="line">        p0?.apply &#123;</span><br><span class="line">           <span class="keyword">if</span> (p1 &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">               p0.execSQL(createCategory)</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新的需求：需要在Book 表中添加一个category_id字段。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span></span>(<span class="keyword">val</span> context: Context, name: String, version: <span class="built_in">Int</span>):</span><br><span class="line">    SQLiteOpenHelper(context, name, <span class="literal">null</span>, version) &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book (&quot;</span> +</span><br><span class="line">        <span class="string">&quot; id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;author text,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;price real,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;pages integer,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;name text,&quot;</span> +</span><br><span class="line">        <span class="comment">//这里加一个</span></span><br><span class="line">        <span class="string">&quot;category_id integer)&quot;</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table Category (&quot;</span> +</span><br><span class="line">        <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;category_name text,&quot;</span> +</span><br><span class="line">        <span class="string">&quot;category_code integer)&quot;</span></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(db: <span class="type">SQLiteDatabase</span>)</span></span> &#123;</span><br><span class="line">        db.execSQL(createBook)</span><br><span class="line">        db.execSQL(createCategory)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(db: <span class="type">SQLiteDatabase</span>, oldVersion: <span class="type">Int</span>, newVersion: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (oldVersion &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        db.execSQL(createCategory)</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//这里再加一句</span></span><br><span class="line">        <span class="keyword">if</span> (oldVersion &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        db.execSQL(<span class="string">&quot;alter table Book add column category_id integer&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么设置多层if&lt; 判断？</p><p>服务App跨版本升级</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【数据存储5】 SQLite两个小技巧&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android34</title>
    <link href="http://lmc.pub/2022/09/05/Android34/"/>
    <id>http://lmc.pub/2022/09/05/Android34/</id>
    <published>2022-09-05T13:57:26.000Z</published>
    <updated>2022-09-15T10:17:00.837Z</updated>
    
    <content type="html"><![CDATA[<h1>【数据存储3】 SQLite</h1><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E6%A0%87%E5%87%86%E8%89%B2%E7%89%88.png" alt="白嫖资源/干货推荐/快快关注吧"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%B0%8F%E7%83%82%E8%80%81%E5%B8%88B%E7%AB%99Android01%E7%BE%A4%E7%BE%A4%E8%81%8A%E4%BA%8C%E7%BB%B4%E7%A0%81.png" alt="欢迎大家加群技术交流/群内也有很多免费资源"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/Android34.jpg" alt="Android34"></p><h2 id="SQLite数据库">SQLite数据库</h2><blockquote><p>文件存储和SharedPreferences存储：保存一些简单的数据和键值对，</p><p>SQLite：大量复杂的关系型数据</p></blockquote><p>SQLiteOpenHelper帮助类（抽象类） 适用于创建和升级数据库</p><h3 id="一，-创建数据库">一， 创建数据库</h3><blockquote><p>SQLiteOpenHelper是 抽象类 -&gt;  继承</p><hr><p>必须实现的两抽象方法：onCreate()和 onUpgrade()  创建和升级数据库的逻辑。</p><hr><p>构造方法，函数较少的构造方法中接收4个参数：</p><p>第一个参数：Context：上下文</p><p>第二个参数：数据库名(.db)</p><p>第三个参数：在查询数据的时候返回一个自定义的Cursor，一般写null</p><p>第四个参数：当前数据库版本号，用于数据库升级</p><hr><p>两实例方法：getReadableDatabase()和 getWritableDatabase()。创建/打开一个现有的数据库（数据库存在-&gt;打开，否则-&gt;创建），返回一个对数据库进行读写操作的对象。</p><blockquote><p>区别：当数据库不可写入的时候（如磁盘空间已满），getReadableDatabase()方法返回的对象将以只读的方式打开数据库，而 getWritableDatabase() 方法会出现异常。</p></blockquote><hr><p>创建数据库步骤：</p><ol start="0"><li><p>准备好自己的MySQLiteOpenHelper</p></li><li><p>构建SQLiteOpenHelper的实例</p></li><li><p>调用它的getReadableDatabase()或getWritableDatabase()方法了</p></li></ol><p>当数据库创建的时候，重写的onCreate()方法也会得到执行，所以通常会在这里处理一些创建表的逻辑。</p><p>（数据库文件会存放在/data/data/<package name>/databases/目录下）</p></blockquote><p>建立一个 BookStore.db 然后一张 Book 表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table Book (</span><br><span class="line">    id integer primary key autoincrement,</span><br><span class="line">    author text,</span><br><span class="line">    price real,</span><br><span class="line">    pages integer,</span><br><span class="line">    name text)</span><br></pre></td></tr></table></figure><p>integer表示整型，real表示<br>浮点型，text表示文本类型，blob表示二进制类型</p><p>MyDatabaseHelper：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android34</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> context: Context, name:String, version:<span class="built_in">Int</span>):</span><br><span class="line">    SQLiteOpenHelper(context,name,<span class="literal">null</span>,version) &#123;</span><br><span class="line">    <span class="comment">//1.写SQL语句</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book ( &quot;</span> +</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;author text,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;price real,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;pages integer,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;name text)&quot;</span></span><br><span class="line">    <span class="comment">//2.实现两个抽象方法</span></span><br><span class="line">    <span class="comment">//2.1创建数据库</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?)</span></span> &#123;</span><br><span class="line">        p0?.apply &#123; </span><br><span class="line">           execSQL(createBook) </span><br><span class="line">            Toast.makeText(context,<span class="string">&quot;创建数据库成功！&quot;</span>,Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.2升级数据库</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?, p1: <span class="type">Int</span>, p2: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MainActivity:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android34</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.widget.Button</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="comment">//1.拿到 MyDatabaseHelper 的实例</span></span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>,<span class="string">&quot;BookStore.db&quot;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="comment">//2.正式创建数据库(点一下那个按钮就创建数据库)</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.createDatabase).setOnClickListener &#123; </span><br><span class="line">            dbHelper.writableDatabase</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证：</p><p>Device File Explorer  （Save As） + Database Navigator  插件  【细节注意，玄学Bug】</p><h3 id="二，升级数据库">二，升级数据库</h3><blockquote><p>一般都是再加一张表</p></blockquote><p>在 MyDatabaseHelper</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.android34</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDatabaseHelper</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> context: Context, name: String, version: <span class="built_in">Int</span>) :</span><br><span class="line">    SQLiteOpenHelper(context, name, <span class="literal">null</span>, version) &#123;</span><br><span class="line">    <span class="comment">//1.写SQL语句</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> createBook = <span class="string">&quot;create table Book ( &quot;</span> +</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;author text,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;price real,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;pages integer,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;name text)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//升级1</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> createCategory = <span class="string">&quot;create table Category (&quot;</span> +</span><br><span class="line">            <span class="string">&quot;id integer primary key autoincrement,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;category_name text,&quot;</span> +</span><br><span class="line">            <span class="string">&quot;category_code integer)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.实现两个抽象方法</span></span><br><span class="line">    <span class="comment">//2.1创建数据库</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?)</span></span> &#123;</span><br><span class="line">        p0?.apply &#123;</span><br><span class="line">            execSQL(createBook)</span><br><span class="line">            <span class="comment">//升级2</span></span><br><span class="line">            execSQL(createCategory)</span><br><span class="line">            Toast.makeText(context, <span class="string">&quot;创建数据库成功！&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.2升级数据库</span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onUpgrade</span><span class="params">(p0: <span class="type">SQLiteDatabase</span>?, p1: <span class="type">Int</span>, p2: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">//升级3</span></span><br><span class="line">        p0?.apply &#123;</span><br><span class="line">            execSQL(<span class="string">&quot;drop table if exists Book&quot;</span>)</span><br><span class="line">            execSQL(<span class="string">&quot;drop table if exists Category&quot;</span>)</span><br><span class="line">            onCreate(p0)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记得在 MainActivity 中那个版本号要改的比之前那个要大</p><h3 id="三，添加数据">三，添加数据</h3><p>SQLiteOpenHelper的getReadableDatabase() 或 getWritableDatabase() 方法会返回一个 SQLiteDatabase 对象，借助这个对象就可以对数据进行 CRUD 操作了。</p><p>SQLiteDatabase 提供了一个 insert() 方法，接收 3 个参数：</p><p>第一个参数：表名；</p><p>第二个参数：用于在未指定添加数据的情况下给某些可为空的列自动赋值NULL，一般用不到这直接传入null；</p><p>第三个参数：一个 ContentValues对象，提供了一系列的 put() 方法重载，用于向ContentValues中添加数据，只需要将表中的每个列名以及相应的待添加数据传入即可。</p><p>xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/addData&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">&quot;Add Data&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>kt：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line">         <span class="comment">//3.添加数据</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.addData).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> values1 = ContentValues().apply &#123;</span><br><span class="line">                <span class="comment">// 开始组装第一条数据</span></span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;西游记&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;吴承恩&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>, <span class="number">454</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>, <span class="number">10.6</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values1) <span class="comment">// 插入第一条数据</span></span><br><span class="line">            <span class="keyword">val</span> values2 = ContentValues().apply &#123;</span><br><span class="line">                <span class="comment">// 开始组装第二条数据</span></span><br><span class="line">                put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;兄弟&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;author&quot;</span>, <span class="string">&quot;余华&quot;</span>)</span><br><span class="line">                put(<span class="string">&quot;pages&quot;</span>, <span class="number">510</span>)</span><br><span class="line">                put(<span class="string">&quot;price&quot;</span>, <span class="number">19.95</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            db.insert(<span class="string">&quot;Book&quot;</span>, <span class="literal">null</span>, values2) <span class="comment">// 插入第二条数据</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四，更新数据">四，更新数据</h3><blockquote><p>SQLiteDatabase中的update()方法。</p><p>接收4个参数：</p><p>第一个参数：表名；</p><p>第二个参数：ContentValues对象，要把更新数据在这里组装进去；</p><p>第三、第四个参数用于约束更新某一行或某几行中的数据，不指定的话默认会更新所有行。</p></blockquote><p>xml文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/updateData&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">&quot;Update Data&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">        ...</span><br><span class="line">       <span class="comment">//4.更新数据</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.updateData).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="keyword">val</span> values = ContentValues()</span><br><span class="line">            values.put(<span class="string">&quot;price&quot;</span>, <span class="number">9999</span>)</span><br><span class="line">            db.update(<span class="string">&quot;Book&quot;</span>, values, <span class="string">&quot;name = ?&quot;</span>, arrayOf(<span class="string">&quot;西游记&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五，删除数据">五，删除数据</h3><blockquote><p>SQLiteDatabase中提供delete()方法</p><p>3个参数：表名；第二、第三个参数用于约束删除某一行或某几行的数据，不指定的话默认会删除所有行。</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">        ...</span><br><span class="line">      <span class="comment">//5，删除数据</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.deleteData).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            db.delete(<span class="string">&quot;Book&quot;</span>,<span class="string">&quot;pages &gt; ?&quot;</span>, arrayOf(<span class="string">&quot;500&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="六，查询数据">六，查询数据</h3><blockquote><p>SQLiteDatabase中提供了query()方法用于对数据查询。</p><p>这个方法的参数非常复杂，最短的一个方法重载也需要传入7个参数。</p><p>7个参数：</p><p>第一个参数：表名。</p><p>第二个参数：用于指定去查询哪几列，如果不指定则默认查询所有列。</p><p>第三、第四个参数用于约束查询某一行或某几行的数据，不指定则默认查询所有行的数据。</p><p>第五个参数用于指定需要去group by的列，不指定则表示不对查询结果进行group by操作。</p><p>第六个参数用于对group by之后的数据进行进一步的过滤，不指定则表示不进行过滤。</p><p>第七个参数用于指定查询结果的排序方式，不指定则表示使用默认的排序方式。</p><p>调用query()方法后会返回一个Cursor对象，查询到的所有数据都将从这个对象中取出。</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220723195224048.png" alt="image-20220723195224048"></p><blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"> <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">     <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">     setContentView(R.layout.activity_main)</span><br><span class="line">     <span class="keyword">val</span> dbHelper = MyDatabaseHelper(<span class="keyword">this</span>, <span class="string">&quot;BookStore.db&quot;</span>, <span class="number">2</span>)</span><br><span class="line">     ...</span><br><span class="line">     <span class="comment">//6.查询数据</span></span><br><span class="line">        findViewById&lt;Button&gt;(R.id.queryData).setOnClickListener &#123;</span><br><span class="line">            <span class="keyword">val</span> db = dbHelper.writableDatabase</span><br><span class="line">            <span class="comment">//下面是接受查询数据的一个容易</span></span><br><span class="line">            <span class="keyword">val</span> cursor = db.query(<span class="string">&quot;Book&quot;</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,)</span><br><span class="line">            <span class="keyword">if</span> (cursor.moveToFirst())&#123;</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    <span class="comment">//遍历Cursor对象，取出数据并且打印</span></span><br><span class="line">                    <span class="keyword">val</span> name = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;name&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> author = cursor.getString(cursor.getColumnIndex(<span class="string">&quot;author&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> pages = cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;pages&quot;</span>))</span><br><span class="line">                    <span class="keyword">val</span> price = cursor.getDouble(cursor.getColumnIndex(<span class="string">&quot;price&quot;</span>))</span><br><span class="line">                    Log.d(tag, <span class="string">&quot;book name is <span class="variable">$name</span>&quot;</span>)</span><br><span class="line">                    Log.d(tag, <span class="string">&quot;book author is <span class="variable">$author</span>&quot;</span>)</span><br><span class="line">                    Log.d(tag, <span class="string">&quot;book pages is <span class="variable">$pages</span>&quot;</span>)</span><br><span class="line">                    Log.d(tag, <span class="string">&quot;book price is <span class="variable">$price</span>&quot;</span>)</span><br><span class="line">                &#125;<span class="keyword">while</span> (cursor.moveToNext())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="七，使用SQL操作数据库">七，使用SQL操作数据库</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220723195731858.png" alt="image-20220723195731858"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【数据存储3】 SQLite&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A</summary>
      
    
    
    
    <category term="编程" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Android" scheme="http://lmc.pub/categories/%E7%BC%96%E7%A8%8B/Android/"/>
    
    
  </entry>
  
</feed>
