<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMC_Blog</title>
  
  
  <link href="http://lmc.pub/atom.xml" rel="self"/>
  
  <link href="http://lmc.pub/"/>
  <updated>2023-03-27T00:11:58.819Z</updated>
  <id>http://lmc.pub/</id>
  
  <author>
    <name>LMC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【算法】两两交换链表中的节点24</title>
    <link href="http://lmc.pub/2023/03/27/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B924/"/>
    <id>http://lmc.pub/2023/03/27/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B924/</id>
    <published>2023-03-26T23:34:14.000Z</published>
    <updated>2023-03-27T00:11:58.819Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/description/">24. 两两交换链表中的节点 - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//两两交换链表中的节点24</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwapNodesInPairs24</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> initLinkedList(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;);</span><br><span class="line">printLinkedList(head);</span><br><span class="line"></span><br><span class="line">head = <span class="keyword">new</span> <span class="title class_">solution</span>().swapPairs02(head);</span><br><span class="line">printLinkedList(head);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">initLinkedList</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head,node;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[i]);</span><br><span class="line">    cur.next = node;</span><br><span class="line">    cur = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">solution</span> &#123;</span><br><span class="line"><span class="comment">//迭代法</span></span><br><span class="line"><span class="keyword">public</span> ListNode <span class="title function_">swapPairs</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//如果 head 为空或者只有一个节点</span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">next</span> <span class="operator">=</span> head.next;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> swapPairs(next.next);</span><br><span class="line"></span><br><span class="line">next.next = cur;</span><br><span class="line">cur.next = temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> next;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//虚拟头节点法</span></span><br><span class="line"><span class="keyword">public</span> ListNode <span class="title function_">swapPairs02</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//如果 head 为空或者只有一个节点</span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>,head);</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> dummy;</span><br><span class="line">ListNode first;</span><br><span class="line">ListNode second;</span><br><span class="line">ListNode temp;</span><br><span class="line"><span class="keyword">while</span> (cur.next != <span class="literal">null</span> &amp;&amp; cur.next.next != <span class="literal">null</span>)&#123;</span><br><span class="line">first = cur.next;</span><br><span class="line">second = cur.next.next;</span><br><span class="line">temp = cur.next.next.next;</span><br><span class="line"><span class="comment">//开始交换</span></span><br><span class="line">cur.next = second;</span><br><span class="line">second.next = first;</span><br><span class="line">first.next = temp;</span><br><span class="line">cur = first;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line">ListNode next;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">(<span class="type">int</span> val)</span>&#123; </span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">(<span class="type">int</span> val, ListNode next)</span>&#123; </span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用了【迭代法】和【虚拟头节点法】两种实现方式</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【Bug】IDEA控制台中文乱码</title>
    <link href="http://lmc.pub/2023/03/27/%E3%80%90Bug%E3%80%91IDEA%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://lmc.pub/2023/03/27/%E3%80%90Bug%E3%80%91IDEA%E6%8E%A7%E5%88%B6%E5%8F%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</id>
    <published>2023-03-26T22:43:46.000Z</published>
    <updated>2023-03-27T00:12:38.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述：">问题描述：</h2><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327064547056.png" alt="image-20230327064547056"></p><h2 id="病根子：">病根子：</h2><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327064520267.png" alt="image-20230327064520267"></p><h2 id="solution：">solution：</h2><h3 id="1">1</h3><p>来到IDEA 的安装目录的bin下面，找<code>**idea64.exe.vmoptions**</code>文件打开。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327064749861.png" alt="image-20230327064749861"></p><p>最后一行加上：<code>-Dfile.encoding=UTF-8</code> 保存退出</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327064831092.png" alt="image-20230327064831092"></p><h3 id="2">2</h3><p>IDEA<code>设置-》编辑器-》file Encodings</code> 然后如图。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327065042510.png" alt="image-20230327065042510"></p><h3 id="3">3</h3><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327065214120.png" alt="image-20230327065214120"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327065242330.png" alt="image-20230327065242330"></p><h2 id="解决">解决</h2><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230327065726083.png" alt="image-20230327065726083"></p>]]></content>
    
    
    <summary type="html">IDEA控制台中文显示乱码。GBK与UTF-8.</summary>
    
    
    
    <category term="Bug" scheme="http://lmc.pub/categories/Bug/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>【算法】翻转链表206</title>
    <link href="http://lmc.pub/2023/03/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8206/"/>
    <id>http://lmc.pub/2023/03/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8206/</id>
    <published>2023-03-26T10:38:56.000Z</published>
    <updated>2023-03-26T12:41:14.366Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://leetcode.cn/problems/reverse-linked-list/">206. 反转链表 - 力扣（Leetcode）</a></p></blockquote><h2 id="双指针法">双指针法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseLinkedList206</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> initLinkedList(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;);</span><br><span class="line">printLinkedList(head);</span><br><span class="line">printLinkedList(reverseList(head));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双指针法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"></span><br><span class="line">ListNode nextNode;</span><br><span class="line"><span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">nextNode = cur.next;</span><br><span class="line">cur.next = pre;</span><br><span class="line">pre = cur;</span><br><span class="line">cur = nextNode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pre;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">initLinkedList</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head,node;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[i]);</span><br><span class="line">    cur.next = node;</span><br><span class="line">    cur = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line">ListNode next;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val)</span>&#123;<span class="built_in">this</span>.val = val;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val, ListNode next)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="迭代法">迭代法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseLinkedList206</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> initLinkedList(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;);</span><br><span class="line">printLinkedList(head);</span><br><span class="line">printLinkedList(reverseList(head));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//迭代法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> reverse(<span class="literal">null</span>,head);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverse</span><span class="params">(ListNode pre, ListNode cur)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cur == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> pre;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> cur.next;</span><br><span class="line">    cur.next = pre;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> reverse(cur,temp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">initLinkedList</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head,node;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[i]);</span><br><span class="line">    cur.next = node;</span><br><span class="line">    cur = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line">ListNode next;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val)</span>&#123;<span class="built_in">this</span>.val = val;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val, ListNode next)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="逆向迭代法">逆向迭代法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseLinkedList206</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> initLinkedList(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;);</span><br><span class="line">printLinkedList(head);</span><br><span class="line">printLinkedList(reverseList(head));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//迭代法（从后向前递归）挺有意思哈</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="comment">//边界条件判断</span></span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (head.next == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">ListNode</span> <span class="variable">ret</span> <span class="operator">=</span> reverseList(head.next);</span><br><span class="line"><span class="comment">//region 捎带干的事情</span></span><br><span class="line">head.next.next = head;</span><br><span class="line">head.next = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//region 捎带干的事情</span></span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">initLinkedList</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head,node;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    node = <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[i]);</span><br><span class="line">    cur.next = node;</span><br><span class="line">    cur = node;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line">ListNode next;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val)</span>&#123;<span class="built_in">this</span>.val = val;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val, ListNode next)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个逆向迭代虽然不好理解。</p><p>但是真的很妙。</p></blockquote><h2 id="头插法">头插法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//虚拟头节点法（头插法）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">dummyNode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>,<span class="literal">null</span>);</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"><span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> cur.next;</span><br><span class="line"><span class="comment">//头插法</span></span><br><span class="line">cur.next = dummyNode.next;</span><br><span class="line">dummyNode.next = cur;</span><br><span class="line"></span><br><span class="line">cur = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dummyNode.next;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="栈法">栈法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//栈法</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">null</span> || head.next == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="comment">//当只有一个节点或者没有节点的时候直接返回 head 就可以了</span></span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (cur != <span class="literal">null</span>)&#123;</span><br><span class="line">stack.push(cur);</span><br><span class="line">cur = cur.next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">cur = dummy;</span><br><span class="line"><span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">cur.next = stack.pop();</span><br><span class="line">cur = cur.next;</span><br><span class="line">&#125;</span><br><span class="line">cur.next = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">return</span> dummy.next;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>体会思想就可以了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/problems/reverse-linked-list/&quot;&gt;206. 反转链表 - 力扣（Leetcode）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;双指针法&quot;&gt;双指针</summary>
      
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【Android】网络框架（OKHttp&amp;Retrofit）</title>
    <link href="http://lmc.pub/2023/03/26/%E3%80%90Android%E3%80%91%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/"/>
    <id>http://lmc.pub/2023/03/26/%E3%80%90Android%E3%80%91%E7%BD%91%E7%BB%9C%E6%A1%86%E6%9E%B6/</id>
    <published>2023-03-26T08:41:56.000Z</published>
    <updated>2023-03-27T00:12:43.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android-网络框架">Android 网络框架</h2><blockquote><p>Android 中在【网络】部分常用的框架组合是：</p><p>OkHttp + Retrofit</p></blockquote><h3 id="一，准备-v2">一，准备</h3><h4 id="添加权限">添加权限</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326164537884.png" alt="image-20230326164537884"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="添加依赖">添加依赖</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326164757266.png" alt="image-20230326164757266"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326164731781.png" alt="image-20230326164731781"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//region 请求网络相关</span></span><br><span class="line"><span class="comment">//提示：region这种语法是最新的，推荐使用这种，也更容易阅读，不建议在同一个文件同时使用</span></span><br><span class="line"><span class="comment">//因为可能会显示出错</span></span><br><span class="line"><span class="comment">//okhttp</span></span><br><span class="line"><span class="comment">//https://github.com/square/okhttp</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.okhttp3:okhttp:4.9.3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用来打印okhttp请求日志</span></span><br><span class="line"><span class="comment">//当然也可以自定义</span></span><br><span class="line">implementation(<span class="string">&quot;com.squareup.okhttp3:logging-interceptor:4.9.3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//retrofit</span></span><br><span class="line"><span class="comment">//https://github.com/square/retrofit</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:retrofit:2.9.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用gson解析json</span></span><br><span class="line"><span class="comment">//https://github.com/google/gson</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.code.gson:gson:2.9.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//适配retrofit使用gson解析</span></span><br><span class="line"><span class="comment">//版本要和retrofit一样</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:converter-gson:2.9.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//适配retrofit支持rxjava</span></span><br><span class="line">implementation <span class="string">&#x27;com.squareup.retrofit2:adapter-rxjava3:2.9.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用了Android响应式编程</span></span><br><span class="line"><span class="comment">//RxJava和RxAndroid区别？</span></span><br><span class="line"><span class="comment">//简单来说：就是RxAndroid在RxJava的基础上</span></span><br><span class="line"><span class="comment">//优化了一些功能</span></span><br><span class="line"><span class="comment">//增强了Android特有的功能</span></span><br><span class="line"><span class="comment">//https://github.com/ReactiveX/RxAndroid</span></span><br><span class="line">implementation <span class="string">&#x27;io.reactivex.rxjava3:rxandroid:3.0.0&#x27;</span></span><br><span class="line"><span class="comment">//endregion</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面直接所有网络相关的依赖都加进去了。</p><h4 id="配置网络地址">配置网络地址</h4><p>好处：</p><p>可以这样。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326173306893.png" alt="image-20230326173306893"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下面被注释掉的文件是已经配置到 common.gradle 文件，所以这里就可以不写了</span></span><br><span class="line"><span class="comment">     * 如果不一样，这里可以再写要用的配置，来覆盖公共配置文件内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="comment">//不加下面这个 sync 之后，那个java Config包出不来。    </span></span><br><span class="line">        <span class="comment">//渠道相关</span></span><br><span class="line">        flavorDimensions <span class="string">&quot;versionCode&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">   ……</span><br><span class="line">    <span class="comment">//配置不同的环境</span></span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        <span class="comment">//本地开发环境</span></span><br><span class="line">        local &#123;</span><br><span class="line">            <span class="comment">//API端点</span></span><br><span class="line">            buildConfigField(<span class="string">&#x27;String&#x27;</span>, <span class="string">&quot;ENDPOINT&quot;</span>, <span class="string">&#x27;&quot;http://192.168.50.139:8080/&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//资源端点</span></span><br><span class="line">            buildConfigField <span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;RESOURCE_ENDPOINT&#x27;</span>, <span class="string">&#x27;&quot;http://course-music-dev.ixuea.com/%s&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line">            dimension = minSdkVersion</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开发环境（我们都在用这个）</span></span><br><span class="line">        dev &#123;</span><br><span class="line">            <span class="comment">//API端点</span></span><br><span class="line">            buildConfigField(<span class="string">&#x27;String&#x27;</span>, <span class="string">&quot;ENDPOINT&quot;</span>, <span class="string">&#x27;&quot;http://my-cloud-music-api-sp3-dev.ixuea.com/&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//资源端点</span></span><br><span class="line">            buildConfigField <span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;RESOURCE_ENDPOINT&#x27;</span>, <span class="string">&#x27;&quot;http://course-music-dev.ixuea.com/%s&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line">            dimension = minSdkVersion</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//正式环境</span></span><br><span class="line">        prod &#123;</span><br><span class="line">            <span class="comment">//API端点</span></span><br><span class="line">            buildConfigField <span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;ENDPOINT&#x27;</span>, <span class="string">&#x27;&quot;http://my-cloud-music-api-sp3.ixuea.com/&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//资源端点</span></span><br><span class="line">            buildConfigField <span class="string">&#x27;String&#x27;</span>, <span class="string">&#x27;RESOURCE_ENDPOINT&#x27;</span>, <span class="string">&#x27;&quot;http://course-music.ixuea.com/%s&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line">            dimension = minSdkVersion</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326165901353.png" alt="image-20230326165901353"></p><p>在添加了依赖之后，点击 sync 同步。然后 run 一下。</p><p>我们的资源网址就在<code>BuildConfig</code>这个Java类里面了。</p><p>我们这里直接放在一个系统的 Config 文件中方便管理。</p><h4 id="让APP可以发送-HTTP-请求">让APP可以发送 HTTP 请求</h4><blockquote><p>一般来说，APP现在不允许发送 Http 请求。</p><p>但是 OKHttp 就是 Http 请求。</p><p>所以为了测试成功还要再加这模一句。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.ixuea.courses.mymusic&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:usesCleartextTraffic</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">....</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326172104068.png" alt="image-20230326172104068"></p><h3 id="二，OkHttp">二，OkHttp</h3><p>用OKHttp 请求网络。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * okhttp get请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">testGet</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//构建 OKHttp 客户端 client 实例</span></span><br><span class="line">        <span class="type">OkHttpClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//拼接好 绝对地址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> Config.ENDPOINT + <span class="string">&quot;v1/sheets&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//建立OKHttp请求</span></span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用上面创建的客户端实例去发送请求，同时观察结果。</span></span><br><span class="line">        <span class="comment">//同时做回调处理</span></span><br><span class="line">        client.newCall(request).enqueue(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">            <span class="comment">//失败 -&gt; 执行下面这个方法</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> IOException e)</span> &#123;</span><br><span class="line">                <span class="comment">//失败就打印失败日志</span></span><br><span class="line">                Log.e(TAG, <span class="string">&quot;onFailure: &quot;</span> + e.getLocalizedMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//成功 -&gt; 就执行这个方法</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="comment">//成功就打印返回的数据流 String 类型</span></span><br><span class="line">                Log.d(TAG, <span class="string">&quot;onResponse: &quot;</span> + response.body().string());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试成功的样子。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230326172406897.png" alt="image-20230326172406897"></p><h3 id="三，Retrofit">三，Retrofit</h3><h4 id="OKHttp的具体创建">OKHttp的具体创建</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 提供OkHttpClient</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> OkHttpClient <span class="title function_">provideOkHttpClient</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//初始化okhttp</span></span><br><span class="line">       OkHttpClient.<span class="type">Builder</span> <span class="variable">okhttpClientBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder();</span><br><span class="line"></span><br><span class="line">       <span class="comment">//配置缓存</span></span><br><span class="line">       <span class="comment">//AppContext.getInstance() 这个是拿到了这个 APP 的上下文（自己写的）</span></span><br><span class="line">       <span class="type">Cache</span> <span class="variable">cache</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cache</span>(AppContext.getInstance().getCacheDir(), Config.NETWORK_CACHE_SIZE);</span><br><span class="line">       <span class="comment">//Config.NETWORK_CACHE_SIZE 是自己定义的，这里是100M</span></span><br><span class="line">       okhttpClientBuilder.cache(cache);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//设置超时时间</span></span><br><span class="line">       okhttpClientBuilder.connectTimeout(<span class="number">10</span>, TimeUnit.SECONDS) <span class="comment">//连接超时时间</span></span><br><span class="line">               .writeTimeout(<span class="number">10</span>, TimeUnit.SECONDS) <span class="comment">//写，也就是将数据发送到服务端超时时间</span></span><br><span class="line">               .readTimeout(<span class="number">10</span>, TimeUnit.SECONDS); <span class="comment">//读，将服务端的数据下载到本地</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">//Config.DEBUG 这个也是自己写的一个 boolean 变量</span></span><br><span class="line">       <span class="keyword">if</span> (Config.DEBUG) &#123;</span><br><span class="line">           <span class="comment">//调试模式</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//创建okhttp日志拦截器</span></span><br><span class="line">           <span class="type">HttpLoggingInterceptor</span> <span class="variable">loggingInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpLoggingInterceptor</span>();</span><br><span class="line"></span><br><span class="line">           <span class="comment">//设置日志等级</span></span><br><span class="line">           loggingInterceptor.level(HttpLoggingInterceptor.Level.BASIC);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//添加到网络框架中</span></span><br><span class="line">           okhttpClientBuilder.addInterceptor(loggingInterceptor);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> okhttpClientBuilder.build();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Retrofit-的具体创建">Retrofit 的具体创建</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 提供Retrofit实例</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> okHttpClient</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> Retrofit <span class="title function_">provideRetrofit</span><span class="params">(OkHttpClient okHttpClient)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Retrofit</span>.Builder()</span><br><span class="line">               <span class="comment">//让retrofit使用okhttp</span></span><br><span class="line">               .client(okHttpClient)</span><br><span class="line"></span><br><span class="line">               <span class="comment">//api地址  Config.ENDPOINT这个是自己在特别类里面定义的</span></span><br><span class="line">               .baseUrl(Config.ENDPOINT)</span><br><span class="line"></span><br><span class="line">               <span class="comment">//适配rxjava</span></span><br><span class="line">               .addCallAdapterFactory(RxJava3CallAdapterFactory.create())</span><br><span class="line"></span><br><span class="line">               <span class="comment">//使用gson解析json</span></span><br><span class="line">               <span class="comment">//包括请求参数和响应</span></span><br><span class="line">               .addConverterFactory(GsonConverterFactory.create(JSONUtil.createGson()))</span><br><span class="line"></span><br><span class="line">               <span class="comment">//创建retrofit</span></span><br><span class="line">               .build();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>上面有些变量或者工具类要自己创建。</p><p>JSONUtil.createGson()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JSONUtil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Gson <span class="title function_">createGson</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">GsonBuilder</span> <span class="variable">gsonBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//驼峰转下划线</span></span><br><span class="line">        gsonBuilder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES);</span><br><span class="line">        <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> gsonBuilder.create();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> gson;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建-service">创建 service</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ixuea.courses.mymusic.component.api;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.core.Observable;</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.GET;</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.Query;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认远程数据源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DefaultService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 音乐列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GET(&quot;v1/sheets&quot;)</span></span><br><span class="line">    Observable&lt;String&gt; <span class="title function_">sheets</span><span class="params">(<span class="meta">@Query(value = &quot;category&quot;)</span> String category, <span class="meta">@Query(value = &quot;size&quot;)</span> <span class="type">int</span> size)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Observable<String>: 网络请求数据打包的返回对象</p><p>其实不应该是 String 而是具体返回的是什么 Java 类型在本地搞他的实例类。</p><h4 id="Retrofit-使用">Retrofit 使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">OkHttpClient</span> <span class="variable">okHttpClient</span> <span class="operator">=</span> NetworkModule.provideOkHttpClient();</span><br><span class="line"><span class="type">Retrofit</span> <span class="variable">retrofit</span> <span class="operator">=</span> NetworkModule.provideRetrofit(okHttpClient);</span><br><span class="line"><span class="type">DefaultService</span>    <span class="variable">service</span> <span class="operator">=</span> retrofit.create(DefaultService.class);</span><br></pre></td></tr></table></figure><h4 id="Bug">Bug</h4><p>Caused by: java.lang.ClassCastException: com.google.gson.internal.LinkedTreeMap cannot be cast to com.ixuea.courses.mymusic.component.sheet.Sheet</p><p>Meta定义类多加了泛型。</p><p>类名没有泛型，但是方法有。</p><p>明天hao’hao</p>]]></content>
    
    
    <summary type="html">Android网络框架使用入门。（OKHttp，Retrofit）</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【AS】快捷键</title>
    <link href="http://lmc.pub/2023/03/26/%E3%80%90AS%E3%80%91%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://lmc.pub/2023/03/26/%E3%80%90AS%E3%80%91%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2023-03-26T08:37:57.000Z</published>
    <updated>2023-03-26T13:49:49.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="AS小技巧">AS小技巧</h2><p>ctrl + Alt + F ：变量全局化</p><p>ctrl + alt + v ：var 命名变量</p><p>shift + shift ：搜索方法或者类</p><p>ctrl + f：在这个文件中搜关键字</p><p>ctrl + shift + backspace ：回到上一次编辑的地方。</p><p>ctrl + fn + f12 ：查看当前类的方法结构</p><p>shit + fn + f6 ：全局改一个变量的命名（重构）</p><p>都用三杯吐 xxh挺好，然后都用dp不要用px</p><p>ctrl + shfit + enter</p><p>fn + alt + insert :构造器 getset方法那个</p><p>其实直接右键更加方便</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;AS小技巧&quot;&gt;AS小技巧&lt;/h2&gt;
&lt;p&gt;ctrl + Alt + F ：变量全局化&lt;/p&gt;
&lt;p&gt;ctrl + alt + v ：var 命名变量&lt;/p&gt;
&lt;p&gt;shift + shift ：搜索方法或者类&lt;/p&gt;
&lt;p&gt;ctrl + f：在这个文件中搜关键字&lt;</summary>
      
    
    
    
    <category term="AS" scheme="http://lmc.pub/categories/AS/"/>
    
    
    <category term="AS" scheme="http://lmc.pub/tags/AS/"/>
    
  </entry>
  
  <entry>
    <title>【算法】设计链表707</title>
    <link href="http://lmc.pub/2023/03/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8707/"/>
    <id>http://lmc.pub/2023/03/26/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8707/</id>
    <published>2023-03-26T02:44:35.000Z</published>
    <updated>2023-03-26T08:33:33.869Z</updated>
    
    <content type="html"><![CDATA[<h3 id="链表基础">链表基础</h3><h4 id="1-单链表">1. 单链表</h4><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806194529815.png" alt="单链表"></p><h4 id="2-双链表">2. 双链表</h4><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806194559317.png" alt="链表2"></p><h4 id="3-循环链表">3. 循环链表</h4><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806194629603.png" alt="链表4"></p><h4 id="4-存储方式">4. 存储方式</h4><blockquote><p>非连续</p></blockquote><h4 id="5-链表节点的定义">5. 链表节点的定义</h4><p>codes：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在下面</span><br></pre></td></tr></table></figure><h4 id="6-链表的操作">6. 链表的操作</h4><h5 id="a-删除">a. 删除</h5><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806195114541-20230310121459257.png" alt="链表-删除节点"></p><p>直接：前.next = next.next;</p><p>java 会自己清除 D；</p><h5 id="b-添加">b. 添加</h5><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806195134331-20230310121503147.png" alt="链表-添加节点"></p><p>code:</p><h4 id="7-链表和数组的对比">7. 链表和数组的对比</h4><p><img src="https://code-thinking-1253855093.file.myqcloud.com/pics/20200806195200276.png" alt="链表-链表与数据性能对比"></p><hr><p><a href="https://leetcode.cn/problems/design-linked-list/description/">设计链表707 from leetcode</a></p><h2 id="单链表">单链表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设计链表707</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DesignLinkedList707</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">//单链表</span></span><br><span class="line"><span class="type">MyLinkedList</span> <span class="variable">myLinkedList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyLinkedList</span>();</span><br><span class="line"></span><br><span class="line">myLinkedList.addAtHead(<span class="number">1</span>);</span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1 -&gt; </span></span><br><span class="line"></span><br><span class="line">myLinkedList.addAtTail(<span class="number">3</span>);</span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1 -&gt; 3</span></span><br><span class="line"></span><br><span class="line">myLinkedList.addAtIndex(<span class="number">1</span>, <span class="number">2</span>);      </span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1-&gt;2-&gt;3</span></span><br><span class="line"></span><br><span class="line">System.out.println(myLinkedList.get(<span class="number">1</span>));    <span class="comment">// 返回 2</span></span><br><span class="line"></span><br><span class="line">myLinkedList.deleteAtIndex(<span class="number">1</span>);    </span><br><span class="line">myLinkedList.printLinkedList(); <span class="comment">// 现在，链表变为 1-&gt;3</span></span><br><span class="line"></span><br><span class="line">System.out.println(myLinkedList.get(<span class="number">1</span>));    <span class="comment">// 返回 3</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//单链表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line"></span><br><span class="line">ListNode next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span><span class="params">(<span class="type">int</span> val,ListNode next)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyLinkedList</span> &#123;</span><br><span class="line"><span class="comment">//虚拟节点</span></span><br><span class="line">ListNode dummy;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyLinkedList</span><span class="params">()</span> &#123;</span><br><span class="line">    size = <span class="number">0</span>;</span><br><span class="line">    dummy = <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取链表中第 index 个节点的值。如果索引无效，则返回-1。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size) &#123;</span><br><span class="line">    <span class="comment">//越界了</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> dummy.next;<span class="comment">//0</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; index; i++)&#123;</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cur.val;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在链表的第一个元素之前添加一个值为 val 的节点。插入后，新节点将成为链表的第一个节点。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtHead</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">    addAtIndex(<span class="number">0</span>,val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将值为 val 的节点追加到链表的最后一个元素。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtTail</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">    addAtIndex(size,val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在链表中的第 index 个节点之前添加值为 val  的节点。</span></span><br><span class="line"><span class="comment">     * 如果 index 等于链表的长度，则该节点将附加到链表的末尾。</span></span><br><span class="line"><span class="comment">     * 如果 index 大于链表长度，则不会插入节点。</span></span><br><span class="line"><span class="comment">     * 如果index小于0，则在头部插入节点。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtIndex</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> val)</span> &#123;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">if</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line"> index = <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> (index &gt; size) &#123;</span><br><span class="line"> <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//中间正常插入</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="type">ListNode</span> <span class="variable">addListNode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(val);</span><br><span class="line"> <span class="comment">//找到前继节点</span></span><br><span class="line"> <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> dummy;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;  i &lt; index; i++) &#123;</span><br><span class="line"> pre = pre.next;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> addListNode.next = pre.next;</span><br><span class="line"> pre.next = addListNode;</span><br><span class="line"> size++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果索引 index 有效，则删除链表中的第 index 个节点。</span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAtIndex</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="comment">//安全性检验</span></span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//找到 deleteIndexListNode 前面一个 ListNode</span></span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> dummy;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; index; i++) &#123;</span><br><span class="line">    pre = pre.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pre.next = pre.next.next;</span><br><span class="line">    size--;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> dummy.next;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双向链表">双向链表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设计链表707</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DesignLinkedList707</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">MyLinkedList</span> <span class="variable">myLinkedList</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyLinkedList</span>();</span><br><span class="line"></span><br><span class="line">myLinkedList.addAtHead(<span class="number">1</span>);</span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1 -&gt; </span></span><br><span class="line"></span><br><span class="line">myLinkedList.addAtTail(<span class="number">3</span>);</span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1 -&gt; 3</span></span><br><span class="line"></span><br><span class="line">myLinkedList.addAtIndex(<span class="number">1</span>, <span class="number">2</span>);      </span><br><span class="line">myLinkedList.printLinkedList();<span class="comment">// 1-&gt;2-&gt;3</span></span><br><span class="line"></span><br><span class="line">System.out.println(myLinkedList.get(<span class="number">1</span>));    <span class="comment">// 返回 2</span></span><br><span class="line"></span><br><span class="line">myLinkedList.deleteAtIndex(<span class="number">1</span>);    </span><br><span class="line">myLinkedList.printLinkedList(); <span class="comment">// 现在，链表变为 1-&gt;3</span></span><br><span class="line"></span><br><span class="line">System.out.println(myLinkedList.get(<span class="number">1</span>));    <span class="comment">// 返回 3</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双链表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">ListNode prev,next;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">()</span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">(<span class="type">int</span> val)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyLinkedList</span> &#123;</span><br><span class="line"><span class="type">int</span> size;</span><br><span class="line">ListNode head,tail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">MyLinkedList</span><span class="params">()</span>&#123;</span><br><span class="line">size = <span class="number">0</span>;</span><br><span class="line">head = <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">tail = <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">head.next = tail;</span><br><span class="line">tail.prev = head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> index)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size)&#123;</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断从那边开始找</span></span><br><span class="line"><span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"><span class="keyword">if</span> (index &gt; size/<span class="number">2</span>) &#123;</span><br><span class="line"><span class="comment">//从后面开始找</span></span><br><span class="line">cur = tail;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; size - index; i++)&#123;</span><br><span class="line">cur = cur.prev;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//从前面开始找</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= index; i++)&#123;</span><br><span class="line">cur = cur.next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cur.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtHead</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">addAtIndex(<span class="number">0</span>,val);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtTail</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">    addAtIndex(size,val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第 index 个节点之前插入一个新节点，例如index为0，那么新插入的节点为链表的新头节点。</span></span><br><span class="line">    <span class="comment">// 如果 index 等于链表的长度，则说明是新插入的节点为链表的尾结点</span></span><br><span class="line">    <span class="comment">// 如果 index 大于链表的长度，则返回空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAtIndex</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index &gt; size) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    index = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">frontNode</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; index; i++)&#123;</span><br><span class="line">    frontNode = frontNode.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//现在 frontNode 就是要插入节点位置前一个</span></span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">insertNode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(val);</span><br><span class="line">    insertNode.next = frontNode.next;</span><br><span class="line">    frontNode.next.prev = insertNode;</span><br><span class="line">    insertNode.prev = frontNode;</span><br><span class="line">    frontNode.next = insertNode;</span><br><span class="line"></span><br><span class="line">    size++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAtIndex</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt;= size) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">frontNode</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; index; i++) &#123;</span><br><span class="line">    frontNode = frontNode.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//现在 frontNode 就是要删除节点的上一个节点</span></span><br><span class="line">    frontNode.next.next.prev = frontNode;</span><br><span class="line">    frontNode.next = frontNode.next.next;</span><br><span class="line">    size--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head.next;</span><br><span class="line">    <span class="keyword">while</span>(cur != tail)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">一道题目包含了链表的5个基本操作。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】移除链表元素203</title>
    <link href="http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0203/"/>
    <id>http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0203/</id>
    <published>2023-03-25T14:08:56.000Z</published>
    <updated>2023-03-25T15:05:16.996Z</updated>
    
    <content type="html"><![CDATA[<h3 id="203-移除数组元素">203 移除数组元素</h3><p><a href="https://leetcode.cn/problems/remove-linked-list-elements/description/">203. 移除链表元素 - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//移除链表元素 203</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RemoveLinkedListElements203</span> &#123; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> initLinkedList(arr);</span><br><span class="line">head = removeElements(head,<span class="number">3</span>);</span><br><span class="line">printLinkedList(head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 虚拟节点方案</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@head</span> 链表头节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@val</span>  删除元素</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 被删除节点 </span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">removeElements</span><span class="params">(ListNode head, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="comment">//安全性校验</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>,head);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> dummy;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (cur.val == val) &#123;</span><br><span class="line">        pre.next = cur.next;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        pre = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ListNode <span class="title function_">initLinkedList</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> head;</span><br><span class="line">    ListNode cur;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    cur = <span class="keyword">new</span> <span class="title class_">ListNode</span>(nums[i]);</span><br><span class="line">    pre.next = cur;</span><br><span class="line"> pre = cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printLinkedList</span><span class="params">(ListNode head)</span>&#123;</span><br><span class="line">    <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="literal">null</span>)&#123;</span><br><span class="line">    System.out.print(cur.val + <span class="string">&quot; -&gt; &quot;</span>);</span><br><span class="line">    cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line"><span class="type">int</span> val;<span class="comment">//节点的值</span></span><br><span class="line">ListNode next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">()</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">(<span class="type">int</span> val)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">ListNode</span> <span class="params">(<span class="type">int</span> val, ListNode next)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.val = val;</span><br><span class="line"><span class="built_in">this</span>.next = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">链表章节【虚拟头节点】的典型例子。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【修电脑】笔记本触控板突然没用了</title>
    <link href="http://lmc.pub/2023/03/25/%E3%80%90%E4%BF%AE%E7%94%B5%E8%84%91%E3%80%91%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%A7%A6%E6%8E%A7%E6%9D%BF%E7%AA%81%E7%84%B6%E6%B2%A1%E7%94%A8%E4%BA%86/"/>
    <id>http://lmc.pub/2023/03/25/%E3%80%90%E4%BF%AE%E7%94%B5%E8%84%91%E3%80%91%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%A7%A6%E6%8E%A7%E6%9D%BF%E7%AA%81%E7%84%B6%E6%B2%A1%E7%94%A8%E4%BA%86/</id>
    <published>2023-03-25T03:00:31.000Z</published>
    <updated>2023-03-25T03:53:38.527Z</updated>
    
    <content type="html"><![CDATA[<p>今早起来，心情不好。</p><p>拿出 我的<code>扛皮油特</code>准备刷个算法题。</p><p>结果发现：莫名其妙，触控板挂了。</p><p>然后一上午就在解决这个问题，什么都没干。</p><h2 id="一，查找病因">一，查找病因</h2><p>电脑坏了一般原因有三：</p><ol><li>硬件上坏了；</li><li>软件，也就是驱动有问题；</li><li>系统自己的Bug；（比如win11经常这样）</li><li>大自然神力；</li></ol><p>由于我对电脑一向爱护有加，所以基本排除1。</p><p>我当时猜想就是：</p><ol><li>驱动坏了</li><li>win11老狗又更新的新Bug</li></ol><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230325111444.jpg" alt="微信图片_20230325111444"></p><p>看了以下设备管理器，<code>人体学输入设备</code>和<code>鼠标和其他指针设备</code>下面都没有什么<code>触控板 or Touch</code>相关字眼的东西。</p><p>大概率是<code>触控板驱动没了</code>。</p><h2 id="二，solution">二，solution</h2><h3 id="2-1-拷贝驱动文件">2.1 拷贝驱动文件</h3><p>我先是找到了触控板的驱动名和文件夹名 from 网上。</p><p>然后发现我真的莫得这个文件。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230325112410837.png" alt="image-20230325112410837"></p><p>然后让我朋友从他电脑上传来一份新的给我。</p><p>然后这个文件目录就是在 Windows 下面。</p><p><code>Cursors</code> 这个。</p><p>然后发现没用。。。</p><h3 id="2-2-然后去官方重下了所有驱动">2.2 然后去官方重下了所有驱动</h3><p>没用</p><h3 id="2-3-联想驱动管理-360驱动管家">2.3 联想驱动管理/360驱动管家</h3><p>没用</p><p>重启了十几遍，还是没好。</p><h2 id="三，ending">三，ending</h2><p>最后查出原因是：静电。</p><p>解决办法是：</p><ol><li>先把电脑关机。</li><li>把电脑所有外设（什么鼠标，键盘，充电的）都去掉。</li><li>在不接电源的情况下，长按开机键30s以上，让他开机又关机。</li></ol><p>上面这个步骤就是去除电脑静电的。</p><p>然后就会出现下面这个<code>蓝屏</code>：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230325111452.jpg" alt="微信图片_20230325111452"></p><p>这时候基本可以看下<code>触控板</code>能不能用了。</p><p>我的是可以了。</p><p>点击重启电脑，然后我滴生产力就又恢复了。</p><p>查看驱动列表：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230325113527192.png" alt="image-20230325113527192"></p><p>触控板的驱动就出来了。</p><hr><p>这波属于是<code>自然怪力乱神</code>了。</p><p>合理的解释是：</p><p>天气干燥，人体携带静电在我触摸电脑的时候静电导入到电脑中，造成的电脑出现使用的异常情况。</p><p>so</p><p>电脑也是像汽车一样要保养的。</p><p>除静电，清灰，打光，保持干净。</p><p>一起干活的老伙计，我还要靠你吃饭捏。</p>]]></content>
    
    
    <summary type="html">有天心情不好，准备拿电脑刷道算法。突觉触控板挂了，遂修之。</summary>
    
    
    
    <category term="修电脑" scheme="http://lmc.pub/categories/%E4%BF%AE%E7%94%B5%E8%84%91/"/>
    
    
    <category term="修电脑" scheme="http://lmc.pub/tags/%E4%BF%AE%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>【算法】长度最小的子数组209</title>
    <link href="http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84209/"/>
    <id>http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84209/</id>
    <published>2023-03-24T23:16:37.000Z</published>
    <updated>2023-03-24T23:17:39.199Z</updated>
    
    <content type="html"><![CDATA[<h3 id="209-长度最小的子数组">209. 长度最小的子数组</h3><p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/">209. 长度最小的子数组 - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//209长度最小的子数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MinimumSizeSubarraySum209</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入 targetNum:&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">target</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line"><span class="type">int</span> <span class="variable">minLen</span> <span class="operator">=</span> minSubArrayLen(target,arr);</span><br><span class="line"><span class="keyword">if</span> (minLen == <span class="number">0</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;\n没有找到&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;\n最小的子数组的长度为：&quot;</span> + minLen);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//滑动窗口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>,sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>;right &lt; nums.length; right++) &#123;</span><br><span class="line">sum += nums[right];</span><br><span class="line"><span class="keyword">while</span> ( sum &gt;= target)&#123;</span><br><span class="line">res = Math.min(res,right - left + <span class="number">1</span>);</span><br><span class="line">sum  -= nums[left++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">return</span> <span class="variable">res</span> <span class="operator">=</span>= Integer.MAX_VALUE ? <span class="number">0</span> : res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">数组篇章讲【滑动窗口】的典型例子。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】螺旋矩阵II59</title>
    <link href="http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II59/"/>
    <id>http://lmc.pub/2023/03/25/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5II59/</id>
    <published>2023-03-24T22:55:17.000Z</published>
    <updated>2023-03-24T23:18:14.959Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/spiral-matrix-ii/submissions/417379777/">59. 螺旋矩阵 II - 力扣（Leetcode）</a></p><p>MyCodes:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//螺旋矩阵II 59</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpiralMatrixII59</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入  n = &quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[][] res = generateMatrix(n);</span><br><span class="line">System.out.println(<span class="string">&quot;\n&quot;</span> + n + <span class="string">&quot; 的螺旋矩阵为：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span>[] itemGroup : res)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> item : itemGroup)&#123;</span><br><span class="line">System.out.print(item + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">input.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line"><span class="type">int</span>[][] res = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line"><span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//起始点</span></span><br><span class="line"><span class="type">int</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//控制循环次数</span></span><br><span class="line"><span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//填充 num</span></span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (loop++ &lt; n / <span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上</span></span><br><span class="line"><span class="keyword">for</span> (j = start; j &lt; n - loop; j++)&#123;</span><br><span class="line">res[start][j] = count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//右</span></span><br><span class="line"><span class="keyword">for</span> (i = start; i &lt; n - loop; i++)&#123;</span><br><span class="line">res[i][j] = count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下</span></span><br><span class="line"><span class="keyword">for</span> (; j &gt;= loop; j--)&#123;</span><br><span class="line">res[i][j] = count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左</span></span><br><span class="line"><span class="keyword">for</span> (; i &gt;= loop; i--)&#123;</span><br><span class="line">res[i][j] = count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变起始点</span></span><br><span class="line">start++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//n 为奇数，填充 （n/2, n/2）= n*n;</span></span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">res[start][start] = count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">数组篇章讲【模拟行为】的典型例子。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】有序数组的平方977</title>
    <link href="http://lmc.pub/2023/03/24/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9977/"/>
    <id>http://lmc.pub/2023/03/24/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9977/</id>
    <published>2023-03-24T14:09:35.000Z</published>
    <updated>2023-03-25T03:48:54.080Z</updated>
    
    <content type="html"><![CDATA[<h3 id="977-有序数组的平方">977. 有序数组的平方</h3><p>[<a href="https://www.programmercarl.com/0977.%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9.html#%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E7%89%88%E6%9C%AC">977.有序数组的平方 - 力扣（Leetcode)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//977有序数组的平方</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SquaresOfASortedArray977</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">int</span>[] arr = &#123;-<span class="number">4</span>,-<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] res = sortedSquares(arr);</span><br><span class="line">System.out.print(<span class="string">&quot;平方结果为：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> item : res) &#123;</span><br><span class="line">System.out.print(item + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0,1,9,16,100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//双指针法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];</span><br><span class="line"></span><br><span class="line"><span class="comment">//我自己写的办法</span></span><br><span class="line"><span class="comment">// for(int i = res.length - 1;i &gt;= 0;i--)&#123;</span></span><br><span class="line"><span class="comment">// if (nums[left] * nums[left] &lt; nums[right] * nums[right]) &#123;</span></span><br><span class="line"><span class="comment">// res[i] = nums[right] * nums[right--];</span></span><br><span class="line"><span class="comment">// &#125;else &#123;</span></span><br><span class="line"><span class="comment">// res[i] = nums[left] * nums[left++];</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//另外一种办法</span></span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> res.length - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line"><span class="keyword">if</span> (nums[left] * nums[left] &lt; nums[right] * nums[right]) &#123;</span><br><span class="line">res[i--] = nums[right] * nums[right--];</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">res[i--] = nums[left] * nums[left++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">数组篇章讲【双指针法】的又一个典型例子。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【算法】移除元素27</title>
    <link href="http://lmc.pub/2023/03/24/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A027/"/>
    <id>http://lmc.pub/2023/03/24/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A027/</id>
    <published>2023-03-24T14:08:44.000Z</published>
    <updated>2023-03-25T03:48:43.325Z</updated>
    
    <content type="html"><![CDATA[<h3 id="27-移除元素">27. 移除元素</h3><p><a href="https://leetcode.cn/problems/remove-element/">27. 移除元素 - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//27 移除元素</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RemoveElement27</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">myScanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">int</span>[] numArray = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line">System.out.print(<span class="string">&quot;请输入要去除的元素：&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">removeNum</span> <span class="operator">=</span> myScanner.nextInt();</span><br><span class="line"><span class="comment">//int newLength = removeElement(numArray,removeNum);</span></span><br><span class="line"><span class="type">int</span> <span class="variable">newLength</span> <span class="operator">=</span> removeElement02(numArray,removeNum);</span><br><span class="line">System.out.println(<span class="string">&quot;\nThe length of the new numArray is &quot;</span> + newLength);</span><br><span class="line">myScanner.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//双指针法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums,<span class="type">int</span> val)</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">slowIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">fastIndex</span> <span class="operator">=</span> <span class="number">0</span>; fastIndex &lt; nums.length; fastIndex++)&#123;</span><br><span class="line"><span class="keyword">if</span> (nums[fastIndex] != val) &#123;</span><br><span class="line">nums[slowIndex] = nums[fastIndex];</span><br><span class="line">slowIndex++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> slowIndex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相向双指针法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">removeElement02</span><span class="params">(<span class="type">int</span>[] nums,<span class="type">int</span> val)</span>&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//找到从右边开始第一个会被交换过来的元素作为第一个交换的</span></span><br><span class="line"><span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--;</span><br><span class="line"><span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line"><span class="keyword">if</span> (nums[left] == val) &#123;</span><br><span class="line">nums[left] = nums[right--];</span><br><span class="line">&#125;</span><br><span class="line">left++;</span><br><span class="line"><span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; nums[right] == val) right--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bug:</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230324150049748.png" alt=""></p><p>solution：文件名要和类名保持一致。</p>]]></content>
    
    
    <summary type="html">数组篇章讲【双指针法】的典型例子。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【计网】介绍一下OSI七层模型和TCP五层模型？</title>
    <link href="http://lmc.pub/2023/03/23/%E3%80%90%E8%AE%A1%E7%BD%91%E3%80%91%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8BOSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B%E5%92%8CTCP%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B%EF%BC%9F/"/>
    <id>http://lmc.pub/2023/03/23/%E3%80%90%E8%AE%A1%E7%BD%91%E3%80%91%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8BOSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B%E5%92%8CTCP%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B%EF%BC%9F/</id>
    <published>2023-03-23T14:13:25.000Z</published>
    <updated>2023-03-23T14:48:04.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-计算机网络体系结构⭐">1. 计算机网络体系结构⭐</h2><blockquote><p>计算机网络体系结构有两种说法：1. OSI体系结构；2. TCP/IP体系结构。</p><p>前者是学术上的，后者是实际市场中的。</p><p><strong>7层 OSI 体系结构</strong>：</p><table><thead><tr><th>应用层</th></tr></thead><tbody><tr><td>表示层</td></tr><tr><td>会话层</td></tr><tr><td>运输层</td></tr><tr><td>网络层</td></tr><tr><td>数据链路层</td></tr><tr><td>物理层</td></tr></tbody></table><p><strong>4层 TCP/IP 体系结构</strong>：</p><table><thead><tr><th></th><th>网络协议</th><th>作用</th></tr></thead><tbody><tr><td>应用层</td><td>HTTP/DNS</td><td>处理应用程序之间的逻辑</td></tr><tr><td>运输层</td><td>TCP/UDP</td><td>不同进程之间的网络通信问题</td></tr><tr><td>网际层</td><td>IP</td><td>分组在多个网络上传输的问题</td></tr><tr><td>网络接口层</td><td>各种网络接口</td><td></td></tr></tbody></table><p>我们都是用 TCP/IP 协议，也就是后者。</p><p>也有一种说话说：TCP/IP 五层体系结构。</p><p>就是在原有四次之上<code>网络接口层</code>换成了<code>数据链路层 + 物理层</code>。</p></blockquote>]]></content>
    
    
    <summary type="html">一个位于概述章节，常考的计网面试题。</summary>
    
    
    
    <category term="计网" scheme="http://lmc.pub/categories/%E8%AE%A1%E7%BD%91/"/>
    
    
    <category term="计网" scheme="http://lmc.pub/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>【算法】二分查找704</title>
    <link href="http://lmc.pub/2023/03/23/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE704/"/>
    <id>http://lmc.pub/2023/03/23/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE704/</id>
    <published>2023-03-23T13:46:56.000Z</published>
    <updated>2023-03-26T08:34:21.745Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h3 id="1-数组基本概念">1. 数组基本概念</h3><p>在一片连续的内存地址上同意类型的数据集合。</p><p>二维数组在C++中内存地址是连续的，但是Java中不是。</p><p>Java 中 int[5] [6] 是5个行首指针放在一个连续组里面大小为5，然后各自指向一条连续的6空间。</p><p>所以是5*6的连续空间</p><p>Java中是每一行当一个，然后每行的头是连续内存。</p></blockquote><h1>二分查找</h1><h2 id="一，题目描述">一，题目描述</h2><p><a href="https://leetcode.cn/problems/binary-search/">704</a></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230323215019331.png" alt="image-20230323215019331"></p><h2 id="二，适用条件">二，适用条件</h2><ol><li>数组有序；</li><li>数组无重复元素；</li></ol><h2 id="三，代码实现：">三，代码实现：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左闭右闭版本</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="comment">//防止target不在范围内，多次循环</span></span><br><span class="line">        <span class="keyword">if</span> (target &lt; nums[<span class="number">0</span>] || target &gt; nums[nums.length - <span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>,right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[middle] &lt; target)&#123;</span><br><span class="line">                left = middle + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (nums[middle] &gt; target)&#123;</span><br><span class="line">                right = middle - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> middle;</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四，感想">四，感想</h2><ol><li>要注意力扣写法和ACM写法。</li><li>ACM写法是面试的样子：一张白字自己实现所有。</li><li>先用 Sublime 写吧。编号就是 <code>704 BinarySearch</code></li><li>class 里面一个main 一个 function。</li><li>一个小Bug：<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230323191106860.png" alt="image-20230323191106860"></li></ol>]]></content>
    
    
    <summary type="html">数组篇章讲【二分法】和 【循环不变量原则】的典型例子。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Git基础</title>
    <link href="http://lmc.pub/2023/03/14/Git/"/>
    <id>http://lmc.pub/2023/03/14/Git/</id>
    <published>2023-03-14T14:03:00.000Z</published>
    <updated>2023-03-23T14:49:25.594Z</updated>
    
    <content type="html"><![CDATA[<h1>Git基础</h1><h2 id="一，准备">一，准备</h2><h3 id="1-安装">1. 安装</h3><blockquote><p>下载：<a href="https://gitforwindows.org/">Git for Windows</a></p></blockquote><p>无脑式下一步。</p><p>git –version，出现下面 git 就是安装好了。</p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314154601364.png" alt="image-20230314154601364" style="zoom:80%;" /><h3 id="2-配置用户信息">2. 配置用户信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;xxx@qq.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-创建仓库">3. 创建仓库</h3><p>你想让哪一个文件夹成为 git 仓库就在它下面打开 git bash 然后输下面这个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>这个文件夹下面就会有一个 .git 文件。</p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314170738200.png" alt="image-20230314170738200" style="zoom:80%;" /><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314170817463.png" alt="image-20230314170817463" style="zoom:80%;" /><h3 id="4-查看仓库状态">4. 查看仓库状态</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git git status</span><br></pre></td></tr></table></figure><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314170836047.png" alt="image-20230314170836047" style="zoom:80%;" /><h2 id="二，暂存区">二，暂存区</h2><blockquote><p>准备工作：在文件夹下搞个文件。（最好英文名）</p></blockquote><h3 id="1-添加到暂存区">1. 添加到暂存区</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 添加指定文件</span><br><span class="line">git add 文件名</span><br><span class="line"></span><br><span class="line"># 添加这个仓库文件夹下的所有文件</span><br><span class="line">git add -A</span><br></pre></td></tr></table></figure><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314171905546.png" alt="image-20230314171905546" style="zoom:80%;" /><h3 id="2-暂存区回来">2. 暂存区回来</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git restore 文件名</span><br><span class="line">git restore --staged 文件名</span><br></pre></td></tr></table></figure><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314171931261.png" alt="image-20230314171931261" style="zoom:80%;" /><h2 id="三，本地仓库">三，本地仓库</h2><h3 id="1-提交到本地仓库">1. 提交到本地仓库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;这次提交干了什么事的描述（建议英文）&quot;</span><br></pre></td></tr></table></figure><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314172124631.png" alt="image-20230314172124631" style="zoom:80%;" /><h3 id="2-从本地仓库回来">2. 从本地仓库回来</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 恢复到上一次</span><br><span class="line">git reset --hard HEAD~</span><br><span class="line"></span><br><span class="line"># 恢复到指定提交</span><br><span class="line">git reset --hard 提交id</span><br></pre></td></tr></table></figure><p>本地仓库里有很多版本，用这个会直接把你的那个文件回到指令中的那个版本。</p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230314172813969.png" alt="image-20230314172813969" style="zoom:80%;" /><h3 id="3-查看提交历史">3. 查看提交历史</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>错了就改，缺了就补，时常回顾，精心打造自己的计算机知识体系。</p>]]></content>
    
    
    <summary type="html">Git的命令行和本地常用指令和概念。</summary>
    
    
    
    <category term="Git" scheme="http://lmc.pub/categories/Git/"/>
    
    
    <category term="Git" scheme="http://lmc.pub/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>【Bug】Java中Char和Int的互转</title>
    <link href="http://lmc.pub/2023/01/11/%E3%80%90Bug%E3%80%91Java%E4%B8%ADChar%E5%92%8CInt%E7%9A%84%E4%BA%92%E8%BD%AC/"/>
    <id>http://lmc.pub/2023/01/11/%E3%80%90Bug%E3%80%91Java%E4%B8%ADChar%E5%92%8CInt%E7%9A%84%E4%BA%92%E8%BD%AC/</id>
    <published>2023-01-11T04:24:27.000Z</published>
    <updated>2023-03-23T14:26:07.801Z</updated>
    
    <content type="html"><![CDATA[<h1>【Bug】Java中Char和Int的互转</h1><p>今天在做一个栈相关的算法，然后在 Java中Char和Int互转 这里粗心记混了，结果出了个Bug，修了一会。</p><p>事情是这样的：</p><p>有一个由数字构成的字符串，比如：“1433223”，然后想把组成字符串的每一位数字都放到一个栈里面去。</p><p>但是每次从这个字符串(String)拿出来的是是一个字符(Char)而非数字(Int)，比如拿出第一位，他是字符‘1’而不是整数1。</p><p>当时就直接强转了，以为： int 1 = (int)‘1’</p><p>但其实 (int)‘1’ = 49(int) 而不是期望的 1(int)。导致后面的一大堆出了奇怪的 bug。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230111231905800.png" alt="image-20230111231905800"></p><p>因为 Java 中的char其实底层都是对应的ASCII码，也是int整数。</p><p>比如：‘1’（Char） = 49(int)</p><p>所以正确的做法，应该是下面这样：</p><p>把char转为对应的Integer</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20230111232012386.png" alt="image-20230111232012386"></p><p>当然也可以这样：</p><p>numStack.push((int)(char01 - ‘0’);</p><p>所以关于 Java的Char底层就是对应的ASCII码(int),你忘了吗？</p><p><s>(int)‘1’ = 1(int)</s></p><p>(int)‘1’ = 49(int)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;【Bug】Java中Char和Int的互转&lt;/h1&gt;
&lt;p&gt;今天在做一个栈相关的算法，然后在 Java中Char和Int互转 这里粗心记混了，结果出了个Bug，修了一会。&lt;/p&gt;
&lt;p&gt;事情是这样的：&lt;/p&gt;
&lt;p&gt;有一个由数字构成的字符串，比如：“1433223”，然后</summary>
      
    
    
    
    <category term="Bug" scheme="http://lmc.pub/categories/Bug/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>App打包</title>
    <link href="http://lmc.pub/2022/12/19/%E6%80%8E%E4%B9%88%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84APP%E8%AE%A9%E5%A4%A7%E5%AE%B6%E7%94%A8%E4%B8%8A%EF%BC%88App%E6%89%93%E5%8C%85%EF%BC%89%EF%BC%9F/"/>
    <id>http://lmc.pub/2022/12/19/%E6%80%8E%E4%B9%88%E8%AE%A9%E8%87%AA%E5%B7%B1%E7%9A%84APP%E8%AE%A9%E5%A4%A7%E5%AE%B6%E7%94%A8%E4%B8%8A%EF%BC%88App%E6%89%93%E5%8C%85%EF%BC%89%EF%BC%9F/</id>
    <published>2022-12-19T13:15:42.000Z</published>
    <updated>2023-03-23T14:35:16.054Z</updated>
    
    <content type="html"><![CDATA[<h1>App打包</h1><p>怎么让自己的APP让大家用            上</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219175737919.png" alt="image-20221219175737919"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219175755262.png" alt="image-20221219175755262"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219175830964.png" alt="image-20221219175830964"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219180120421.png" alt="image-20221219180120421"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219180149245.png" alt="image-20221219180149245"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219180250938.png" alt="image-20221219180250938"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219180326003.png" alt="image-20221219180326003"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219180419610.png" alt="image-20221219180419610"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;App打包&lt;/h1&gt;
&lt;p&gt;怎么让自己的APP让大家用            上&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221</summary>
      
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>怎么给APP换名字和图标？</title>
    <link href="http://lmc.pub/2022/12/10/%E6%80%8E%E4%B9%88%E7%BB%99APP%E6%8D%A2%E5%90%8D%E5%AD%97%E5%92%8C%E5%9B%BE%E6%A0%87%EF%BC%9F/"/>
    <id>http://lmc.pub/2022/12/10/%E6%80%8E%E4%B9%88%E7%BB%99APP%E6%8D%A2%E5%90%8D%E5%AD%97%E5%92%8C%E5%9B%BE%E6%A0%87%EF%BC%9F/</id>
    <published>2022-12-10T13:15:42.000Z</published>
    <updated>2023-03-23T14:35:11.116Z</updated>
    
    <content type="html"><![CDATA[<h1>怎么给APP换名字和图标？</h1><p>没美化的APP：</p><p>统一绿底安卓头，名字奇奇怪怪</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219163250771.png" alt="image-20221219163250771"></p><p>换个名字换个图标：</p><p>像那么回事了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/A5963A1E4899F6DD73EA08A7FA981DEE.jpg" alt="img"></p><h2 id="换名字">换名字</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219163641901.png" alt="image-20221219163641901"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219164336011.png" alt="image-20221219164336011"></p><h2 id="改图标">改图标</h2><p>准备一张你想要的照片当App图标</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219164443960.png" alt="image-20221219164443960"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219165100459.png" alt="image-20221219165100459"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219165203825.png" alt="image-20221219165203825"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219165258740.png" alt="image-20221219165258740"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20221219165422364.png" alt="image-20221219165422364"></p><p>然后直接 Finish 就可以拉。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;怎么给APP换名字和图标？&lt;/h1&gt;
&lt;p&gt;没美化的APP：&lt;/p&gt;
&lt;p&gt;统一绿底安卓头，名字奇奇怪怪&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags</summary>
      
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://lmc.pub/2022/11/03/%E3%80%90%E9%A1%B9%E7%9B%AE%E3%80%91Android_%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5App/"/>
    <id>http://lmc.pub/2022/11/03/%E3%80%90%E9%A1%B9%E7%9B%AE%E3%80%91Android_%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5App/</id>
    <published>2022-11-03T12:06:00.371Z</published>
    <updated>2023-03-23T14:32:55.749Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 【项目】Android_天气预报App<br>author: LMC<br>toc: true<br>mathjax: true<br>tags:</p><ul><li>项目<br>categories:</li><li>项目<br>date: 2022-11-03 10:46:00<br>summary:<br>top_img:<br>cover:<br>password:<br>description:<br>copyright:<br>copyright_author:<br>copyright_author_href:<br>copyright_url:<br>copyright_info:</li></ul><hr><h1>火山天气</h1><p>天气API：<a href="https://dashboard.caiyunapp.com/v1/token/">彩云科技 | 开放平台 (caiyunapp.com)</a></p><blockquote><ol><li><p>查询全球城市数据信息：<a href="https://api.caiyunapp.com/v2/place?query=%E5%8C%97%E4%BA%AC&amp;token=%7Btoken%7D&amp;lang=zh_CN">https://api.caiyunapp.com/v2/place?query=北京&amp;token={token}&amp;lang=zh_CN</a></p><p>返回JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;**status**&quot;</span><span class="punctuation">:</span><span class="string">&quot;ok&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;**places**&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;**name**&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京市&quot;</span><span class="punctuation">,</span><span class="attr">&quot;**location**&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.9041999</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.4073963</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;**formatted_address**&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国北京市&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京西站&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.89491</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.322056</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 丰台区 莲花池东路118号&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京南站&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.865195</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.378545</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 丰台区 永外大街车站路12号&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京站(地铁站)&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.904983</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.427287</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 东城区 2号线&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>查询某地区实时天气：</p><p><code>https://api.caiyunapp.com/v2.5/&#123;token&#125;/116.4073963,39.9041999/realtime.json  </code></p><p>返回JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ok&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**realtime**&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;**temperature**&quot;</span><span class="punctuation">:</span> <span class="number">23.16</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;**skycon**&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WIND&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;**air_quality**&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;aqi&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;chn&quot;</span><span class="punctuation">:</span> <span class="number">17.0</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span> </span><br></pre></td></tr></table></figure></li><li><p>查询未来几天天气信息接口：</p><p><code>https://api.caiyunapp.com/v2.5/&#123;token&#125;/116.4073963,39.9041999/daily.json  </code></p><p>返回的JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ok&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;daily&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">25.7</span><span class="punctuation">,</span> <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">20.3</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skycon&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLOUDY&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span><span class="string">&quot;2019-10-20T00:00+08:00&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;life_index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;coldRisk&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;易发&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ...<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;carWashing&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;适宜&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ultraviolet&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dressing&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;舒适&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h2 id="1-MVVM项目架构">1. MVVM项目架构</h2><p>MVVM：Model-View-ViewModel  （还有MVP/MVC）</p><p>Model：数据模型</p><p>View：界面展示</p><p>ViewModel：连接数据和界面的桥梁</p><p>实现让业务逻辑和界面展示分离的程序结构设计</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221103164101961.png" alt="image-20221103164101961"></p><p>UI控制层：Activity，Fragment，布局文件等和界面有关的东西；</p><p>ViewModel层：持有和UI元素相关的数据，并保证旋转不会丢失；同时提供接口给UI控制层调用和仓库层通信；</p><p>仓库层：判断调用请求的数据去哪里获取</p><p>本地数据源：SQLite，SharedPreferences</p><p>网络数据库：Retrofit访问服务器提供的Webservice接口来获得</p><p>注意：箭头是单向的，表示上一层只能持有下一层的引用。不能反过来也不能跨层</p><p>项目结构：</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221103165442048.png" alt="image-20221103165442048"></p><p>依赖：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&#x27;androidx.core:core-ktx:1.7.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.3.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.4.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.0.4&#x27;</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&#x27;androidx.recyclerview:recyclerview:1.2.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.lifecycle:lifecycle-extensions:2.2.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.lifecycle:lifecycle-livedata-ktx:2.5.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&quot;androidx.swiperefreshlayout:swiperefreshlayout:1.1.0&quot;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.squareup.retrofit2:retrofit:2.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.squareup.retrofit2:converter-gson:2.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1&quot;</span></span><br><span class="line"></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.13.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.3&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.4.0&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-城市数据">2. 城市数据</h2><blockquote><ol><li><p>查询全球城市数据信息：<a href="https://api.caiyunapp.com/v2/place?query=%E5%8C%97%E4%BA%AC&amp;token=%7Btoken%7D&amp;lang=zh_CN">https://api.caiyunapp.com/v2/place?query=北京&amp;token={token}&amp;lang=zh_CN</a></p><p>返回JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;**status**&quot;</span><span class="punctuation">:</span><span class="string">&quot;ok&quot;</span><span class="punctuation">,</span><span class="attr">&quot;query&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;**places**&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;**name**&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京市&quot;</span><span class="punctuation">,</span><span class="attr">&quot;**location**&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.9041999</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.4073963</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;**formatted_address**&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国北京市&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京西站&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.89491</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.322056</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 丰台区 莲花池东路118号&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京南站&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.865195</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.378545</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 丰台区 永外大街车站路12号&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;北京站(地铁站)&quot;</span><span class="punctuation">,</span><span class="attr">&quot;location&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span><span class="number">39.904983</span><span class="punctuation">,</span><span class="attr">&quot;lng&quot;</span><span class="punctuation">:</span><span class="number">116.427287</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;formatted_address&quot;</span><span class="punctuation">:</span><span class="string">&quot;中国 北京市 东城区 2号线&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="2-1-逻辑层">2.1 逻辑层</h3><h4 id="2-1-1-准备工作">2.1.1 准备工作</h4><p><strong>全局获取context</strong></p><blockquote><p>为什么？</p><p>因为MVVM这种分层架构设计，我们在ViewModel就不再持有Activity的引用了，所以会经常出现缺<code>context</code>的情况。</p></blockquote><ol><li><p>在com.lmc.volcanoweather包下新建一个VolcanoWeatherApplication类:</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221106162714195.png" alt="image-20221106162714195"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.<span class="keyword">annotation</span>.SuppressLint</span><br><span class="line"><span class="keyword">import</span> android.app.Application</span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="comment">//全局获取context</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VolcanoWeatherApplication</span>:<span class="type">Application</span></span>() &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="meta">@SuppressLint(<span class="string">&quot;StaticFieldLeak&quot;</span>)</span></span><br><span class="line">        <span class="keyword">lateinit</span> <span class="keyword">var</span> context: Context</span><br><span class="line">        <span class="comment">//天气API的令牌值</span></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">val</span> TOKEN = <span class="string">&quot;NL0AtaDgGQO3Ytfg&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate()</span><br><span class="line">        context = applicationContext</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺手把天气API的令牌值放进去</p></li><li><p>在AndroidManifest下指定用我们这个VolcanoWeatherApplication</p><p>就下面name那一句指定下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:name</span>=<span class="string">&quot;.VolcanoWeatherApplication&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:allowBackup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:dataExtractionRules</span>=<span class="string">&quot;@xml/data_extraction_rules&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:fullBackupContent</span>=<span class="string">&quot;@xml/backup_rules&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:icon</span>=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:label</span>=<span class="string">&quot;@string/app_name&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:roundIcon</span>=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:supportsRtl</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.VolcanoWeather&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">tools:targetApi</span>=<span class="string">&quot;31&quot;</span>&gt;</span></span><br><span class="line">      ……</span><br><span class="line">   <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="2-1-2-数据模型">2.1.2 数据模型</h4><ol><li><p>logic-》model 下建立一个个PlaceResponse.kt</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221106164054048.png" alt="image-20221106164054048"></p><p>代码：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">PlaceResponse</span></span>(<span class="keyword">val</span> status: String, <span class="keyword">val</span> places: List&lt;Place&gt;)</span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Place</span></span>(<span class="keyword">val</span> name: String, <span class="keyword">val</span> location: Location,</span><br><span class="line">                 <span class="meta">@SerializedName(<span class="string">&quot;formatted_address&quot;</span>)</span> <span class="keyword">val</span> address: String)<span class="comment">//JSON中字段命名和Kotlin中命名规范不一致就用一下这个</span></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Location</span></span>(<span class="keyword">val</span> lng: String, <span class="keyword">val</span> lat: String)</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-1-3-网络层">2.1.3 网络层</h4><ol><li><p>定义一个Retrofit接口（访问彩云天气城市搜索API:logic/network下新建PlaceService）</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.network</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.VolcanoWeatherApplication</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.PlaceResponse</span><br><span class="line"><span class="keyword">import</span> retrofit2.Call</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.GET</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.Query</span><br><span class="line"><span class="comment">//位置服务</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PlaceService</span> </span>&#123;</span><br><span class="line">    <span class="comment">//发送的网络请求只有query(地址)，其他的都不会变</span></span><br><span class="line">    <span class="meta">@GET(<span class="string">&quot;v2/place?token=<span class="subst">$&#123;VolcanoWeatherApplication.TOKEN&#125;</span>&amp;lang=zh_CN&quot;</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">searchPlaces</span><span class="params">(<span class="meta">@Query(<span class="string">&quot;query&quot;</span>)</span> query: <span class="type">String</span>)</span></span>:Call&lt;PlaceResponse&gt;<span class="comment">//数据返回结果解析成PlaceResponse</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建一个Retrofit构造器（logic/network-》ServiceCreator单例类）</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.network</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> retrofit2.Retrofit</span><br><span class="line"><span class="keyword">import</span> retrofit2.converter.gson.GsonConverterFactory</span><br><span class="line"></span><br><span class="line"><span class="comment">//Retrofit的构造器</span></span><br><span class="line"><span class="keyword">object</span> ServiceCreator &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">val</span> BASE_URL = <span class="string">&quot;https://api.caiyunapp.com/&quot;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> retrofit = Retrofit.Builder()</span><br><span class="line">        .baseUrl(BASE_URL)</span><br><span class="line">        .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">        .build()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">create</span><span class="params">(serviceClass: <span class="type">Class</span>&lt;<span class="type">T</span>&gt;)</span></span>: T = retrofit.create(serviceClass)</span><br><span class="line">    <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;<span class="keyword">reified</span> T&gt;</span> <span class="title">create</span><span class="params">()</span></span>: T = create(T::<span class="keyword">class</span>.java)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>一个统一的网络数据源访问入口（对所有网络请求API进行封装）logic/network/VolcanoWeatherNetwork单例类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.network</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> retrofit2.Call</span><br><span class="line"><span class="keyword">import</span> retrofit2.Callback</span><br><span class="line"><span class="keyword">import</span> retrofit2.Response</span><br><span class="line"><span class="keyword">import</span> kotlin.coroutines.resume</span><br><span class="line"><span class="keyword">import</span> kotlin.coroutines.resumeWithException</span><br><span class="line"><span class="keyword">import</span> kotlin.coroutines.suspendCoroutine</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个统一的网络数据源访问入口</span></span><br><span class="line"><span class="keyword">object</span> VolcanoWeatherNetwork &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> placeService = ServiceCreator.create&lt;PlaceService&gt;()<span class="comment">//创建了一个PlaceService接口的动态代理对象</span></span><br><span class="line">    <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">searchPlaces</span><span class="params">(query: <span class="type">String</span>)</span></span> = placeService.searchPlaces(query).await()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> Call<span class="type">&lt;T&gt;</span>.<span class="title">await</span><span class="params">()</span></span>: T &#123;</span><br><span class="line">        <span class="keyword">return</span> suspendCoroutine &#123; continuation -&gt;</span><br><span class="line">            enqueue(<span class="keyword">object</span> : Callback&lt;T&gt; &#123;</span><br><span class="line">                <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onResponse</span><span class="params">(call: <span class="type">Call</span>&lt;<span class="type">T</span>&gt;, response: <span class="type">Response</span>&lt;<span class="type">T</span>&gt;)</span></span> &#123;</span><br><span class="line">                    <span class="keyword">val</span> body = response.body()</span><br><span class="line">                    <span class="keyword">if</span> (body != <span class="literal">null</span>) continuation.resume(body)</span><br><span class="line">                    <span class="keyword">else</span> continuation.resumeWithException(</span><br><span class="line">                        RuntimeException(<span class="string">&quot;response body is null&quot;</span>))</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(call: <span class="type">Call</span>&lt;<span class="type">T</span>&gt;, t: <span class="type">Throwable</span>)</span></span> &#123;</span><br><span class="line">                    continuation.resumeWithException(t)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-1-4-仓库层">2.1.4 仓库层</h4><blockquote><p>仓库层主要工作：判断调用方请求的数据要从哪里拿（本地还是网络？）并拿到给调用方。</p><p>相当于他是调用和缓存的中间件，每次有调用请求先看下本地有没有缓存，没有就直接去网络或者内存中拿。</p></blockquote><p>这里没有做缓存必要，直接全去网络。</p><p>logic下做一个Repository单例类，作为仓库层的统一封装入口。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221106171104592.png" alt="image-20221106171104592"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.liveData</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Place</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.network.VolcanoWeatherNetwork</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库层的统一封装入口</span></span><br><span class="line"><span class="keyword">object</span> Repository &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">searchPlaces</span><span class="params">(query: <span class="type">String</span>)</span></span> = liveData(Dispatchers.IO) &#123;<span class="comment">//这里设置全是在子线程中干活</span></span><br><span class="line">        <span class="keyword">val</span> result = <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">val</span> placeResponse = VolcanoWeatherNetwork.searchPlaces(query)</span><br><span class="line">            <span class="keyword">if</span> (placeResponse.status == <span class="string">&quot;ok&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">val</span> places = placeResponse.places</span><br><span class="line">                Result.success(places)<span class="comment">//这个是Kotlin自带的包装方法</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Result.failure(RuntimeException(<span class="string">&quot;response status is <span class="subst">$&#123;placeResponse.status&#125;</span>&quot;</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">            Result.failure&lt;List&lt;Place&gt;&gt;(e)</span><br><span class="line">        &#125;</span><br><span class="line">        emit(result)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-1-5-ViewModel层">2.1.5 ViewModel层</h4><blockquote><p>这是逻辑层和UI层的一个桥梁，但是更加偏向逻辑。但又由于ViewModel和Activity还有Fragment是一一对应的。所有把他们放在一起好了。</p></blockquote><p>ui/place下新建一个PlaceViewModel</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.ui.place</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Transformations</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.Repository</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Place</span><br><span class="line"><span class="comment">//ViewModel层</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceViewModel</span>:<span class="type">ViewModel</span></span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> searchLiveData = MutableLiveData&lt;String&gt;()</span><br><span class="line">    <span class="keyword">val</span> placeList = ArrayList&lt;Place&gt;()</span><br><span class="line">    <span class="keyword">val</span> placeLiveData = Transformations.switchMap(searchLiveData) &#123; query -&gt;</span><br><span class="line">        Repository.searchPlaces(query)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">searchPlaces</span><span class="params">(query: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">        searchLiveData.value = query</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-UI层">2.2 UI层</h3><h4 id="2-2-1-界面总布局">2.2.1 界面总布局</h4><p>在res/layout目录中新建fragment_place.xml布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?android:windowBackground&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/bgImageView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/bg_place&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/actionBarLayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/design_default_color_primary&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/searchPlaceEdit&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingStart</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:paddingEnd</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;输入地址&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/search_bg&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/recyclerView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@id/actionBarLayout&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107142453630.png" alt="image-20221107142453630"></p><h4 id="2-2-2-RecycleView的善后工作">2.2.2 RecycleView的善后工作</h4><ol><li><p>子项布局</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107142710677.png" alt="image-20221107142710677"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">com.google.android.material.card.MaterialCardView</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;130dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;4dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;18dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/placeName&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/placeAddress&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorSecondary&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.google.android.material.card.MaterialCardView</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107143253929.png" alt="image-20221107143253929"></p></li><li><p>RecycleView适配器</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107143356782.png" alt="image-20221107143356782"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.ui.place</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.RecyclerView</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.R</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Place</span><br><span class="line"><span class="comment">//RecyclerView适配器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceAdapter</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> fragment: Fragment, <span class="keyword">private</span> <span class="keyword">val</span> placeList: List&lt;Place&gt;) :</span><br><span class="line">    RecyclerView.Adapter&lt;PlaceAdapter.ViewHolder&gt;() &#123;</span><br><span class="line">    <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>(view: View) : RecyclerView.ViewHolder(view) &#123;</span><br><span class="line">        <span class="keyword">val</span> placeName: TextView = view.findViewById(R.id.placeName)</span><br><span class="line">        <span class="keyword">val</span> placeAddress: TextView = view.findViewById(R.id.placeAddress)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent: <span class="type">ViewGroup</span>, viewType: <span class="type">Int</span>)</span></span>: ViewHolder &#123;</span><br><span class="line">        <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.place_item,</span><br><span class="line">            parent, <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">return</span> ViewHolder(view)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBindViewHolder</span><span class="params">(holder: <span class="type">ViewHolder</span>, position: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> place = placeList[position]</span><br><span class="line">        holder.placeName.text = place.name</span><br><span class="line">        holder.placeAddress.text = place.address</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">getItemCount</span><span class="params">()</span></span> = placeList.size</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="2-2-3-Fragment">2.2.3 Fragment</h4><ol><li>Fragment实现</li></ol><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107144434547.png" alt="image-20221107144434547"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.ui.place</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> androidx.core.widget.addTextChangedListener</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Observer</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.R</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.fragment_place.*</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceFragment</span>:<span class="type">Fragment</span></span>() &#123;</span><br><span class="line">    <span class="keyword">val</span> viewModel <span class="keyword">by</span> lazy &#123; ViewModelProvider(<span class="keyword">this</span>).<span class="keyword">get</span>(PlaceViewModel::<span class="keyword">class</span>.java) &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">lateinit</span> <span class="keyword">var</span> adapter: PlaceAdapter</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateView</span><span class="params">(inflater: <span class="type">LayoutInflater</span>, container: <span class="type">ViewGroup</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">                              savedInstanceState: <span class="type">Bundle</span>?)</span></span>: View? &#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_place, container, <span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">        <span class="keyword">val</span> layoutManager = LinearLayoutManager(activity)</span><br><span class="line">        recyclerView.layoutManager = layoutManager</span><br><span class="line">        adapter = PlaceAdapter(<span class="keyword">this</span>, viewModel.placeList)</span><br><span class="line">        recyclerView.adapter = adapter</span><br><span class="line">        searchPlaceEdit.addTextChangedListener &#123; editable -&gt;</span><br><span class="line">            <span class="keyword">val</span> content = editable.toString()</span><br><span class="line">            <span class="keyword">if</span> (content.isNotEmpty()) &#123;</span><br><span class="line">                viewModel.searchPlaces(content)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                recyclerView.visibility = View.GONE</span><br><span class="line">                bgImageView.visibility = View.VISIBLE</span><br><span class="line">                viewModel.placeList.clear()</span><br><span class="line">                adapter.notifyDataSetChanged()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        viewModel.placeLiveData.observe(viewLifecycleOwner, Observer&#123; result -&gt;</span><br><span class="line">            <span class="keyword">val</span> places = result.getOrNull()</span><br><span class="line">            <span class="keyword">if</span> (places != <span class="literal">null</span>) &#123;</span><br><span class="line">                recyclerView.visibility = View.VISIBLE</span><br><span class="line">                bgImageView.visibility = View.GONE</span><br><span class="line">                viewModel.placeList.clear()</span><br><span class="line">                viewModel.placeList.addAll(places)</span><br><span class="line">                adapter.notifyDataSetChanged()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(activity, <span class="string">&quot;未能查询到任何地点&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">                result.exceptionOrNull()?.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>将Fragment添加到Activity中</p><p>activity_main.xml中的代码:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/placeFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.lmc.volcanoweather.ui.place.PlaceFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>隐藏原生的ActionBar</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107145752864.png" alt="image-20221107145752864"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;AppTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.Light.NoActionBar&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>申请权限</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">package</span>=<span class="string">&quot;com.sunnyweather.android&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>结果：<img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107150029243.png" alt="image-20221107150029243"></p><p>os：其实地方名，地址，经纬度都拿到了</p><h2 id="3-天气信息">3. 天气信息</h2><blockquote><ol start="2"><li><p>查询某地区实时天气：</p><p><code>https://api.caiyunapp.com/v2.5/&#123;token&#125;/116.4073963,39.9041999/realtime.json  </code></p><p>返回JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ok&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**realtime**&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;**temperature**&quot;</span><span class="punctuation">:</span> <span class="number">23.16</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;**skycon**&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WIND&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;**air_quality**&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;aqi&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;chn&quot;</span><span class="punctuation">:</span> <span class="number">17.0</span> <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span> </span><br></pre></td></tr></table></figure></li><li><p>查询未来几天天气信息接口：</p><p><code>https://api.caiyunapp.com/v2.5/&#123;token&#125;/116.4073963,39.9041999/daily.json  </code></p><p>返回的JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ok&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;daily&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;max&quot;</span><span class="punctuation">:</span> <span class="number">25.7</span><span class="punctuation">,</span> <span class="attr">&quot;min&quot;</span><span class="punctuation">:</span> <span class="number">20.3</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skycon&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CLOUDY&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span><span class="string">&quot;2019-10-20T00:00+08:00&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;life_index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;coldRisk&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;易发&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ...<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;carWashing&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;适宜&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ultraviolet&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dressing&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="punctuation">&#123;</span><span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;舒适&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> ... <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h3 id="3-1-逻辑">3.1 逻辑</h3><h4 id="3-1-1-数据模型">3.1.1 数据模型</h4><ol><li>RealtimeResponse</li></ol><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107150555760.png" alt="image-20221107150555760"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">RealtimeResponse</span></span>(<span class="keyword">val</span> status: String, <span class="keyword">val</span> result: Result) &#123;</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span></span>(<span class="keyword">val</span> realtime: Realtime)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Realtime</span></span>(<span class="keyword">val</span> skycon: String, <span class="keyword">val</span> temperature: <span class="built_in">Float</span>,</span><br><span class="line">                        <span class="meta">@SerializedName(<span class="string">&quot;air_quality&quot;</span>)</span> <span class="keyword">val</span> airQuality: AirQuality)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">AirQuality</span></span>(<span class="keyword">val</span> aqi: AQI)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">AQI</span></span>(<span class="keyword">val</span> chn: <span class="built_in">Float</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有数据模型类都定义在RealtimeResonse内部可以有效防止和其他接口的数据类型重名冲突的情况</p><ol start="2"><li>DailyResponse</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.annotations.SerializedName</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">DailyResponse</span></span>(<span class="keyword">val</span> status: String, <span class="keyword">val</span> result: Result) &#123;</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span></span>(<span class="keyword">val</span> daily: Daily)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Daily</span></span>(<span class="keyword">val</span> temperature: List&lt;Temperature&gt;, <span class="keyword">val</span> skycon: List&lt;Skycon&gt;,</span><br><span class="line">                     <span class="meta">@SerializedName(<span class="string">&quot;life_index&quot;</span>)</span> <span class="keyword">val</span> lifeIndex: LifeIndex)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Temperature</span></span>(<span class="keyword">val</span> max: <span class="built_in">Float</span>, <span class="keyword">val</span> min: <span class="built_in">Float</span>)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Skycon</span></span>(<span class="keyword">val</span> value: String, <span class="keyword">val</span> date: Date)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeIndex</span></span>(<span class="keyword">val</span> coldRisk: List&lt;LifeDescription&gt;, <span class="keyword">val</span> carWashing:</span><br><span class="line">    List&lt;LifeDescription&gt;, <span class="keyword">val</span> ultraviolet: List&lt;LifeDescription&gt;,</span><br><span class="line">                         <span class="keyword">val</span> dressing: List&lt;LifeDescription&gt;)</span><br><span class="line">    <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">LifeDescription</span></span>(<span class="keyword">val</span> desc: String)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>整和上面两个的 Weather</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107152815165.png" alt="image-20221107152815165"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.model</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Weather</span></span>(<span class="keyword">val</span> realtime: RealtimeResponse.Realtime, <span class="keyword">val</span> daily: DailyResponse.Daily)</span><br></pre></td></tr></table></figure></li><li><p>Sky(这个是在UI后面补充的)</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107165606951.png" alt="image-20221107165606951"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.R</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sky</span></span>(<span class="keyword">val</span> info: String, <span class="keyword">val</span> icon: <span class="built_in">Int</span>, <span class="keyword">val</span> bg: <span class="built_in">Int</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">val</span> sky = mapOf(</span><br><span class="line">    <span class="string">&quot;CLEAR_DAY&quot;</span> to Sky(<span class="string">&quot;晴&quot;</span>, R.drawable.ic_clear_day, R.drawable.bg_clear_day),</span><br><span class="line">    <span class="string">&quot;CLEAR_NIGHT&quot;</span> to Sky(<span class="string">&quot;晴&quot;</span>, R.drawable.ic_clear_night, R.drawable.bg_clear_night),</span><br><span class="line">    <span class="string">&quot;PARTLY_CLOUDY_DAY&quot;</span> to Sky(</span><br><span class="line">        <span class="string">&quot;多云&quot;</span>, R.drawable.ic_partly_cloud_day,</span><br><span class="line">        R.drawable.bg_partly_cloudy_day</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;PARTLY_CLOUDY_NIGHT&quot;</span> to Sky(</span><br><span class="line">        <span class="string">&quot;多云&quot;</span>, R.drawable.ic_partly_cloud_night,</span><br><span class="line">        R.drawable.bg_partly_cloudy_night</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;CLOUDY&quot;</span> to Sky(<span class="string">&quot;阴&quot;</span>, R.drawable.ic_cloudy, R.drawable.bg_cloudy),</span><br><span class="line">    <span class="string">&quot;WIND&quot;</span> to Sky(<span class="string">&quot;大风&quot;</span>, R.drawable.ic_cloudy, R.drawable.bg_wind),</span><br><span class="line">    <span class="string">&quot;LIGHT_RAIN&quot;</span> to Sky(<span class="string">&quot;小雨&quot;</span>, R.drawable.ic_light_rain, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;MODERATE_RAIN&quot;</span> to Sky(<span class="string">&quot;中雨&quot;</span>, R.drawable.ic_moderate_rain, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;HEAVY_RAIN&quot;</span> to Sky(<span class="string">&quot;大雨&quot;</span>, R.drawable.ic_heavy_rain, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;STORM_RAIN&quot;</span> to Sky(<span class="string">&quot;暴雨&quot;</span>, R.drawable.ic_storm_rain, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;THUNDER_SHOWER&quot;</span> to Sky(<span class="string">&quot;雷阵雨&quot;</span>, R.drawable.ic_thunder_shower, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;SLEET&quot;</span> to Sky(<span class="string">&quot;雨夹雪&quot;</span>, R.drawable.ic_sleet, R.drawable.bg_rain),</span><br><span class="line">    <span class="string">&quot;LIGHT_SNOW&quot;</span> to Sky(<span class="string">&quot;小雪&quot;</span>, R.drawable.ic_light_snow, R.drawable.bg_snow),</span><br><span class="line">    <span class="string">&quot;MODERATE_SNOW&quot;</span> to Sky(<span class="string">&quot;中雪&quot;</span>, R.drawable.ic_moderate_snow, R.drawable.bg_snow),</span><br><span class="line">    <span class="string">&quot;HEAVY_SNOW&quot;</span> to Sky(<span class="string">&quot;大雪&quot;</span>, R.drawable.ic_heavy_snow, R.drawable.bg_snow),</span><br><span class="line">    <span class="string">&quot;STORM_SNOW&quot;</span> to Sky(<span class="string">&quot;暴雪&quot;</span>, R.drawable.ic_heavy_snow, R.drawable.bg_snow),</span><br><span class="line">    <span class="string">&quot;HAIL&quot;</span> to Sky(<span class="string">&quot;冰雹&quot;</span>, R.drawable.ic_hail, R.drawable.bg_snow),</span><br><span class="line">    <span class="string">&quot;LIGHT_HAZE&quot;</span> to Sky(<span class="string">&quot;轻度雾霾&quot;</span>, R.drawable.ic_light_haze, R.drawable.bg_fog),</span><br><span class="line">    <span class="string">&quot;MODERATE_HAZE&quot;</span> to Sky(<span class="string">&quot;中度雾霾&quot;</span>, R.drawable.ic_moderate_haze, R.drawable.bg_fog),</span><br><span class="line">    <span class="string">&quot;HEAVY_HAZE&quot;</span> to Sky(<span class="string">&quot;重度雾霾&quot;</span>, R.drawable.ic_heavy_haze, R.drawable.bg_fog),</span><br><span class="line">    <span class="string">&quot;FOG&quot;</span> to Sky(<span class="string">&quot;雾&quot;</span>, R.drawable.ic_fog, R.drawable.bg_fog),</span><br><span class="line">    <span class="string">&quot;DUST&quot;</span> to Sky(<span class="string">&quot;浮尘&quot;</span>, R.drawable.ic_fog, R.drawable.bg_fog)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getSky</span><span class="params">(skycon: <span class="type">String</span>)</span></span>: Sky &#123;</span><br><span class="line">    <span class="keyword">return</span> sky[skycon] ?: sky[<span class="string">&quot;CLEAR_DAY&quot;</span>]!!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-1-2-网络层">3.1.2 网络层</h4><h5 id="1-访问天气信息API的Retrofit接口">1. 访问天气信息API的Retrofit接口</h5><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107153005106.png" alt="image-20221107153005106"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.network</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.VolcanoWeatherApplication</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.DailyResponse</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.RealtimeResponse</span><br><span class="line"><span class="keyword">import</span> retrofit2.Call</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.GET</span><br><span class="line"><span class="keyword">import</span> retrofit2.http.Path</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">WeatherService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GET(<span class="string">&quot;v2.5/<span class="subst">$&#123;VolcanoWeatherApplication.TOKEN&#125;</span>/&#123;lng&#125;,&#123;lat&#125;/realtime.json&quot;</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getRealtimeWeather</span><span class="params">(<span class="meta">@Path(<span class="string">&quot;lng&quot;</span>)</span> lng: <span class="type">String</span>, <span class="meta">@Path(<span class="string">&quot;lat&quot;</span>)</span> lat: <span class="type">String</span>)</span></span>:</span><br><span class="line">            Call&lt;RealtimeResponse&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GET(<span class="string">&quot;v2.5/<span class="subst">$&#123;VolcanoWeatherApplication.TOKEN&#125;</span>/&#123;lng&#125;,&#123;lat&#125;/daily.json&quot;</span>)</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getDailyWeather</span><span class="params">(<span class="meta">@Path(<span class="string">&quot;lng&quot;</span>)</span> lng: <span class="type">String</span>, <span class="meta">@Path(<span class="string">&quot;lat&quot;</span>)</span> lat: <span class="type">String</span>)</span></span>:</span><br><span class="line">            Call&lt;DailyResponse&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-VolcanoWeatherNetwork网络数据源访问入口对新加的这个接口进行封装">2.VolcanoWeatherNetwork网络数据源访问入口对新加的这个接口进行封装</h5><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107153503788.png" alt="image-20221107153503788"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> VolcanoWeatherNetwork &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> weatherService = ServiceCreator.create(WeatherService::<span class="keyword">class</span>.java)</span><br><span class="line">    <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">getDailyWeather</span><span class="params">(lng: <span class="type">String</span>, lat: <span class="type">String</span>)</span></span> =</span><br><span class="line">    weatherService.getDailyWeather(lng, lat).await()</span><br><span class="line">    <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">getRealtimeWeather</span><span class="params">(lng: <span class="type">String</span>, lat: <span class="type">String</span>)</span></span> =</span><br><span class="line">    weatherService.getRealtimeWeather(lng, lat).await()</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-3-仓库层">3.1.3 仓库层</h4><ol><li>修改Repository中的代码：</li></ol><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107153731630.png" alt="image-20221107153731630"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.liveData</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Place</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Weather</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.network.VolcanoWeatherNetwork</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.async</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.coroutineScope</span><br><span class="line"><span class="keyword">import</span> kotlin.coroutines.CoroutineContext</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库层的统一封装入口</span></span><br><span class="line"><span class="keyword">object</span> Repository &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">searchPlaces</span><span class="params">(query: <span class="type">String</span>)</span></span> = fire(Dispatchers.IO) &#123;</span><br><span class="line">        <span class="keyword">val</span> placeResponse = VolcanoWeatherNetwork.searchPlaces(query)</span><br><span class="line">        <span class="keyword">if</span> (placeResponse.status == <span class="string">&quot;ok&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">val</span> places = placeResponse.places</span><br><span class="line">            Result.success(places)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Result.failure(RuntimeException(<span class="string">&quot;response status is <span class="subst">$&#123;placeResponse.status&#125;</span>&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">refreshWeather</span><span class="params">(lng: <span class="type">String</span>, lat: <span class="type">String</span>)</span></span> = fire(Dispatchers.IO) &#123;</span><br><span class="line">        coroutineScope &#123;</span><br><span class="line">            <span class="keyword">val</span> deferredRealtime = async &#123;</span><br><span class="line">                VolcanoWeatherNetwork.getRealtimeWeather(lng, lat)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">val</span> deferredDaily = async &#123;</span><br><span class="line">                VolcanoWeatherNetwork.getDailyWeather(lng, lat)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">val</span> realtimeResponse = deferredRealtime.await()</span><br><span class="line">            <span class="keyword">val</span> dailyResponse = deferredDaily.await()</span><br><span class="line">            <span class="comment">//这两个执行完才能往下走</span></span><br><span class="line">            <span class="keyword">if</span> (realtimeResponse.status == <span class="string">&quot;ok&quot;</span> &amp;&amp; dailyResponse.status == <span class="string">&quot;ok&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">val</span> weather = Weather(realtimeResponse.result.realtime,</span><br><span class="line">                    dailyResponse.result.daily)</span><br><span class="line">                Result.success(weather)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Result.failure(</span><br><span class="line">                    RuntimeException(</span><br><span class="line">                        <span class="string">&quot;realtime response status is <span class="subst">$&#123;realtimeResponse.status&#125;</span>&quot;</span> +</span><br><span class="line">                                <span class="string">&quot;daily response status is <span class="subst">$&#123;dailyResponse.status&#125;</span>&quot;</span></span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//这个fire是升级过后的东西拉</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> <span class="title">fire</span><span class="params">(context: <span class="type">CoroutineContext</span>, block: <span class="type">suspend</span> () -&gt; <span class="type">Result</span>&lt;<span class="type">T</span>&gt;)</span></span> =</span><br><span class="line">        liveData&lt;Result&lt;T&gt;&gt;(context) &#123;</span><br><span class="line">            <span class="keyword">val</span> result = <span class="keyword">try</span> &#123;</span><br><span class="line">                block()</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">                Result.failure&lt;T&gt;(e)</span><br><span class="line">            &#125;</span><br><span class="line">            emit(result)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-4-ViewModel">3.1.4 ViewModel</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107160307510.png" alt="image-20221107160307510"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.ui.wealther</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.MutableLiveData</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Transformations</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModel</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.Repository</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Location</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherViewModel</span> : <span class="type">ViewModel</span></span>() &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> locationLiveData = MutableLiveData&lt;Location&gt;()</span><br><span class="line">    <span class="comment">//下面三个都是和界面相关的数据，所以放在 ViewModel</span></span><br><span class="line">    <span class="keyword">var</span> locationLng = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> locationLat = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">var</span> placeName = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment">//这个是转换LiveData观察用的</span></span><br><span class="line">    <span class="keyword">val</span> weatherLiveData = Transformations.switchMap(locationLiveData) &#123; location -&gt;</span><br><span class="line">        Repository.refreshWeather(location.lng, location.lat)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">refreshWeather</span><span class="params">(lng: <span class="type">String</span>, lat: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">        locationLiveData.value = Location(lng, lat)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-UI">3.2 UI</h3><h4 id="3-2-1-显示天气的Activity">3.2.1 显示天气的Activity</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107161254732.png" alt="image-20221107161254732"></p><p>activity_weather.xml（这个在创建Activity的时候会自动创建） 会是很长的一个布局，我们用引用布局的形式。</p><h4 id="3-2-2-now">3.2.2 now</h4><p>当前天气信息布局</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107161927746.png" alt="image-20221107161927746"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107161905024.png" alt="image-20221107161905024"></p><h4 id="3-2-3-forecast">3.2.3 forecast</h4><p>未来几天天气信息布局</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107162109721.png" alt="image-20221107162109721"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107162402138.png" alt="image-20221107162402138"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;com.google.android.material.card.MaterialCardView</span><br><span class="line">    xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">    android:layout_marginLeft=<span class="string">&quot;15dp&quot;</span></span><br><span class="line">    android:layout_marginRight=<span class="string">&quot;15dp&quot;</span></span><br><span class="line">    android:layout_marginTop=<span class="string">&quot;15dp&quot;</span></span><br><span class="line">    app:cardCornerRadius=<span class="string">&quot;4dp&quot;</span>&gt;</span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_marginStart=<span class="string">&quot;15dp&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">            android:layout_marginBottom=<span class="string">&quot;20dp&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;预报&quot;</span></span><br><span class="line">            android:textColor=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;20sp&quot;</span>/&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:id=<span class="string">&quot;@+id/forecastLayout&quot;</span></span><br><span class="line">            android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/com.google.android.material.card.MaterialCardView&gt;</span><br></pre></td></tr></table></figure><h4 id="3-2-4-fprecast-item">3.2.4 fprecast_item</h4><p>未来天气信息的子项布局</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107162540732.png" alt="image-20221107162540732"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107162940272.png" alt="image-20221107162940272"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;15dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dateInfo&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/skyIcon&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/skyInfo&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/temperatureInfo&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;end&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5-life-index">3.2.5 life_index</h4><p>生活指数的布局</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107164104493.png" alt="image-20221107164104493"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107164800332.png" alt="image-20221107164800332"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107164937530.png" alt="image-20221107164937530"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">com.google.android.material.card.MaterialCardView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;4dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;生活指数&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;20sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/coldRiskImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_coldrisk&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_toEndOf</span>=<span class="string">&quot;@id/coldRiskImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;感冒&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/coldRiskText&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/dressingImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_dressing&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_toEndOf</span>=<span class="string">&quot;@id/dressingImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;穿衣&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/dressingText&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/ultravioletImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_ultraviolet&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_toEndOf</span>=<span class="string">&quot;@id/ultravioletImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;实时紫外线&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/ultravioletText&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;60dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/carWashingImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_carwashing&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_toEndOf</span>=<span class="string">&quot;@id/carWashingImg&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;12sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:text</span>=<span class="string">&quot;洗车&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:id</span>=<span class="string">&quot;@+id/carWashingText&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:textColor</span>=<span class="string">&quot;?android:attr/textColorPrimary&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.google.android.material.card.MaterialCardView</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-6-引入">3.2.6 引入</h4><p>将上面4个模块加载进显示天气的Activity</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107165138692.png" alt="image-20221107165138692"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/weatherLayout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:scrollbars</span>=<span class="string">&quot;none&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:overScrollMode</span>=<span class="string">&quot;never&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">&quot;invisible&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/now&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/forecast&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/life_index&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-Sky转换函数准备">3.2.7 Sky转换函数准备</h4><p>见3.1.1 最后一个</p><h4 id="3-2-8-WeatherActivity下">3.2.8 WeatherActivity下</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.ui.wealther</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater</span><br><span class="line"><span class="keyword">import</span> android.view.View</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.Observer</span><br><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProvider</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.R</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Weather</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.getSky</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.activity_weather.*</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.forecast.*</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.life_index.*</span><br><span class="line"><span class="keyword">import</span> kotlinx.android.synthetic.main.now.*</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat</span><br><span class="line"><span class="keyword">import</span> java.util.*</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    <span class="keyword">val</span> viewModel <span class="keyword">by</span> lazy &#123; ViewModelProvider(<span class="keyword">this</span>).<span class="keyword">get</span>(WeatherViewModel::<span class="keyword">class</span>.java) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_weather)</span><br><span class="line">        <span class="comment">//下面三个是从Intent中去除经纬坐标和地区名称</span></span><br><span class="line">        <span class="keyword">if</span> (viewModel.locationLng.isEmpty()) &#123;</span><br><span class="line">            viewModel.locationLng = intent.getStringExtra(<span class="string">&quot;location_lng&quot;</span>) ?: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (viewModel.locationLat.isEmpty()) &#123;</span><br><span class="line">            viewModel.locationLat = intent.getStringExtra(<span class="string">&quot;location_lat&quot;</span>) ?: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (viewModel.placeName.isEmpty()) &#123;</span><br><span class="line">            viewModel.placeName = intent.getStringExtra(<span class="string">&quot;place_name&quot;</span>) ?: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//观察天气LiveData，当获取到服务器返回数据就展示出来</span></span><br><span class="line">        viewModel.weatherLiveData.observe(<span class="keyword">this</span>, Observer &#123; result -&gt;</span><br><span class="line">            <span class="keyword">val</span> weather = result.getOrNull()</span><br><span class="line">            <span class="keyword">if</span> (weather != <span class="literal">null</span>) &#123;</span><br><span class="line">                showWeatherInfo(weather)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;无法成功获取天气信息&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">                result.exceptionOrNull()?.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        viewModel.refreshWeather(viewModel.locationLng, viewModel.locationLat)<span class="comment">//执行了一次刷新天气的请求</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">showWeatherInfo</span><span class="params">(weather: <span class="type">Weather</span>)</span></span> &#123;</span><br><span class="line">        placeName.text = viewModel.placeName</span><br><span class="line">        <span class="keyword">val</span> realtime = weather.realtime</span><br><span class="line">        <span class="keyword">val</span> daily = weather.daily</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 填充now.xml布局中的数据</span></span><br><span class="line">        <span class="keyword">val</span> currentTempText = <span class="string">&quot;<span class="subst">$&#123;realtime.temperature.toInt()&#125;</span> ℃&quot;</span></span><br><span class="line">        currentTemp.text = currentTempText</span><br><span class="line">        currentSky.text = getSky(realtime.skycon).info</span><br><span class="line">        <span class="keyword">val</span> currentPM25Text = <span class="string">&quot;空气指数 <span class="subst">$&#123;realtime.airQuality.aqi.chn.toInt()&#125;</span>&quot;</span></span><br><span class="line">        currentAQI.text = currentPM25Text</span><br><span class="line">        nowLayout.setBackgroundResource(getSky(realtime.skycon).bg)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 填充forecast.xml布局中的数据</span></span><br><span class="line">        forecastLayout.removeAllViews()</span><br><span class="line">        <span class="keyword">val</span> days = daily.skycon.size</span><br><span class="line">        <span class="comment">//下面这个循环是拿到未来每天的天气信息</span></span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until days) &#123;</span><br><span class="line">            <span class="keyword">val</span> skycon = daily.skycon[i]</span><br><span class="line">            <span class="keyword">val</span> temperature = daily.temperature[i]</span><br><span class="line">            <span class="keyword">val</span> view = LayoutInflater.from(<span class="keyword">this</span>).inflate(</span><br><span class="line">                R.layout.forecast_item,</span><br><span class="line">                forecastLayout, <span class="literal">false</span></span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">val</span> dateInfo = view.findViewById(R.id.dateInfo) <span class="keyword">as</span> TextView</span><br><span class="line">            <span class="keyword">val</span> skyIcon = view.findViewById(R.id.skyIcon) <span class="keyword">as</span> ImageView</span><br><span class="line">            <span class="keyword">val</span> skyInfo = view.findViewById(R.id.skyInfo) <span class="keyword">as</span> TextView</span><br><span class="line">            <span class="keyword">val</span> temperatureInfo = view.findViewById(R.id.temperatureInfo) <span class="keyword">as</span> TextView</span><br><span class="line">            <span class="keyword">val</span> simpleDateFormat = SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>, Locale.getDefault())</span><br><span class="line">            dateInfo.text = simpleDateFormat.format(skycon.date)</span><br><span class="line">            <span class="keyword">val</span> sky = getSky(skycon.value)</span><br><span class="line">            skyIcon.setImageResource(sky.icon)</span><br><span class="line">            skyInfo.text = sky.info</span><br><span class="line">            <span class="keyword">val</span> tempText = <span class="string">&quot;<span class="subst">$&#123;temperature.min.toInt()&#125;</span> ~ <span class="subst">$&#123;temperature.max.toInt()&#125;</span> ℃&quot;</span></span><br><span class="line">            temperatureInfo.text = tempText</span><br><span class="line">            forecastLayout.addView(view)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 填充life_index.xml布局中的数据</span></span><br><span class="line">        <span class="keyword">val</span> lifeIndex = daily.lifeIndex</span><br><span class="line">        <span class="comment">//生活指数有很多天的，我们只拿出当天的</span></span><br><span class="line">        coldRiskText.text = lifeIndex.coldRisk[<span class="number">0</span>].desc</span><br><span class="line">        dressingText.text = lifeIndex.dressing[<span class="number">0</span>].desc</span><br><span class="line">        ultravioletText.text = lifeIndex.ultraviolet[<span class="number">0</span>].desc</span><br><span class="line">        carWashingText.text = lifeIndex.carWashing[<span class="number">0</span>].desc</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取了所有数据要让他们显示出来</span></span><br><span class="line">        weatherLayout.visibility = View.VISIBLE</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-9-界面跳转">3.2.9 界面跳转</h4><p>从搜索城市界面跳转到天气界面</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107171916611.png" alt="image-20221107171916611"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceAdapter</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> fragment: Fragment, <span class="keyword">private</span> <span class="keyword">val</span> placeList: List&lt;Place&gt;) :</span><br><span class="line">RecyclerView.Adapter&lt;PlaceAdapter.ViewHolder&gt;() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent: <span class="type">ViewGroup</span>, viewType: <span class="type">Int</span>)</span></span>: ViewHolder &#123;</span><br><span class="line">    <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.place_item,</span><br><span class="line">    parent, <span class="literal">false</span>)</span><br><span class="line">    <span class="keyword">val</span> holder = ViewHolder(view)</span><br><span class="line">    holder.itemView.setOnClickListener &#123;</span><br><span class="line">    <span class="keyword">val</span> position = holder.adapterPosition</span><br><span class="line">    <span class="keyword">val</span> place = placeList[position]</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(parent.context, WeatherActivity::<span class="keyword">class</span>.java).apply &#123;</span><br><span class="line">    putExtra(<span class="string">&quot;location_lng&quot;</span>, place.location.lng)</span><br><span class="line">    putExtra(<span class="string">&quot;location_lat&quot;</span>, place.location.lat)</span><br><span class="line">    putExtra(<span class="string">&quot;place_name&quot;</span>, place.name)</span><br><span class="line">    &#125;</span><br><span class="line">    fragment.startActivity(intent)</span><br><span class="line">    fragment.activity?.finish()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> holder</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如果出现这个Bug：</p><p><code>    android.content.ActivityNotFoundException: Unable to find explicit activity class &#123;com.lmc.volcanoweather/com.lmc.volcanoweather.ui.wealther.WeatherActivity&#125;; have you declared this activity in your AndroidManifest.xml?</code></p><p>则AndroidManifest.xml这里改一下：看图</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107173037558.png" alt="image-20221107173037558"></p><p>我ui下面weather包名之前写错了，之前是wealther 现在改过来了weather</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107173054749.png" alt="image-20221107173054749"></p></blockquote><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107173351243.png" alt="image-20221107173351243"></p><p>美化：</p><p>之前美化是用的Material库来做的，虽然优秀但是复杂。今天来个更简单的实现方式。</p><p>WeatherActivity中：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">   /下面这里是设置那个状态栏的</span><br><span class="line">        <span class="keyword">val</span> decorView = window.decorView</span><br><span class="line">        decorView.systemUiVisibility =</span><br><span class="line">            View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN or View.SYSTEM_UI_FLAG_LAYOUT_STABLE<span class="comment">//这行表示Activity的布局会显示在状态栏上</span></span><br><span class="line">        window.statusBarColor = Color.TRANSPARENT<span class="comment">//将状态栏设置为透明色</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候，天气界面的布局整体向上偏移了一些——丑：</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107182716540.png" alt="image-20221107182716540"></p><p>os：其实也还好，怕以后工作产品狗挑毛病也写一下好了</p><p>修改：now.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/nowLayout&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;530dp&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/titleLayout&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;70dp&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这一行是让系统状态栏留出空间。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107183046983.png" alt="image-20221107183046983"></p><p>好像确实更优雅了</p><h3 id="3-3-记录选中城市">3.3 记录选中城市</h3><h4 id="3-3-1-存储准备">3.3.1 存储准备</h4><ol><li><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107191559967.png" alt="image-20221107191559967"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lmc.volcanoweather.logic.dao</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.provider.Settings.Global.putString</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.edit</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.VolcanoWeatherApplication</span><br><span class="line"><span class="keyword">import</span> com.lmc.volcanoweather.logic.model.Place</span><br><span class="line"></span><br><span class="line"><span class="keyword">object</span> PlaceDao &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">savePlace</span><span class="params">(place: <span class="type">Place</span>)</span></span> &#123;</span><br><span class="line">        sharedPreferences().edit &#123;</span><br><span class="line">            putString(<span class="string">&quot;place&quot;</span>, Gson().toJson(place))<span class="comment">//利用这个GSON将一个place对象转成一个JSON字符串再去存就很划算</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getSavedPlace</span><span class="params">()</span></span>: Place &#123;</span><br><span class="line">        <span class="keyword">val</span> placeJson = sharedPreferences().getString(<span class="string">&quot;place&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> Gson().fromJson(placeJson, Place::<span class="keyword">class</span>.java)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断数据是否又被存储</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isPlaceSaved</span><span class="params">()</span></span> = sharedPreferences().contains(<span class="string">&quot;place&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">sharedPreferences</span><span class="params">()</span></span> = VolcanoWeatherApplication.context.</span><br><span class="line">    getSharedPreferences(<span class="string">&quot;sunny_weather&quot;</span>, Context.MODE_PRIVATE)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>仓库中封装一下</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107191808930.png" alt="image-20221107191808930"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Repository &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">savePlace</span><span class="params">(place: <span class="type">Place</span>)</span></span> = PlaceDao.savePlace(place)</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getSavedPlace</span><span class="params">()</span></span> = PlaceDao.getSavedPlace()</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isPlaceSaved</span><span class="params">()</span></span> = PlaceDao.isPlaceSaved()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>PlaceViewModel中再进行一次封装</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107191955822.png" alt="image-20221107191955822"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceViewModel</span> : <span class="type">ViewModel</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">savePlace</span><span class="params">(place: <span class="type">Place</span>)</span></span> = Repository.savePlace(place)</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getSavedPlace</span><span class="params">()</span></span> = Repository.getSavedPlace()</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">isPlaceSaved</span><span class="params">()</span></span> = Repository.isPlaceSaved()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="3-3-2-实现">3.3.2 实现</h4><h5 id="PlaceAdapter">PlaceAdapter</h5><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107192230429.png" alt="image-20221107192230429"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceAdapter</span></span>(<span class="keyword">private</span> <span class="keyword">val</span> fragment: PlaceFragment, <span class="keyword">private</span> <span class="keyword">val</span> placeList:</span><br><span class="line">List&lt;Place&gt;) : RecyclerView.Adapter&lt;PlaceAdapter.ViewHolder&gt;() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreateViewHolder</span><span class="params">(parent: <span class="type">ViewGroup</span>, viewType: <span class="type">Int</span>)</span></span>: ViewHolder &#123;</span><br><span class="line">    <span class="keyword">val</span> view = LayoutInflater.from(parent.context).inflate(R.layout.place_item,</span><br><span class="line">    parent, <span class="literal">false</span>)</span><br><span class="line">    <span class="keyword">val</span> holder = ViewHolder(view)</span><br><span class="line">    holder.itemView.setOnClickListener &#123;</span><br><span class="line">    <span class="keyword">val</span> position = holder.adapterPosition</span><br><span class="line">    <span class="keyword">val</span> place = placeList[position]</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(parent.context, WeatherActivity::<span class="keyword">class</span>.java).apply &#123;</span><br><span class="line">    putExtra(<span class="string">&quot;location_lng&quot;</span>, place.location.lng)</span><br><span class="line">    putExtra(<span class="string">&quot;location_lat&quot;</span>, place.location.lat)</span><br><span class="line">    putExtra(<span class="string">&quot;place_name&quot;</span>, place.name)</span><br><span class="line">    &#125;</span><br><span class="line">    fragment.viewModel.savePlace(place)</span><br><span class="line">    fragment.startActivity(intent)</span><br><span class="line">    fragment.activity?.finish()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> holder</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进行两处修改：</p><ol><li>先把 PlaceAdapter 主构造函数中传入的 Fragment 对象改成 PlaceFragment 对象</li><li>当点击了任何子项布局时，在跳转到 WeatherActivity 之前，先调用 PlaceViewModel 的 savePlace() 方法来存储选中的城市。</li></ol><h5 id="PlaceFragment">PlaceFragment</h5><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221107192833343.png" alt="image-20221107192833343"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceFragment</span> : <span class="type">Fragment</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">    <span class="keyword">if</span> (viewModel.isPlaceSaved()) &#123;</span><br><span class="line">    <span class="keyword">val</span> place = viewModel.getSavedPlace()</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(context, WeatherActivity::<span class="keyword">class</span>.java).apply &#123;</span><br><span class="line">    putExtra(<span class="string">&quot;location_lng&quot;</span>, place.location.lng)</span><br><span class="line">    putExtra(<span class="string">&quot;location_lat&quot;</span>, place.location.lat)</span><br><span class="line">    putExtra(<span class="string">&quot;place_name&quot;</span>, place.name)</span><br><span class="line">    &#125;</span><br><span class="line">    startActivity(intent)</span><br><span class="line">    activity?.finish()</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>验证了一下几乎成了</p><h2 id="4-手动刷新天气-切换城市">4.手动刷新天气&amp;切换城市</h2><blockquote><p>有个Bug：选中某个地方就没办法查看其他城市的天气了。</p></blockquote><h3 id="4-1-手动刷新天气">4.1 手动刷新天气</h3><p>直接用下拉控件就可以了</p><ol><li><p>在ScrollView的外面嵌套了一层SwipeRefreshLayout</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108150656151.png" alt="image-20221108150656151"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/swipeRefresh&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/weatherLayout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:overScrollMode</span>=<span class="string">&quot;never&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:scrollbars</span>=<span class="string">&quot;none&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">&quot;invisible&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>WeatherActivity 中加入刷新天气的处理逻辑：</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108150818662.png" alt="image-20221108150818662"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"><span class="keyword">val</span> viewModel <span class="keyword">by</span> lazy &#123; ViewModelProvider(<span class="keyword">this</span>).<span class="keyword">get</span>(WeatherViewModel::<span class="keyword">class</span>.java) &#125;</span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    viewModel.weatherLiveData.observe(<span class="keyword">this</span>, Observer &#123; result -&gt;</span><br><span class="line">    <span class="keyword">val</span> weather = result.getOrNull()</span><br><span class="line">    <span class="keyword">if</span> (weather != <span class="literal">null</span>) &#123;</span><br><span class="line">    showWeatherInfo(weather)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;无法成功获取天气信息&quot;</span>, Toast.LENGTH_SHORT).show()</span><br><span class="line">    result.exceptionOrNull()?.printStackTrace()</span><br><span class="line">    &#125;</span><br><span class="line">    swipeRefresh.isRefreshing = <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">    swipeRefresh.setColorSchemeResources(R.color.design_default_color_primary)</span><br><span class="line">    refreshWeather()</span><br><span class="line">    swipeRefresh.setOnRefreshListener &#123;</span><br><span class="line">    refreshWeather()</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">refreshWeather</span><span class="params">()</span></span> &#123;</span><br><span class="line">    viewModel.refreshWeather(viewModel.locationLng, viewModel.locationLat)</span><br><span class="line">    swipeRefresh.isRefreshing = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>其实吧，没啥大区别，你进去就是最新的天气信息。再刷新下子有啥作用尼？</p><h3 id="4-2-切换城市">4.2 切换城市</h3><p>想着是通过滑动菜单来做</p><h4 id="4-2-1-头布局加个切换按钮">4.2.1 头布局加个切换按钮</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108151942198.png" alt="image-20221108151942198"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/nowLayout&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">&quot;530dp&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/titleLayout&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;70dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/navBtn&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;30dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;30dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ic_home&quot;</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-2-实现滑动菜单功能">4.2.2 实现滑动菜单功能</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108152223568.png" alt="image-20221108152223568"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.drawerlayout.widget.DrawerLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">&quot;@+id/drawerLayout&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/swipeRefresh&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;start&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/design_default_color_primary&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fragment</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/placeFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;com.lmc.volcanoweather.ui.place.PlaceFragment&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;25dp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.drawerlayout.widget.DrawerLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在SwipeRefreshLayout的外面又嵌套了一层DrawerLayout,第一个是主屏幕中的内容，第二个是滑动菜单中的内容</p><h4 id="4-2-3-滑动菜单逻辑">4.2.3 滑动菜单逻辑</h4><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108153659654.png" alt="image-20221108153659654"></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeatherActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        ...</span><br><span class="line">        navBtn.setOnClickListener &#123;</span><br><span class="line">            drawerLayout.openDrawer(GravityCompat.START)</span><br><span class="line">        &#125;</span><br><span class="line">        drawerLayout.addDrawerListener(<span class="keyword">object</span> : DrawerLayout.DrawerListener &#123;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDrawerStateChanged</span><span class="params">(newState: <span class="type">Int</span>)</span></span> &#123;&#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDrawerSlide</span><span class="params">(drawerView: <span class="type">View</span>, slideOffset: <span class="type">Float</span>)</span></span> &#123;&#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDrawerOpened</span><span class="params">(drawerView: <span class="type">View</span>)</span></span> &#123;&#125;</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDrawerClosed</span><span class="params">(drawerView: <span class="type">View</span>)</span></span> &#123;</span><br><span class="line">                <span class="comment">//滑动菜单隐藏的时候也隐藏输入法</span></span><br><span class="line">            <span class="keyword">val</span> manager = getSystemService(Context.INPUT_METHOD_SERVICE)</span><br><span class="line">            <span class="keyword">as</span> InputMethodManager</span><br><span class="line">            manager.hideSoftInputFromWindow(drawerView.windowToken,</span><br><span class="line">            InputMethodManager.HIDE_NOT_ALWAYS)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个Bug：</p><blockquote><p>之前在PlaceFragment中做过一个数据存储状态的判断，假如已经有选中的城市保<br>存在SharedPreferences文件中了，那么就直接跳转到WeatherActivity。但是现在将<br>PlaceFragment嵌入WeatherActivity中之后，如果还执行这段逻辑肯定是不行的，因为这会<br>造成无限循环跳转的情况。为此需要对PlaceFragment进行如下修改：</p><p>???</p></blockquote><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108154643471.png" alt="image-20221108154643471"></p><p>加了一层逻辑判断条件</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlaceFragment</span> : <span class="type">Fragment</span></span>() &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onActivityCreated</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState)</span><br><span class="line">        <span class="keyword">if</span> (activity <span class="keyword">is</span> MainActivity &amp;&amp; viewModel.isPlaceSaved()) &#123;</span><br><span class="line">            <span class="keyword">val</span> place = viewModel.getSavedPlace()</span><br><span class="line">            <span class="keyword">val</span> intent = Intent(context, WeatherActivity::<span class="keyword">class</span>.java).apply &#123;</span><br><span class="line">            putExtra(<span class="string">&quot;location_lng&quot;</span>, place.location.lng)</span><br><span class="line">            putExtra(<span class="string">&quot;location_lat&quot;</span>, place.location.lat)</span><br><span class="line">            putExtra(<span class="string">&quot;place_name&quot;</span>, place.name)</span><br><span class="line">            &#125;</span><br><span class="line">            startActivity(intent)</span><br><span class="line">            activity?.finish()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>切换城市后的逻辑:</p><p>之前选中了某个城市后是跳转到WeatherActivity的，而现在由于我们本来就是<br>在WeatherActivity中的，因此并不需要跳转，只要去请求新选择城市的天气信息就可以了。</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108155127067.png" alt="image-20221108155127067"></p><p>出现一个空指针BUG</p><blockquote><p>解决办法：<img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221108160359323.png" alt="image-20221108160359323"></p><p>这两个方法一定要放在最上面</p></blockquote><h2 id="5-制作APP图标">5. 制作APP图标</h2><p>从 Android8 开始app图标应该是两层：前景层和背景层。</p><p>前景层：APP的logo</p><p>背景层：衬托APP的Logo（只能定义颜色和纹理，不可以有形状）</p><p>图标形状由手机厂商来决定（mask）</p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221109161923535.png" alt="image-20221109161923535"></p><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221109162022438.png" alt="image-20221109162022438"></p><h2 id="6-生成正式签名的APK文件文件">6. 生成正式签名的APK文件文件</h2><p>之前测试的安卓APP是AS有个默认的keystore文件帮我们自动进行了签名（gradle负责）</p><h3 id="6-1-AS生成">6.1 AS生成</h3><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221109162800822.png" alt="image-20221109162800822"></p><p>这个也不好演示，看视频好耶</p><h3 id="6-2-Gradle生成">6.2 Gradle生成</h3><p><img src="C:/Users/Micenlee/AppData/Roaming/Typora/typora-user-images/image-20221109165813855.png" alt="image-20221109165813855"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;org.jetbrains.kotlin.android&#x27;</span></span><br><span class="line">    id <span class="string">&#x27;kotlin-android-extensions&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdk <span class="number">32</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">&quot;com.lmc.volcanoweather&quot;</span></span><br><span class="line">        minSdk <span class="number">21</span></span><br><span class="line">        targetSdk <span class="number">32</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">&quot;1.0&quot;</span></span><br><span class="line"></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        config &#123;</span><br><span class="line">            storeFile file(<span class="string">&#x27;/Users/Mecenlee/Mecenlee.jks&#x27;</span>)</span><br><span class="line">            storePassword <span class="string">&#x27;594946&#x27;</span></span><br><span class="line">            keyAlias = <span class="string">&#x27;Mecenleedev&#x27;</span></span><br><span class="line">            keyPassword <span class="string">&#x27;594946&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android-optimize.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.pro&#x27;</span></span><br><span class="line">            signingConfig signingConfigs.config</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line">    kotlinOptions &#123;</span><br><span class="line">        jvmTarget = <span class="string">&#x27;1.8&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&#x27;androidx.core:core-ktx:1.7.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.3.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.4.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.0.4&#x27;</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">&#x27;androidx.recyclerview:recyclerview:1.2.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.lifecycle:lifecycle-extensions:2.2.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.lifecycle:lifecycle-livedata-ktx:2.5.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&quot;androidx.swiperefreshlayout:swiperefreshlayout:1.1.0&quot;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.squareup.retrofit2:retrofit:2.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.squareup.retrofit2:converter-gson:2.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1&quot;</span></span><br><span class="line">    implementation <span class="string">&quot;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1&quot;</span></span><br><span class="line"></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.13.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.3&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.4.0&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-优化点">7.优化点</h2><h2 id="8-总结">8.总结</h2><p>弱项：</p><ol><li>网络部分，尤其是Retrofit</li><li>RecycleView的一些列操作</li><li>Fragment</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;title: 【项目】Android_天气预报App&lt;br&gt;
author: LMC&lt;br&gt;
toc: true&lt;br&gt;
mathjax: true&lt;br&gt;
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目&lt;br&gt;
categories:&lt;/li&gt;
&lt;li&gt;项目&lt;br&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【Bug】Device File Explorer There were errors downloading files andor directories Cannot delete &#39;CUsersMicenleeDesktop</title>
    <link href="http://lmc.pub/2022/10/05/%E3%80%90Bug%E3%80%91Device%20File%20Explorer%20There%20were%20errors%20downloading%20files%20andor%20directories%20Cannot%20delete%20&#39;CUsersMicenleeDesktop/"/>
    <id>http://lmc.pub/2022/10/05/%E3%80%90Bug%E3%80%91Device%20File%20Explorer%20There%20were%20errors%20downloading%20files%20andor%20directories%20Cannot%20delete%20&#39;CUsersMicenleeDesktop/</id>
    <published>2022-10-05T15:43:31.000Z</published>
    <updated>2023-03-23T14:25:22.880Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Device-File-Explorer-There-were-errors-downloading-files-and-or-directories-Cannot-delete-‘C-Users-Micenlee-Desktop-BookStore-db’">Device File Explorer /There were errors downloading files and/or directories:/ Cannot delete ‘C:\Users\Micenlee\Desktop\BookStore.db’</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914125755795.png" alt="image-20220914125755795"></p><p>上 Android 课的时候，到了SQLite。在 Device File Explorer 中准备把 db文件另存为时候。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914125946032.png" alt="image-20220914125946032"></p><p>保存目录下有同名文件</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130225271.png" alt="image-20220914130225271"></p><p>保存就报错说，删除不了原来同名文件。</p><blockquote><p>stackoverflow该问题解答（唯一中文就是俺写的）：<a href="https://stackoverflow.com/questions/52202720/android-studio-device-file-explorer-gets-stuck-when-downloading-a-file">https://stackoverflow.com/questions/52202720/android-studio-device-file-explorer-gets-stuck-when-downloading-a-file</a></p></blockquote><p>实际原因：</p><p>自己在AS中的DB Browser 中已经打开了，而在win11 下，已经打开的文件是删除不了的</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130547642.png" alt="image-20220914130547642"></p><p>解决：</p><p>打开DB Browser ,跟图操作</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130751440.png" alt="image-20220914130751440"></p><p>把这所有的connection 全 删了（选中一个点一下➖）</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914130827360.png" alt="image-20220914130827360"></p><p>然后再回去 Save As就好了</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20220914131001014.png" alt="image-20220914131001014"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;Device-File-Explorer-There-were-errors-downloading-files-and-or-directories-Cannot-delete-‘C-Users-Micenlee-Desktop-BookStore-d</summary>
      
    
    
    
    <category term="Bug" scheme="http://lmc.pub/categories/Bug/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
</feed>
