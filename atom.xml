<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMC_Blog</title>
  
  
  <link href="http://lmc.pub/atom.xml" rel="self"/>
  
  <link href="http://lmc.pub/"/>
  <updated>2023-04-03T08:08:06.873Z</updated>
  <id>http://lmc.pub/</id>
  
  <author>
    <name>LMC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【其他_Postman】Postman入门使用</title>
    <link href="http://lmc.pub/posts/1670464388.html"/>
    <id>http://lmc.pub/posts/1670464388.html</id>
    <published>2023-04-03T05:41:57.000Z</published>
    <updated>2023-04-03T08:08:06.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述">描述</h2><p>这是一个API管理工具</p><p>下载地址：<a href="https://www.postman.com/downloads/?utm_source=postman-home">Download Postman | Get Started for Free</a></p><h2 id="导入API">导入API</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403154723184.png" alt="image-20230403154723184"></p><p>主页然后点：workspaces</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403154902561.png" alt="image-20230403154902561"></p><p>然后选择API文件，一般是Json文件</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403154943197.png" alt="image-20230403154943197"></p><p>上面图错了，应该是collections在collections，环境在环境。</p><p>然后collections下面就有了API</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403155510723.png" alt="image-20230403155510723"></p><p>如法炮制，把环境json文件import到环境哪里。并选上你要的那个。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403155607254.png" alt="image-20230403155607254"></p><p>现在就可以用Postman来看API的请求了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403155853202.png" alt="image-20230403155853202"></p><p>右边这里还可以直接生成一些网络代码</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403160330734.png" alt="image-20230403160330734"></p><h2 id="导出">导出</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403160546298.png" alt="image-20230403160546298"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403160608225.png" alt="image-20230403160608225"></p><p>然后选择位置就可以了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403160633746.png" alt="image-20230403160633746"></p><h2 id="总结">总结</h2><p>后面坑定随着学习的深入会用的越来越多的，先插个眼。</p>]]></content>
    
    
    <summary type="html">API接口管理工具：Postman入门使用</summary>
    
    
    
    <category term="其他" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Postman" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/Postman/"/>
    
    
    <category term="Postman" scheme="http://lmc.pub/tags/Postman/"/>
    
  </entry>
  
  <entry>
    <title>【其他_DOS】DOS常用命令</title>
    <link href="http://lmc.pub/posts/2191178889.html"/>
    <id>http://lmc.pub/posts/2191178889.html</id>
    <published>2023-04-03T04:17:47.000Z</published>
    <updated>2023-04-03T04:27:01.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v2">描述</h2><p>DOS虽然远远不如Linux的命令用的多，但是咱穷啊。还没换上mac，难免要在win上面搞几下命令行。</p><p>了解点基础吧。</p><h2 id="DOS常用指令">DOS常用指令</h2><ol><li><p>查看当前目录：dir</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403122057999.png" alt="image-20230403122057999"></p></li><li><p>切换到根目录：cd \</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403122607387.png" alt="image-20230403122607387"></p></li><li><p>返回上一级：cd …</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403122404191.png" alt="image-20230403122404191"></p></li><li><p>清屏：cls</p></li><li><p>退出：exit</p></li><li><p>查看当前目录下层级结构：tree</p></li></ol><h2 id="实现">实现</h2><h2 id="总结-v2">总结</h2>]]></content>
    
    
    <summary type="html">【其他_DOS】DOS常用命令</summary>
    
    
    
    <category term="其他" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="DOS" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/DOS/"/>
    
    
    <category term="DOS" scheme="http://lmc.pub/tags/DOS/"/>
    
  </entry>
  
  <entry>
    <title>【JavaSE】javareview01</title>
    <link href="http://lmc.pub/posts/1161296855.html"/>
    <id>http://lmc.pub/posts/1161296855.html</id>
    <published>2023-04-03T03:59:59.000Z</published>
    <updated>2023-04-03T05:03:57.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDK">JDK</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403120557975.png" alt="image-20230403120557975"></p><p><strong>Java代码编译过程</strong>：</p><p>一般我们写的都是<code>xx.java</code>文件，然后<code>javac</code>编译成<code>xx.class</code>字节码文件，然后再放到不同的<code>JVM</code>上然后运行出结果。</p><p>如果我们只是运行别人写好的java代码，那只有一个JRE就可以了。</p><h2 id="代码规范">代码规范</h2><ol><li><p>运算符和<code>=</code>前后各一个空格。</p></li><li><p>源代码编码用<code>UTF-8</code>。</p></li><li><p>一行不要太长，最好80字符以内。</p></li><li><p>行尾代码风格；</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403122903088.png" alt="image-20230403122903088"></p></li></ol><h2 id="Java数据类型">Java数据类型</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403123837935.png" alt="image-20230403123837935"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403124643861.png" alt="image-20230403124643861"></p><p>几个需要注意的点：</p><ol><li>小数都是大概值，不能比较是否 ==。如果要看两个小数是不是一样大只能说给一个很小的区间然后去判断。</li><li>char的本质就是int，是unicode 码。</li><li>常见的基本数据类型要知道，然后那个数据类型占几个字节要记得。</li></ol><h2 id="Java类型转换">Java类型转换</h2><p>Java的类型转换有两种：自动类型转换和强制类型转换。</p><h3 id="自动类型转换">自动类型转换</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403125708442.png" alt="image-20230403125708442"></p><p>一般来说在不同类型进行计算的时候，往往会将所有的类型自动转成最大的公共类型。</p><h3 id="强制类型转换">强制类型转换</h3><p>一般都是大向小的强转，但是要注意</p><blockquote><p>B otherVariable;</p><p>A variable = (A) otherVariable;</p></blockquote><p>A 必须是 B 的子类。不然就会提示类型转换错误。</p><h2 id="容易疏忽的点">容易疏忽的点</h2><ol><li><p>每个Java源文件只能有一个<code>public</code>类，且这个类名要和源文件名保持一致。</p></li><li><p>提示==缺少<code>;</code>的时候==也有可能是少了一个大括号{}</p></li><li><p>byte 和 short 以及char 在进行运算的都是往往会全部先转成 int</p></li><li><p>char 可以保存整数值，但不能保存整数变量，除非强转。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230403125413934.png" alt="image-20230403125413934"></p></li></ol>]]></content>
    
    
    <summary type="html">JDK &amp; Java代码规范 &amp; Java数据类型以及转换</summary>
    
    
    
    <category term="JavaSE" scheme="http://lmc.pub/categories/JavaSE/"/>
    
    
    <category term="JavaSE" scheme="http://lmc.pub/tags/JavaSE/"/>
    
  </entry>
  
  <entry>
    <title>【算法】重复的子字符串459</title>
    <link href="http://lmc.pub/posts/1617761035.html"/>
    <id>http://lmc.pub/posts/1617761035.html</id>
    <published>2023-04-02T09:30:20.000Z</published>
    <updated>2023-04-02T23:38:17.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v10">题目描述</h2><p><a href="https://leetcode.cn/problems/repeated-substring-pattern/">重复的子字符串459</a></p><h2 id="代码实现-v7">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重复的子字符串459</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RepeatedSubstringPattern459</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.print(<span class="string">&quot;请输入要判断寻找是不是重复子字符串的String = &quot;</span>);</span><br><span class="line">System.out.print(<span class="string">&quot;\n&quot;</span> + <span class="keyword">new</span> <span class="title class_">Solution</span>().repeatedSubstringPattern(input.nextLine()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">repeatedSubstringPattern</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.equals(<span class="string">&quot;&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length();</span><br><span class="line">    <span class="type">int</span>[] next = <span class="keyword">new</span> <span class="title class_">int</span>[len];</span><br><span class="line">    getNext(s, next);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (next[len - <span class="number">1</span>] &gt; <span class="number">0</span> &amp;&amp; len % (len - next[len - <span class="number">1</span>]) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getNext</span><span class="params">(String s, <span class="type">int</span>[] next)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>, i = <span class="number">1</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; s.charAt(j) != s.charAt(i)) j = next[j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (s.charAt(j) == s.charAt(i)) j++;</span><br><span class="line">    <span class="keyword">if</span> (j == s.length()) <span class="keyword">break</span>;</span><br><span class="line">    next[i] = j; </span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v11">个人总结</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/20220728212157.png" alt="图四"></p><p>正是因为 最长相等前后缀的规则，当一个字符串由重复子串组成的，最长相等前后缀不包含的子串就是最小重复子串。</p><p>上图是证明</p>]]></content>
    
    
    <summary type="html">KMP的另一种考查形式。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】实现strStr函数28</title>
    <link href="http://lmc.pub/posts/476003832.html"/>
    <id>http://lmc.pub/posts/476003832.html</id>
    <published>2023-04-01T08:09:25.000Z</published>
    <updated>2023-04-02T23:01:48.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v7">题目描述</h2><p><a href="https://leetcode.cn/problems/find-the-index-of-the-first-occurrence-in-a-string/">28. 找出字符串中第一个匹配项的下标</a></p><h2 id="代码实现-v4">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//28. 找出字符串中第一个匹配项的下标</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FindTheIndexOfTheFirstOccurrenceInAString28</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">Solution</span>().strStr(<span class="string">&quot;aabaabaafa&quot;</span>, <span class="string">&quot;aabaaf&quot;</span>));<span class="comment">//3</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">strStr</span><span class="params">(String haystack, String needle)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (needle.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span>[] next = <span class="keyword">new</span> <span class="title class_">int</span>[needle.length()];</span><br><span class="line">    getNext(needle, next);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">0</span>; i &lt; haystack.length(); i++) &#123;</span><br><span class="line">    <span class="keyword">while</span> ( j &gt; <span class="number">0</span> &amp;&amp; needle.charAt(j) != haystack.charAt(i)) j = next[j - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (haystack.charAt(i) == needle.charAt(j)) j++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j == needle.length()) <span class="keyword">return</span> i - needle.length() + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getNext</span><span class="params">(String s ,<span class="type">int</span>[] next)</span> &#123;</span><br><span class="line">    </span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">    <span class="comment">//下面这个while我还没有理解透彻，但是能写出来</span></span><br><span class="line">    <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; s.charAt(i) != s.charAt(j)) j = next[j - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (s.charAt(i) == s.charAt(j)) j++;</span><br><span class="line">    next[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v8">个人总结</h2><p>KMP</p><h3 id="前后缀">前后缀</h3><p>==<strong>前缀是指不包含最后一个字符的所有以第一个字符开头的连续子串</strong>。==</p><p>==<strong>后缀是指不包含第一个字符的所有以最后一个字符结尾的连续子串</strong>。==</p><h3 id="为什么跳前缀表哪里？">为什么跳前缀表哪里？</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230402160635688.png" alt="image-20230402160635688"></p><p>图中的<code>加粗黑字</code>对于理解为什么<code>f</code>不对付跳到<code>2</code>那个地方的<code>B</code>有很大的帮助。</p><h3 id="整个流程的理解">整个流程的理解</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230402162838624.png" alt="image-20230402162838624"></p><p>前缀表：相同前后缀的强度（&lt;= 当前）</p><h3 id="我们这里的实现">我们这里的实现</h3><ol><li>是 KMP</li><li>同时 next数组直接使用前缀表</li></ol><p>我觉得这个处理是很好的一个解决途径。</p><h3 id="我的困惑">我的困惑</h3><p>==那个求 next()哪里的while()跳回next数组的上一个。==</p>]]></content>
    
    
    <summary type="html">KMP算法第一个实例。多写几遍，看到就写一遍。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【电脑】怎么改win11的默认右键二级目录为一级目录</title>
    <link href="http://lmc.pub/posts/2579761686.html"/>
    <id>http://lmc.pub/posts/2579761686.html</id>
    <published>2023-04-01T00:31:59.000Z</published>
    <updated>2023-04-01T00:53:04.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述">题目描述</h2><p>win11 更新之后，UI变得美观了。但是也有不少地方是反向升级了。</p><p>比如右键，变成了二级目录。</p><p>我经常用的 git bash 就要点两下才能起来。</p><p>就不好。</p><h2 id="实现-v3">实现</h2><ol><li><p><code>win + x</code>选择<code>Windows powershell（管理员）</code>/或者<code>右键Home键</code><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230401083520389.png" alt="image-20230401083520389"></p></li><li><p><code>*reg add &quot;HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\InprocServer32&quot; /f /ve*</code>把这行代码复制过去执行。<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230401083605141.png" alt="image-20230401083605141"></p></li><li><p><code>win + E</code>打开<code>Windows资源管理器</code>/手点打开也行。然后<code>Ctrl + Shift + Esc</code>调出<code>任务管理器</code>。然后把<code>Windows资源管理器</code>重启。<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230401083900666.png" alt="image-20230401083900666"></p></li><li><p>然后这台电脑右键就是直接一级目录了。<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230401083935820.png" alt="image-20230401083935820"></p></li></ol><h2 id="个人总结-v2">个人总结</h2><p>产品升级，是毁誉参半的事情。</p><p>生的好皆大欢喜，生的不好就会引发用户不满。</p><p>降低用户好感度。</p>]]></content>
    
    
    <summary type="html">【电脑】怎么改win11的默认右键二级目录为一级目录</summary>
    
    
    
    <category term="电脑" scheme="http://lmc.pub/categories/%E7%94%B5%E8%84%91/"/>
    
    
    <category term="电脑" scheme="http://lmc.pub/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>【算法】左旋转字符串_剑指Offer58II</title>
    <link href="http://lmc.pub/posts/1541378983.html"/>
    <id>http://lmc.pub/posts/1541378983.html</id>
    <published>2023-03-31T23:04:13.000Z</published>
    <updated>2023-04-01T08:07:45.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v8">题目描述</h2><p><a href="https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/">左旋转字符串_剑指Offer58II</a></p><h2 id="代码实现-v5">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//剑指 Offer 58 - II. 左旋转字符串</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZuoXuanZhuanZiFuChuanLcof_JZOffer58II</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">Solution</span>().reverseLeftWords(<span class="string">&quot;abcdefg&quot;</span>,<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reverseLeftWords</span><span class="params">(String s, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(s);</span><br><span class="line">    reverse(res, <span class="number">0</span> , n - <span class="number">1</span>);</span><br><span class="line">    reverse(res, n , s.length() - <span class="number">1</span>);</span><br><span class="line">    reverse(res, <span class="number">0</span> , s.length() - <span class="number">1</span>);    </span><br><span class="line">    <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(StringBuilder s, <span class="type">int</span> start, <span class="type">int</span> end)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( start &lt; end) &#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> s.charAt(start);</span><br><span class="line">    s.setCharAt(start++, s.charAt(end));</span><br><span class="line">    s.setCharAt(end--, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v9">个人总结</h2><ol><li><p>其实反转用 StringBuilder 和 char都可以。这也是常见的两种实现方式。</p></li><li><p>要求是空间复杂度为<code>O(1)</code></p></li><li><p>这个和上一个题目很像，总的思路就是：</p><ul><li>先反前 n 个</li><li>再反后面的</li><li>最后大家一起反一个</li></ul><p>你试试，真的就好了。</p></li></ol>]]></content>
    
    
    <summary type="html">【算法】左旋转字符串_剑指Offer58II</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【电脑】怎么设置Windows默认DOS编码格式</title>
    <link href="http://lmc.pub/posts/720772485.html"/>
    <id>http://lmc.pub/posts/720772485.html</id>
    <published>2023-03-31T12:10:31.000Z</published>
    <updated>2023-03-31T23:28:31.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v2">题目描述</h2><p>在<code>刚开始学Java</code>以及<code>用Sublime写Java算法</code>的时候。</p><p>为了编译 java 文件，总会在 win 下面的<code>DOS</code>下面用命令行的形式去<code>javac java</code></p><p>但是<code>DOS默认编码是GBK，但我们用的大多都是 UTF-8</code>。</p><p>所以在Sublime写完代码要单独保存为 GBK，然后才能在 DOS 下测试运行。</p><p>而且下次打开又是乱码，很不方便。</p><p>所以要永久的改一下 Windows 下 DOS 的默认编码：从 GBK 改为 UTF-8。</p><h2 id="实现-v4">实现</h2><p><code>win + R</code>呼出运行框，然后输入<code>regedit</code>进入<code>注册表编辑器</code>。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230331201447765.png" alt="image-20230331201447765"></p><p>找到<code>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor</code>这个目录</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230331201612883.png" alt="image-20230331201612883"></p><p>新建<code>字符串值</code></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230331201649623.png" alt="image-20230331201649623"></p><p>依次这样填，然后确认退出。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230331201755760.png" alt="image-20230331201755760"></p><p>然后随便哪里打开 DOS，输入<code>chcp</code>就会显示当前编码，已经是<code>UTF-8</code>了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230331201906299.png" alt="image-20230331201906299"></p><h2 id="个人总结-v3">个人总结</h2><p>失败了，哪怕 DOS 设置成了 UTF-8，还是会乱码。</p>]]></content>
    
    
    <summary type="html">怎么设置Windows默认DOS编码格式</summary>
    
    
    
    <category term="电脑" scheme="http://lmc.pub/categories/%E7%94%B5%E8%84%91/"/>
    
    
    <category term="电脑" scheme="http://lmc.pub/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>【算法】反转字符串中的单词151</title>
    <link href="http://lmc.pub/posts/2899010650.html"/>
    <id>http://lmc.pub/posts/2899010650.html</id>
    <published>2023-03-31T10:19:47.000Z</published>
    <updated>2023-03-31T23:28:31.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v6">题目描述</h2><p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/">151. 反转字符串中的单词 - 力扣（Leetcode）</a></p><h2 id="代码实现-v3">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//反转字符串中的单词151    </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseWordsInAString151</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">Solution</span>().reverseWords(<span class="string">&quot;  hello world  &quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reverseWords</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> removeSpace(s);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    reverse(res,<span class="number">0</span>,res.length() - <span class="number">1</span>);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">        reverseEachWord(res);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1. 去多余空格</span></span><br><span class="line">    <span class="keyword">public</span> StringBuilder <span class="title function_">removeSpace</span><span class="params">(String oriStr)</span>&#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> oriStr.length() - <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span>[] oriChar = oriStr.toCharArray();</span><br><span class="line">    <span class="comment">//把前后空格去了</span></span><br><span class="line">    <span class="keyword">while</span>(oriChar[right] == <span class="string">&#x27; &#x27;</span>) right--;</span><br><span class="line">    <span class="keyword">while</span>(oriChar[left] == <span class="string">&#x27; &#x27;</span>) left++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> oriChar[left];</span><br><span class="line">    <span class="comment">//去中间空格</span></span><br><span class="line">    <span class="keyword">if</span> (c != <span class="string">&#x27; &#x27;</span> || res.charAt(res.length() - <span class="number">1</span>) != <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">    res.append(c);</span><br><span class="line">    &#125;</span><br><span class="line">    left++;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2. 整个str 的反转</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverse</span><span class="params">(StringBuilder oriStr, <span class="type">int</span> start, <span class="type">int</span> end)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(start &lt; end)&#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> oriStr.charAt(start);</span><br><span class="line">    oriStr.setCharAt(start++, oriStr.charAt(end));</span><br><span class="line">    oriStr.setCharAt(end--,temp);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3. 单词的恢复</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverseEachWord</span><span class="params">(StringBuilder oriStr)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> oriStr.length();</span><br><span class="line">    <span class="keyword">while</span>(start &lt; len)&#123;</span><br><span class="line">    <span class="comment">//找last</span></span><br><span class="line">            <span class="comment">//这个地方end++不能放在判断式里面，因为放在里面就是只要判断了就会自增，实际上</span></span><br><span class="line">            <span class="comment">//只有同时满足条件了才会自增。</span></span><br><span class="line">    <span class="keyword">while</span>(end &lt; len &amp;&amp; oriStr.charAt(end) != <span class="string">&#x27; &#x27;</span>) end++;</span><br><span class="line">    reverse(oriStr, start, end - <span class="number">1</span>);</span><br><span class="line">    start = end + <span class="number">1</span>;</span><br><span class="line">    end = start + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v7">个人总结</h2><p>解题关键：</p><ol><li>只使用 <code>O(1)</code> 的空间复杂度</li><li>可以用 <code>StringBuilder</code></li><li>记得分好步骤：1. 去空格； 2. 全颠覆； 3. 恢复单词；</li></ol><p>我对于<code>++</code>这个运算符的理解又上一层楼咯。</p><hr><p>2023/04/01</p><p>我觉得这个题目有点东西的，所以第二天又刷了一次。</p><p>这次在<code>++</code> 这种自增运算符处理更优雅了，但是我发现我还有两个弱点。</p><blockquote><ol><li><code>char</code>老是写成<code>chat</code></li><li>对一下Java基础语法不太熟练。比如<code>setCharAt()</code>里面是两个参数，index 和 updataValue。</li></ol></blockquote>]]></content>
    
    
    <summary type="html">这个算法比较难实现，多练习几次。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】替换空格05</title>
    <link href="http://lmc.pub/posts/992760064.html"/>
    <id>http://lmc.pub/posts/992760064.html</id>
    <published>2023-03-31T07:15:26.000Z</published>
    <updated>2023-03-31T08:51:55.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v9">题目描述</h2><p><a href="https://leetcode.cn/problems/ti-huan-kong-ge-lcof/">剑指 Offer 05. 替换空格</a></p><h2 id="代码实现-v6">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.lang.StringBuilder;</span><br><span class="line"></span><br><span class="line"><span class="comment">//替换空格05</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TiHuanKongGeLcof05</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.print(<span class="string">&quot;请输入需要替换【空格】为【20%】的字符串：&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;\n&quot;</span> + <span class="keyword">new</span> <span class="title class_">Solution</span>().replaceSpace(input.nextLine()));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//简单实现版本</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">replaceSpace</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="literal">null</span> || s.length() == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">char</span> item : s.toCharArray())&#123;</span><br><span class="line">    <span class="keyword">if</span> (item == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">    res.append(<span class="string">&quot;%20&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    res.append(item);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双指针版本</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">replaceSpace</span><span class="params">(String s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="literal">null</span> || s.length() == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//确定加几个空格，每个空格加两个空格</span></span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> item : s.toCharArray()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">    temp.append(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (temp.length() == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> s.length() - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    s += temp.toString();</span><br><span class="line">    <span class="type">char</span>[] ori = s.toCharArray();</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> s.length() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (ori[left] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">    ori[right--] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    ori[right--] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    ori[right] = <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    ori[right] = ori[left];</span><br><span class="line">    &#125;</span><br><span class="line">    right--;</span><br><span class="line">    left--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(ori);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v10">个人总结</h2><p>为什么我觉得如果对于 Java 的 <code>String，StringBuilder，StringBuffer</code>熟悉的话，第一个显得更加高效简单。</p>]]></content>
    
    
    <summary type="html">【算法】替换空格05</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】反转字符串II541</title>
    <link href="http://lmc.pub/posts/180107193.html"/>
    <id>http://lmc.pub/posts/180107193.html</id>
    <published>2023-03-31T02:16:37.000Z</published>
    <updated>2023-03-31T05:22:45.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v4">题目描述</h2><p><a href="https://leetcode.cn/problems/reverse-string-ii/description/">反转字符串II541</a></p><h2 id="代码实现">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Math;</span><br><span class="line"></span><br><span class="line"><span class="comment">//反转字符串II541</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseStringII541</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">Solution</span>().reverseStr(<span class="string">&quot;abcdefg&quot;</span>,<span class="number">2</span>));<span class="comment">//bacdfeg</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reverseStr</span><span class="params">(String s, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">    <span class="type">char</span>[] res = s.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; res.length; i += <span class="number">2</span> * k) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> i;</span><br><span class="line">    <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> Math.min(res.length - <span class="number">1</span>, start + k - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (start &lt; end)&#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> res[start];</span><br><span class="line">    res[start++] = res[end];</span><br><span class="line">    res[end--] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> String.valueOf(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v5">个人总结</h2><ol><li>在循环内部不要改变循环控制量</li><li>上面这种实现方式最好理解且轻便</li></ol>]]></content>
    
    
    <summary type="html">【算法】反转字符串II541</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】反转字符串344</title>
    <link href="http://lmc.pub/posts/772676929.html"/>
    <id>http://lmc.pub/posts/772676929.html</id>
    <published>2023-03-31T01:48:34.000Z</published>
    <updated>2023-03-31T05:22:45.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v5">题目描述</h2><p><a href="https://leetcode.cn/problems/reverse-string/description/">力扣，反转字符串344</a></p><h2 id="代码实现-v2">代码实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">//反转字符串344</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReverseString344</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入需要 reverse 的 String ： &quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">string</span> <span class="operator">=</span> input.nextLine();</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Solution</span>().reverseString(string.toCharArray());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverseString</span><span class="params">(<span class="type">char</span>[] s)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j = s.length - <span class="number">1</span>; i &lt; j; i++,j--) &#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> s[i];</span><br><span class="line">    s[i] = s[j];</span><br><span class="line">    s[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">System.out.print(<span class="string">&quot;\n&quot;</span> + String.valueOf(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人总结-v6">个人总结</h2><p>题目请简单的，就双指针法直接一换就可以了。</p><p>补充： ==谁用size谁用length？==</p><blockquote><ol><li><p><code>length</code>是<strong>数组的属性</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] nums = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">System.out.println(<span class="string">&quot;nums.length = &quot;</span> + nums.length);<span class="comment">//5</span></span><br></pre></td></tr></table></figure></li><li><p><code>length()</code>是<strong>String的统计长度方法</strong>。底层还是length。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;The length of s is &quot;</span> + s.length());<span class="comment">//5</span></span><br></pre></td></tr></table></figure></li><li><p><code>size()</code>是集合统计元素个数的统计方法，底层还是length。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">list.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;这个list的长度为：&quot;</span> + list.size());<span class="comment">//3</span></span><br></pre></td></tr></table></figure></li></ol></blockquote>]]></content>
    
    
    <summary type="html">【算法】反转字符串344</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【电脑】百度网盘网页版怎么按文件名排序</title>
    <link href="http://lmc.pub/posts/59755803.html"/>
    <id>http://lmc.pub/posts/59755803.html</id>
    <published>2023-03-29T14:26:50.000Z</published>
    <updated>2023-03-31T23:11:07.867Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述-v3">题目描述</h2><p>百度网盘文件默认排序只有<code>修改时间</code>和<code>大小</code>两个。</p><p>导致一些用文件名排好序的文件全乱了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230329222930927.png" alt="image-20230329222930927"></p><p>而且只给了这两个调整方案。</p><h2 id="solution-v3">solution</h2><ol><li>回到老版</li><li>空白处右键</li></ol><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230329223037544.png" alt="image-20230329223037544"></p><h2 id="个人总结-v4">个人总结</h2><p>这波属于是升级新版，直接脱离用户体验。</p><p>产品经理是哈了吧。还好百度程序员留了个口子。</p><p>真心离谱哈。</p>]]></content>
    
    
    <summary type="html">百度网盘网页版怎么按文件名排序</summary>
    
    
    
    <category term="电脑" scheme="http://lmc.pub/categories/%E7%94%B5%E8%84%91/"/>
    
    
    <category term="电脑" scheme="http://lmc.pub/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>【其他_Sublime】自动保存设置</title>
    <link href="http://lmc.pub/posts/4175140693.html"/>
    <id>http://lmc.pub/posts/4175140693.html</id>
    <published>2023-03-28T02:06:49.000Z</published>
    <updated>2023-03-31T23:14:47.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v3">描述</h2><p><code>Sublime</code>是一款很好用的轻量级编辑器。</p><p>我挺喜欢的，但是每次写完代码都要 <code>ctrl + s</code>手动保存。</p><p>有点 emo。</p><h2 id="实现-v2">实现</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230328101156490.png" alt="image-20230328101156490"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230328101228019.png" alt="image-20230328101228019"></p><p>然后重启 Sublime，就好了。</p><h2 id="个人总结">个人总结</h2><p>Sublime 这个自动保存，会有点点延迟。</p><p>是你离开了这个文件，她才保存。</p>]]></content>
    
    
    <summary type="html">【Sublime】自动保存设置</summary>
    
    
    
    <category term="其他" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/"/>
    
    <category term="Sublime" scheme="http://lmc.pub/categories/%E5%85%B6%E4%BB%96/Sublime/"/>
    
    
    <category term="Sublime" scheme="http://lmc.pub/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>【算法】四数之和18</title>
    <link href="http://lmc.pub/posts/2449576452.html"/>
    <id>http://lmc.pub/posts/2449576452.html</id>
    <published>2023-03-28T01:21:04.000Z</published>
    <updated>2023-03-31T07:11:37.732Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/4sum/">四数之和18</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//四数之和</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FourSum18</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="comment">// nums = [1, 0, -1, 0, -2, 2]，和 target = 0。 </span></span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.print(<span class="string">&quot;target = &quot;</span>);</span><br><span class="line">List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">Solution</span>().fourSum(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">2</span>,<span class="number">2</span>&#125;, input.nextInt());</span><br><span class="line"><span class="keyword">for</span> (List&lt;Integer&gt; itemList : res) &#123;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span> (Integer item : itemList) &#123;</span><br><span class="line">System.out.print(item + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">fourSum</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (nums.length &lt; <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//排序</span></span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">    <span class="comment">//这里的这个 nums[i] &gt; 0 不能少，因为如果target 为 -11，最小的是-5，就直接没了。</span></span><br><span class="line">    <span class="comment">//实际上还是可以的，-5，-4，-2</span></span><br><span class="line">    <span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span> &amp;&amp; nums[i] &gt; target) &#123;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//对于i去重</span></span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">    <span class="comment">//对j去重</span></span><br><span class="line">    <span class="keyword">if</span> (j &gt; i + <span class="number">1</span> &amp;&amp; nums[j] == nums[j - <span class="number">1</span>]) &#123;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> j + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">    <span class="type">long</span> <span class="variable">sum</span> <span class="operator">=</span> nums[i] + nums[j] + nums[left] + nums[right];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sum &lt; target) &#123;</span><br><span class="line">    left++;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; target) &#123;</span><br><span class="line">    right--;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sum == target) &#123;</span><br><span class="line">    ret.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));</span><br><span class="line">    <span class="keyword">while</span>(left &lt; right &amp;&amp; nums[right - <span class="number">1</span>] == nums[right]) right--;</span><br><span class="line">    <span class="keyword">while</span>(left &lt; right &amp;&amp; nums[left] == nums[left + <span class="number">1</span>]) left++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后面两个去重</span></span><br><span class="line">    right--;</span><br><span class="line">    left++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【算法】四数之和18</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】三数之和15</title>
    <link href="http://lmc.pub/posts/2670222231.html"/>
    <id>http://lmc.pub/posts/2670222231.html</id>
    <published>2023-03-28T01:20:49.000Z</published>
    <updated>2023-03-29T14:11:04.399Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/3sum/">三数之和15</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//三数之和15</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Threesum15</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] nums = &#123;-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">4</span>&#125;;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">Solution</span>().threeSum(nums);</span><br><span class="line">        <span class="keyword">for</span>(List&lt;Integer&gt; itemList : list)&#123;</span><br><span class="line">            System.out.println();</span><br><span class="line">            <span class="keyword">for</span> (Integer item : itemList) &#123;</span><br><span class="line">                System.out.print(item + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">threeSum</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (nums.length &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//排序</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="comment">//如果第一个就 &gt; 0,那绝对凑不出来 三个 = 0</span></span><br><span class="line">            <span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//对a去重</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp;nums[i] == nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> i + <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(right &gt; left)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[i] + nums[left] + nums[right];</span><br><span class="line">                <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    left++;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    right--;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sum == <span class="number">0</span>)&#123;</span><br><span class="line">                    res.add(Arrays.asList(nums[i], nums[left], nums[right]));</span><br><span class="line">                    <span class="comment">//后面两位去重</span></span><br><span class="line">                    <span class="keyword">while</span> (right &gt; left &amp;&amp; nums[right] == nums[right - <span class="number">1</span>]) right--;</span><br><span class="line">                    <span class="keyword">while</span> (right &gt; left &amp;&amp; nums[left] == nums[left + <span class="number">1</span>]) left++;</span><br><span class="line">                    right--;</span><br><span class="line">                    left++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="add">add</h2><ol><li>多复习几遍。这个题目确实棘手，尤其是去重处理。我能写出来，但是不知道为什么在哪里去重。</li><li>回滚JavaSE。关于JavaSE中间关于集合那段的语法有点忘了。只记得JavaSE最基础的if，when，while，for了。</li><li>我不知道引入什么包，这点有点寄。</li></ol>]]></content>
    
    
    <summary type="html">比较难消化的一题，记得多来写几遍。【去重，Java集合语法，引包】</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】赎金信383</title>
    <link href="http://lmc.pub/posts/1784299523.html"/>
    <id>http://lmc.pub/posts/1784299523.html</id>
    <published>2023-03-28T01:20:27.000Z</published>
    <updated>2023-03-31T08:04:28.432Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/ransom-note/">赎金信383</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//赎金信383</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RansomNote383</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">Solution</span>().canConstruct(<span class="string">&quot;bb&quot;</span>,<span class="string">&quot;ba&quot;</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canConstruct</span><span class="params">(String ransomNote, String magazine)</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> item : magazine.toCharArray()) &#123;</span><br><span class="line">    arr[item - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> item : ransomNote.toCharArray()) &#123;</span><br><span class="line">    arr[item - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> item : arr) &#123;</span><br><span class="line">    <span class="keyword">if</span> (item &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【算法】赎金信383</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】四数相加II454</title>
    <link href="http://lmc.pub/posts/2539118837.html"/>
    <id>http://lmc.pub/posts/2539118837.html</id>
    <published>2023-03-28T01:19:54.000Z</published>
    <updated>2023-03-29T14:11:04.403Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/4sum-ii/">454. 四数相加 II - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">//四数相加II454</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FourSumII454</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">int</span>[] nums1 = &#123;<span class="number">1</span>,<span class="number">2</span>&#125;; </span><br><span class="line"><span class="type">int</span>[] nums2 = &#123;-<span class="number">2</span>,-<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] nums3 = &#123;-<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="type">int</span>[] nums4 = &#123;<span class="number">0</span>,<span class="number">2</span>&#125;;</span><br><span class="line">System.out.println(<span class="keyword">new</span> <span class="title class_">Solution</span>().fourSumCount(nums1,nums2,nums3,nums4));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fourSumCount</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2, <span class="type">int</span>[] nums3, <span class="type">int</span>[] nums4)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//上两个</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num01 : nums1) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num02 : nums2 ) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum01</span> <span class="operator">=</span> num01 + num02;</span><br><span class="line">    <span class="keyword">if</span> (map.containsKey(sum01)) &#123;</span><br><span class="line">    map.put(sum01,map.get(sum01) + <span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    map.put(sum01,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下面两个</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num03 : nums3) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num04 : nums4 ) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">needNum01</span> <span class="operator">=</span> <span class="number">0</span> - (num03 + num04);</span><br><span class="line">    <span class="keyword">if</span> (map.containsKey(needNum01)) &#123;</span><br><span class="line">    res += map.get(needNum01);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">思路和【两数相加】差不多。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】两数之和1</title>
    <link href="http://lmc.pub/posts/3588063365.html"/>
    <id>http://lmc.pub/posts/3588063365.html</id>
    <published>2023-03-28T01:19:29.000Z</published>
    <updated>2023-03-29T14:11:04.402Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/two-sum/description/">1. 两数之和 - 力扣（Leetcode）</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//两数之和1</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TwoSum1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] nums = &#123;<span class="number">9</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">34</span>&#125;;</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;nums:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i : nums) &#123;</span><br><span class="line">System.out.print(<span class="string">&quot;\t&quot;</span> + i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">again</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span>(again)&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;\n请输入 target(666 退出)：&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">inputNum</span> <span class="operator">=</span> input.nextInt();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inputNum == <span class="number">666</span>) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">Solution</span>().twoSum(nums,inputNum);</span><br><span class="line"><span class="keyword">if</span> (res != <span class="literal">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;\n nums[&quot;</span> + res[<span class="number">0</span>] + <span class="string">&quot;] + nums[&quot;</span> + res[<span class="number">1</span>] + <span class="string">&quot;] = &quot;</span> + inputNum);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;匹配失败。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (nums == <span class="literal">null</span> || nums.length == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> target - nums[i];</span><br><span class="line">    <span class="keyword">if</span> (map.containsKey(temp)) &#123;</span><br><span class="line">    <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">    res[<span class="number">1</span>] = i;</span><br><span class="line">    res[<span class="number">0</span>] = map.get(temp);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    map.put(nums[i],i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">力扣no1。点开第一个。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【算法】快乐数202</title>
    <link href="http://lmc.pub/posts/3897625260.html"/>
    <id>http://lmc.pub/posts/3897625260.html</id>
    <published>2023-03-28T01:19:08.000Z</published>
    <updated>2023-03-29T14:11:04.403Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.cn/problems/happy-number/">快乐数202</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//快乐数202</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HappyNumber202</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;快乐数判断：&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">Solution</span>().isHappy(input.nextInt())) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;\n您输入的【是】快乐数！&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;\n很抱歉，您输入的【不是】快乐数。&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isHappy</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//前面是‘是’的退出条件，后面是‘不是’的退出条件</span></span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span> &amp;&amp; !set.contains(n))&#123;</span><br><span class="line">    set.add(n);</span><br><span class="line">    <span class="comment">//n变化</span></span><br><span class="line">    n = newNum(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">return</span> <span class="variable">n</span> <span class="operator">=</span>= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">newNum</span><span class="params">(<span class="type">int</span> origalNum)</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(origalNum &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> origalNum % <span class="number">10</span>;</span><br><span class="line">    res += temp * temp;</span><br><span class="line">    origalNum /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">快乐数的定义有点意思是吧。</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
