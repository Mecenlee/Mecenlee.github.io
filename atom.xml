<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMC_Blog</title>
  
  
  <link href="http://lmc.pub/atom.xml" rel="self"/>
  
  <link href="http://lmc.pub/"/>
  <updated>2023-06-03T07:22:05.027Z</updated>
  <id>http://lmc.pub/</id>
  
  <author>
    <name>LMC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Bug】Fragment缓存导致Fragment的dismiss不能让fragment消失</title>
    <link href="http://lmc.pub/posts/618495256.html"/>
    <id>http://lmc.pub/posts/618495256.html</id>
    <published>2023-06-03T07:17:27.000Z</published>
    <updated>2023-06-03T07:22:05.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v30">描述</h2><p>开发的app在开发阶段直接通过AS运行到真机时候本来点一个按钮对话框会消失。</p><p>但是没有。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/unPaied.gif" alt=""></p><p>只有正式的apk，或者adb运行到真机然后清理app所有数据才会正常。</p><h2 id="分析-v20">分析</h2><p>这个问题可能是由于你的应用的状态管理引起的。在第一次运行应用时，可能存在某些状态或缓存数据，导致对话框的关闭操作无法生效。但是当你清理了应用的所有数据后，这些状态和缓存数据也被清除，从而使得对话框的关闭操作可以正常生效。 你可以尝试在点击同意按钮后，手动清除或重置与对话框相关的状态或缓存数据，以确保下次运行时不会受到影响。可以在 <code>onAgreementClickListener.onClick()</code> 方法中添加相应的逻辑来清理这些数据。 另外，还可以检查你的应用的生命周期管理，确保对话框的显示和关闭操作在正确的生命周期阶段执行。例如，可以在 <code>onResume()</code> 方法中处理对话框的显示逻辑，而在 <code>onPause()</code> 方法中处理对话框的关闭逻辑。 如果问题仍然存在，请提供更多与对话框相关的代码和上下文信息，以便我可以更详细地帮助你解决问题。</p><h2 id="实现-v28">实现</h2><h2 id="总结-v30">总结</h2>]]></content>
    
    
    <summary type="html">【Bug】Fragment缓存导致Fragment的dismiss不能让fragment消失</summary>
    
    
    
    <category term="Bug" scheme="http://lmc.pub/categories/Bug/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>【Android】TabBar效果</title>
    <link href="http://lmc.pub/posts/578370259.html"/>
    <id>http://lmc.pub/posts/578370259.html</id>
    <published>2023-06-03T02:53:54.000Z</published>
    <updated>2023-06-03T06:42:53.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v17">描述</h2><p>Tabbar：就是每个app下方的那个东西。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230603105531423.png" alt="image-20230603105531423"></p><h2 id="实现-v17">实现</h2><blockquote><p>直接用三方Tab框架来弄Tabbar效果</p></blockquote><h3 id="添加依赖-v3">添加依赖</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类似TabLayout的控件</span></span><br><span class="line"><span class="comment">//https://github.com/H07000223/FlycoTabLayout</span></span><br><span class="line">implementation <span class="string">&#x27;io.github.h07000223:flycoTabLayout:3.0.0&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="xml">xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager.widget.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/list&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">&quot;@layout/divider_small&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--region 底部tab--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--底部tab</span></span><br><span class="line"><span class="comment">    tl_indicator_color：高亮颜色</span></span><br><span class="line"><span class="comment">    tl_textSelectColor：设置字体选中颜色</span></span><br><span class="line"><span class="comment">    tl_textUnselectColor：设置字体未选中颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.flyco.tablayout.CommonTabLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/indicator&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/d55&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorTabBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_iconHeight</span>=<span class="string">&quot;@dimen/d20&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_iconWidth</span>=<span class="string">&quot;@dimen/d20&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_indicator_color</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_indicator_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_textSelectColor</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_textUnselectColor</span>=<span class="string">&quot;?attr/colorOnSurface&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_textsize</span>=<span class="string">&quot;@dimen/s12&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_underline_color</span>=<span class="string">&quot;#DDDDDD&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:tl_underline_height</span>=<span class="string">&quot;0dp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--endregion--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>分割线：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">View</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/divider_small&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/d0_5&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorDivider&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">View</span>&gt;</span></span><br></pre></td></tr></table></figure><p>?attr/colorTabBar ： 就是新建一个attr专门做属性值。</p><p>就像这样：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--浅白色，功能是根据主题自动变化的白色，白天：纯白，夜间：浅一点的白色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorLightWhite&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--分割线颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorDivider&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义一个颜色属性，用来设置TabBar背景--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorTabBar&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Toolbar背景颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorToolbar&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--侧滑背景属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorSlideBackground&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--colorSurface点击颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;colorSurfaceClick&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是这里没有值，值在对应的theme文件中。</p><p>这样处理的好处是：适配深色模式。</p><p>theme文件就不贴了，自己去项目里看</p><h3 id="初始化-v2">初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseViewModelActivity</span>&lt;ActivityMainBinding&gt; &#123;</span><br><span class="line">   <span class="comment">//下面这里是控制 toolbar 的数量和现实文字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] indicatorTitles = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;R.string.discovery, R.string.video,R.string.feed,R.string.me&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] indicatorIcons = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;R.drawable.discovery, R.drawable.video,R.drawable.feed,R.drawable.me&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span>[] indicatorSelectedIcons = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;R.drawable.discovery_selected, R.drawable.video_selected,R.drawable.feed_selected,R.drawable.me_selected&#125;;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initViews();</span><br><span class="line">        SuperStatusBarUtil.myStatusBar(getHostActivity());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//缓存页面数量</span></span><br><span class="line">        <span class="comment">// 默认是缓存一个</span></span><br><span class="line">        binding.list.setOffscreenPageLimit(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//指示器</span></span><br><span class="line">        ArrayList&lt;CustomTabEntity&gt; indicatorTabs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; indicatorTitles.length; i++) &#123;</span><br><span class="line">            indicatorTabs.add(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">TabEntity</span>(</span><br><span class="line">                            getString(indicatorTitles[i]),</span><br><span class="line">                            indicatorSelectedIcons[i],</span><br><span class="line">                            indicatorIcons[i]</span><br><span class="line">                    )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        binding.indicator.setTabData(indicatorTabs);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//动态tab显示消息提醒</span></span><br><span class="line">        binding.indicator.showMsg(<span class="number">3</span>,<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initDatum();</span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line">        adapter = <span class="keyword">new</span> <span class="title class_">MainAdapter</span>(getHostActivity(), getSupportFragmentManager());</span><br><span class="line">        binding.list.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">        adapter.setDatum(Arrays.asList(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的TabEntity要自己建立一下，其实就是TabBar哪里的演示布局是怎样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.flyco.tablayout.listener.CustomTabEntity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义指示器的模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TabEntity</span> <span class="keyword">implements</span> <span class="title class_">CustomTabEntity</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 选中的图标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> selectedIcon;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 未选中图标</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> unSelectedIcon;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">TabEntity</span><span class="params">(String title, <span class="type">int</span> selectedIcon, <span class="type">int</span> unSelectedIcon)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.title = title;</span><br><span class="line">        <span class="built_in">this</span>.selectedIcon = selectedIcon;</span><br><span class="line">        <span class="built_in">this</span>.unSelectedIcon = unSelectedIcon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTabTitle</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTabSelectedIcon</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectedIcon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTabUnselectedIcon</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> unSelectedIcon;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个时候就是下面的那个TabBar就出来了。但是我们的TabBar是为了和ViewModel配合使用的。</p><h3 id="Fragments">Fragments</h3><p>DiscoveryFragment，VideoFragment，MeFragment，FeedFragment</p><p>自己创建出来，然后重写newInstance方法。</p><p>继承BaseViewModelFragment其实就两行代码。</p><h3 id="ViewPage适配器">ViewPage适配器</h3><h4 id="封装的BaseFragmentStatePagereAdapter">封装的BaseFragmentStatePagereAdapter</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentStatePagerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用FragmentPagerAdapter</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseFragmentStatePagerAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">FragmentStatePagerAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; datum = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fm      Fragment的管理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseFragmentStatePagerAdapter</span><span class="params">(Context context, <span class="meta">@NonNull</span> FragmentManager fm)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(fm);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有多少个</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> datum.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前位置数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> datum.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datum</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDatum</span><span class="params">(List&lt;T&gt; datum)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (datum != <span class="literal">null</span> &amp;&amp; datum.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.datum.clear();</span><br><span class="line">            <span class="built_in">this</span>.datum.addAll(datum);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通知数据变更了</span></span><br><span class="line">            notifyDataSetChanged();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="MainAdapter">MainAdapter</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.adapter.BaseFragmentStatePagerAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.main.fragment.DiscoveryFragment;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.main.fragment.FeedFragment;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.main.fragment.MeFragment;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.main.fragment.VideoFragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.reactivex.rxjava3.annotations.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主界面ViewPager的Adapter</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseFragmentStatePagerAdapter</span>&lt;Integer&gt; &#123;</span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     *  <span class="doctag">@param</span> context 上下文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fm Fragment管理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MainAdapter</span><span class="params">(Context context, <span class="meta">@NonNull</span> FragmentManager fm)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, fm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (position) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> VideoFragment.newInstance();</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> FeedFragment.newInstance();</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">return</span> MeFragment.newInstance();</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> DiscoveryFragment.newInstance();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的getItem就是返回对应的ViewPage里面的Fragment。记住别把顺序搞乱了。</p><h3 id="indicator和ViewPage配合">indicator和ViewPage配合</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initListeners</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.initListeners();</span><br><span class="line">    binding.indicator.setOnTabSelectListener(<span class="keyword">new</span> <span class="title class_">OnTabSelectListener</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTabSelect</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">            binding.list.setCurrentItem(position);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onTabReselect</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    binding.list.addOnPageChangeListener(<span class="keyword">new</span> <span class="title class_">onPageChangeListenerAdapter</span>()&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageSelected</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onPageSelected(position);</span><br><span class="line">            binding.indicator.setCurrentTab(position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个地方的 onPageChangeListenerAdapter 我们包了一层：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.ViewPager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">onPageChangeListenerAdapter</span> <span class="keyword">implements</span> <span class="title class_">ViewPager</span>.OnPageChangeListener &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageScrolled</span><span class="params">(<span class="type">int</span> position, <span class="type">float</span> positionOffset, <span class="type">int</span> positionOffsetPixels)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageSelected</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageScrollStateChanged</span><span class="params">(<span class="type">int</span> state)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不然我们是直接继承 Viewpager.OnPageChangeListener</p><p>这样包一层的好处是：就不用四个方法哪怕不用也要写出来。</p><p>MainActivity 就更加的简洁。</p><p>其实那个指示器也可以包：OnTabSelectListener</p><p>但是ViewPage这个适用面大我们包。指示器不多就不包了。</p><h2 id="总结-v17">总结</h2>]]></content>
    
    
    <summary type="html">【Android】TabBar效果</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】App内网络检查器</title>
    <link href="http://lmc.pub/posts/2391480330.html"/>
    <id>http://lmc.pub/posts/2391480330.html</id>
    <published>2023-06-03T02:11:50.000Z</published>
    <updated>2023-06-03T02:47:43.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v15">描述</h2><p>作为客户端，一般出了bug都说是我们的原因。</p><p>其实有时候就是后端出的问题。</p><p>这时候为了洗清关系，我们就需要一个在app上直接查看网络消息的工具。</p><p>因为我们一般都是在AS里面看。</p><p>这样不方便排查。</p><h2 id="实现-v15">实现</h2><h3 id="添加依赖-v2">添加依赖</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过OkHttp的拦截器机制</span></span><br><span class="line"><span class="comment">//实现在应用通知栏显示网络请求功能</span></span><br><span class="line"><span class="comment">//https://github.com/ChuckerTeam/chucker</span></span><br><span class="line">debugImplementation <span class="string">&quot;com.github.chuckerteam.chucker:library:3.5.2&quot;</span></span><br><span class="line">releaseImplementation <span class="string">&quot;com.github.chuckerteam.chucker:library-no-op:3.5.2&quot;</span></span><br></pre></td></tr></table></figure><p>然后可以在 NetWorkModule类的provideOkHttpClient里面加一句：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Config.DEBUG) &#123;</span><br><span class="line">    <span class="comment">//调试模式</span></span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加chucker实现app内显示网络请求信息拦截器</span></span><br><span class="line">    okhttpClientBuilder.addInterceptor(<span class="keyword">new</span> <span class="title class_">ChuckerInterceptor</span>.Builder(AppContext.getInstance()).build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结-v15">总结</h2><p>方便了其他人员在手机上查看网络请求，确定bug是谁的问题。</p><p>是客户端的给客户端。</p><p>是后端的找后端。</p>]]></content>
    
    
    <summary type="html">【Android】App内网络检查器</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】全局加载提示</title>
    <link href="http://lmc.pub/posts/2902541234.html"/>
    <id>http://lmc.pub/posts/2902541234.html</id>
    <published>2023-06-02T04:12:32.000Z</published>
    <updated>2023-06-02T08:20:12.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v19">描述</h2><p>类似IOS的圆角加载对话框</p><h2 id="实现-v18">实现</h2><h3 id="SuperRoundLadingDialogFragment">SuperRoundLadingDialogFragment</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Dialog;</span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.R;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.fragment.BaseDialogFragment;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类似IOS的圆角加载对话框</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 基于此框架进行修改：https://github.com/ydstar/loadingdialog</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperRoundLadingDialogFragment</span> <span class="keyword">extends</span> <span class="title class_">BaseDialogFragment</span> <span class="keyword">implements</span> <span class="title class_">DialogInterface</span>.OnKeyListener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView messageView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initDatum();</span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> getArguments().getString(<span class="string">&quot;SuperRoundLadingDialogFragment&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (message == <span class="literal">null</span>)&#123;</span><br><span class="line">            message = getString(R.string.loading);</span><br><span class="line">        &#125;</span><br><span class="line">        messageView.setText(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SuperRoundLadingDialogFragment <span class="title function_">newInstance</span><span class="params">(String message)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">        args.putString(<span class="string">&quot;SuperRoundLadingDialogFragment&quot;</span>,message);</span><br><span class="line"></span><br><span class="line">        <span class="type">SuperRoundLadingDialogFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SuperRoundLadingDialogFragment</span>();</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SuperRoundLadingDialogFragment <span class="title function_">newInstance</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">SuperRoundLadingDialogFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SuperRoundLadingDialogFragment</span>();</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> View <span class="title function_">getLayoutView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="type">Dialog</span> <span class="variable">dialog</span> <span class="operator">=</span> getDialog();</span><br><span class="line">        <span class="comment">//设置背景透明</span></span><br><span class="line">        dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去掉标题</span></span><br><span class="line">        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);</span><br><span class="line"></span><br><span class="line">        dialog.setCanceledOnTouchOutside(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> inflater.inflate(R.layout.super_round_dialog_loading, container);</span><br><span class="line">        messageView = view.findViewById(R.id.message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不响应返回键</span></span><br><span class="line">        dialog.setOnKeyListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKey</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> keyCode, KeyEvent keyEvent)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> keyEvent.KEYCODE_BACK == keyCode ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="R-layout-super-round-dialog-loading">R.layout.super_round_dialog_loading</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;120dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/shape_round_dialog_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minWidth</span>=<span class="string">&quot;120dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingHorizontal</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingVertical</span>=<span class="string">&quot;15dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/progressBar&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateBehavior</span>=<span class="string">&quot;repeat&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:indeterminateDrawable</span>=<span class="string">&quot;@drawable/anim_super_loading_icon&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;@dimen/padding_meddle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">tools:text</span>=<span class="string">&quot;login login login&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="黑色圆弧背景">黑色圆弧背景</h4><p>@drawable/shape_round_dialog_background</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;#88000000&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;10dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="ProgressBar-动画">ProgressBar 动画</h4><p>@drawable/anim_super_loading_icon</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">animated-rotate</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/super_loading&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fromDegrees</span>=<span class="string">&quot;0.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:pivotX</span>=<span class="string">&quot;50.0%&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:pivotY</span>=<span class="string">&quot;50.0%&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:toDegrees</span>=<span class="string">&quot;-360.0&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>@drawable/super_loading</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230602154737239.png" alt="image-20230602154737239"></p><h2 id="封装-v3">封装</h2><p>BaseLogicActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本项目APP的通用逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseLogicActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseCommonActivity</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> WeakReference&lt;SuperRoundLoadingDialogFragment&gt; loadingWeakReference;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载框</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示加载对话框</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">()</span> &#123;</span><br><span class="line">        showLoading(getString(R.string.loading));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示加载对话框</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">(<span class="type">int</span> data)</span> &#123;</span><br><span class="line">        showLoading(getString(data));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示加载对话框</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showLoading</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="comment">//避免发生内存泄露</span></span><br><span class="line">        <span class="keyword">if</span> (loadingWeakReference == <span class="literal">null</span> || loadingWeakReference.get() == <span class="literal">null</span>) &#123;</span><br><span class="line">            loadingWeakReference = <span class="keyword">new</span> <span class="title class_">WeakReference</span>&lt;&gt;(</span><br><span class="line">                    SuperRoundLoadingDialogFragment.newInstance(message)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">SuperRoundLoadingDialogFragment</span> <span class="variable">dialog</span> <span class="operator">=</span> loadingWeakReference.get();</span><br><span class="line">        <span class="comment">//避免多次展示</span></span><br><span class="line">        <span class="keyword">if</span> (dialog.getDialog() == <span class="literal">null</span> || !dialog.getDialog().isShowing()) &#123;</span><br><span class="line">            dialog.show(getSupportFragmentManager(), <span class="string">&quot;SuperRoundLoadingDialogFragment&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 隐藏加载对话框</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hideLoading</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SuperRoundLoadingDialogFragment</span> <span class="variable">dialog</span> <span class="operator">=</span> loadingWeakReference.get();</span><br><span class="line">        <span class="keyword">if</span> (dialog != <span class="literal">null</span>) &#123;</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">            loadingWeakReference.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        loadingWeakReference = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用到了Java的<code>弱引用</code>来避免<code>内存泄露</code>。</p><blockquote><p>就是加载对话框会持有本Activity，然后他们都去后台之后，本来Activity是应该释放的。</p><p>但是因为loading fragment 的持有就释放不了。</p><p>就会导致内存卸扣。</p><p>解决办法就是用：弱引用。</p><p>这个就会在activity在后台时候，下一次垃圾挥手就会回收。</p></blockquote><h2 id="总结-v18">总结</h2><p>经此一封装，后面想显示加载对话开给你就只用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showLoading(<span class="string">&quot;what you wanner say&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Android】全局加载提示</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】自定义Toast</title>
    <link href="http://lmc.pub/posts/2626142440.html"/>
    <id>http://lmc.pub/posts/2626142440.html</id>
    <published>2023-06-01T13:18:44.000Z</published>
    <updated>2023-06-01T13:44:56.427Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v20">描述</h2><p>其实默认的Toast也还挺可爱的，但是有时候我就想自己去定义它：</p><p>比如在上面显示</p><p>比如固定大小</p><p>巴拉巴拉。</p><h2 id="实现-v19">实现</h2><h3 id="SuperToast">SuperToast</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误提示</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">error</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        show(content, R.drawable.shape_toast_error_background, Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功提示</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">success</span><span class="params">(<span class="meta">@StringRes</span> <span class="type">int</span> content)</span> &#123;</span><br><span class="line">        show(context.getString(content), R.drawable.shape_toast_success_background, Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">success</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        show(content, R.drawable.shape_toast_success_background, Toast.LENGTH_SHORT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(String content, <span class="meta">@DrawableRes</span> <span class="type">int</span> background, <span class="type">int</span> duration)</span> &#123;</span><br><span class="line">        show(content, background, duration, Gravity.FILL_HORIZONTAL | Gravity.TOP, <span class="number">0</span>, <span class="number">130</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> content    显示内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> background 背景</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> duration   时长</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gravity    位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xOffset    x轴偏移</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> yOffset    y轴偏移</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(String content, <span class="meta">@DrawableRes</span> <span class="type">int</span> background, <span class="type">int</span> duration, <span class="type">int</span> gravity, <span class="type">int</span> xOffset, <span class="type">int</span> yOffset)</span> &#123;</span><br><span class="line">        <span class="type">Toast</span> <span class="variable">toast</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Toast</span>(context);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置时长</span></span><br><span class="line">        toast.setDuration(duration);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置位置</span></span><br><span class="line">        toast.setGravity(gravity, xOffset, yOffset);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加载布局</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">layout</span> <span class="operator">=</span> inflater.inflate(R.layout.super_toast, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">LinearLayout</span> <span class="variable">containerView</span> <span class="operator">=</span> layout.findViewById(R.id.container);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置背景</span></span><br><span class="line">        containerView.setBackgroundResource(background);</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">contentView</span> <span class="operator">=</span> layout.findViewById(R.id.content);</span><br><span class="line">        contentView.setText(content);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置自定义布局</span></span><br><span class="line">        toast.setView(layout);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        toast.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补充">补充</h3><p>R.drawable.shape_toast_background：默认Toast的黑色背景。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--圆角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;@dimen/radius_small&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--填充颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;@color/super_toast_background&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>R.drawable.shape_toast_error_background：错误提示的红色背景</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--圆角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;5dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--填充颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;@color/super_toast_error_background&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>R.drawable.shape_toast_success_background：成功Toast的绿色背景。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--圆角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;5dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--填充颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;@color/super_toast_success_background&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Toast自己的xml：R.layout.super_toast</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingHorizontal</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/container&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@drawable/shape_toast_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingHorizontal</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingVertical</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;提示信息&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">&quot;@color/white&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;@dimen/s16&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>他这里实现圆弧是用自定义背景那个。</p><p>@drawable/shape_toast_background</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--圆角--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;@dimen/radius_small&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--填充颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;@color/super_toast_background&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用-v3">使用</h2><h3 id="APP唯一初始化">APP唯一初始化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppContext</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AppContext instance;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">        instance = <span class="built_in">this</span>;</span><br><span class="line">        initMMKV();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化Toast工具类</span></span><br><span class="line">        SuperToast.init(getApplicationContext());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="随意使用">随意使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SuperToast.show(<span class="string">&quot;干什么？&quot;</span>);</span><br><span class="line">SuperToast.erro(<span class="string">&quot;干什么？&quot;</span>);</span><br><span class="line">SuperToast.success(<span class="string">&quot;干什么？&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Android】自定义Toast</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】莫名其妙Bug解决方案</title>
    <link href="http://lmc.pub/posts/602922964.html"/>
    <id>http://lmc.pub/posts/602922964.html</id>
    <published>2023-06-01T07:09:15.000Z</published>
    <updated>2023-06-01T07:12:52.638Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v21">描述</h2><p>AS总是喜欢报一些莫名其妙根本找不到结果的错误。</p><h2 id="常见解决方案">常见解决方案</h2><ol><li>重启AS</li><li><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230601151223635.png" alt="image-20230601151223635"></li><li>网络问题：校园网掉线，翻墙梯子坏了</li></ol><h2 id="总结-v22">总结</h2>]]></content>
    
    
    <summary type="html">【Android】莫名其妙Bug解决方案</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Bug" scheme="http://lmc.pub/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>【Android-项目】综合音乐APP</title>
    <link href="http://lmc.pub/posts/933306383.html"/>
    <id>http://lmc.pub/posts/933306383.html</id>
    <published>2023-05-31T15:26:32.000Z</published>
    <updated>2023-05-31T15:45:32.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目描述">项目描述</h2><p>一款仿市面主流音乐APP的完整项目。</p><p>功能模块包含：</p><p>商业APP启动项（用户隐私协议，动态获取权限，引导界面，启动屏，开屏广告）；</p><p>用户管理以及登录项（用户密码/短信验证码注册登录/找回秘密，第三方微信QQ登录，好友/粉丝功能，二维码加好友）；</p><p>朋友圈模块（图文动态，九宫格多图文，高德地图定位API，评论功能）；</p><p>音乐模块：（本地音乐扫描，音乐下载，黑椒唱片仿真，歌词解析滚动，歌曲列表。通知栏媒体控制中心，）</p><p>即时通信（文字/图片聊天，消息推送，）；</p><p>商城模块（MVVM商品列表，变化布局，排序检索，购物车，详情富文本，三方支付接入：微信支付，支付宝支付，订单管理，地址服务:百度地址识别，语音输入，文字自动识别API）；</p><p>娱乐扩展功能（视频）</p><p>APP扩展功能（桌面小组件，长按快捷方式）</p><h2 id="主要工作">主要工作</h2><h2 id="项目难点">项目难点</h2><h2 id="个人收获">个人收获</h2>]]></content>
    
    
    <summary type="html">【Android-项目】综合音乐APP</summary>
    
    
    
    <category term="算法" scheme="http://lmc.pub/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="http://lmc.pub/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://lmc.pub/posts/0.html"/>
    <id>http://lmc.pub/posts/0.html</id>
    <published>2023-05-30T03:31:51.716Z</published>
    <updated>2023-05-30T04:32:44.337Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>[ ] 轮播图</p></li><li><p>[ ] 网络框架封装</p></li><li><p>[ ] TabBar</p></li><li><p>[ ] WebView</p></li><li><p>[ ] 日志框架介绍：Timber</p></li><li><p>[ ] 自定义模块</p></li><li><p>[ ] 侧滑菜单栏</p></li><li><p>[ ] 登录界面</p></li><li><p>[ ] 验证码</p></li><li><p>[ ] 启动广告功能</p></li><li><p>[ ] 全局音乐栏</p></li><li><p>[ ] 通知栏媒体控制中心</p></li><li><p>[ ] 自定义控件绘制</p></li><li><p>[ ] 动画实现</p></li><li><p>[ ] 视频播放</p></li><li><p>[ ] 高德地图SDK</p></li><li><p>[ ] 骨架屏</p></li><li><p>[ ] 桌面小组件</p></li><li><p>[ ] 长按APP快捷方式</p></li><li><p>[ ] 百度语音识别api</p></li><li><p>[ ] 支付宝支付api</p></li><li><p>[ ] 微信支付api</p></li><li><p>[ ] 三方登录：微信/QQ</p></li><li><p>[ ] 在线聊天：融云sdkapi计入</p></li></ul><p>还没有解决的bug：</p><ul><li><p>[ ] 无法在小米手机上离线推送</p><blockquote><p>小米现在应用必须上架才能推送，我们课程提供的应用没有上架，所以说推送不了；代码写法还是像课程那么写；另外还要在小米开发者后台新建推送渠道</p></blockquote></li><li><p>[ ] 小米MIUI14无法在通知媒体控制中心显示歌词</p><blockquote><p>ANdroid13就是会有这个bug</p></blockquote></li><li><p>[ ] 百度图像识别md5不匹配</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[ ] 轮播图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[ ] 网络框架封装&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[ ] TabBar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[ ] WebView&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[ ] 日志框架介绍：Ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【Android】轮播图</title>
    <link href="http://lmc.pub/posts/2603373004.html"/>
    <id>http://lmc.pub/posts/2603373004.html</id>
    <published>2023-05-30T03:31:22.000Z</published>
    <updated>2023-05-31T12:47:47.974Z</updated>
    
    <content type="html"><![CDATA[<h1>原生实现办法</h1><h2 id="成果展示-v2">成果展示</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/%E8%BD%AE%E6%92%AD%E5%9B%BE.gif" alt=""></p><h2 id="准备工作">准备工作</h2><h3 id="指示器包引入">指示器包引入</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆形指示器</span></span><br><span class="line"><span class="comment">//https://github.com/ongakuer/CircleIndicator</span></span><br><span class="line">implementation <span class="string">&#x27;me.relex:circleindicator:2.1.6&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="普通Fragment-封装">普通Fragment 封装</h3><p>BaseFragment，BaseCommonFragment，BaseViewModelFragment</p><p>具体的翻代码。</p><h2 id="展示Activity">展示Activity</h2><h3 id="xml-v2">xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--左右滚动控件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.viewpager.widget.ViewPager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/list&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--指示器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">me.relex.circleindicator.CircleIndicator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/indicator&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;@dimen/guide_indicator_height&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:ci_drawable</span>=<span class="string">&quot;@drawable/shape_color_primary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:ci_drawable_unselected</span>=<span class="string">&quot;@drawable/shape_circle_light_grey&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Activity-v3">Activity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.superutils.statusbar.SuperStatusBarUtil;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.R;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.activity.BaseViewModelActivity;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.guide.adapter.GuideAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.databinding.ActivityGuideBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GuideActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseViewModelActivity</span>&lt;ActivityGuideBinding&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> GuideAdapter adapter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initDatum();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//状态栏设置</span></span><br><span class="line">        SuperStatusBarUtil.myStatusBar(getHostActivity());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建适配器</span></span><br><span class="line">        adapter = <span class="keyword">new</span> <span class="title class_">GuideAdapter</span>(getHostActivity(),getSupportFragmentManager());</span><br><span class="line">        <span class="comment">//准备数据</span></span><br><span class="line">        List&lt;Integer&gt; datum = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        datum.add(R.drawable.img);</span><br><span class="line">        datum.add(R.drawable.img);</span><br><span class="line">        datum.add(R.drawable.img);</span><br><span class="line">        datum.add(R.drawable.img);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将数据设置到适配器</span></span><br><span class="line">        adapter.setDatum(datum);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//把适配器（数据）设置到控件</span></span><br><span class="line">        binding.list.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//让指示器根据列表配合工作</span></span><br><span class="line">        binding.indicator.setViewPager(binding.list);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//适配器注册数据源观察者</span></span><br><span class="line">   adapter.registerDataSetObserver(binding.indicator.getDataSetObserver());</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="适配器">适配器</h2><h3 id="封装好的父适配器">封装好的父适配器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentStatePagerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用的Adapter</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseFragmentStatePagerAdapter</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">FragmentStatePagerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; datum = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseFragmentStatePagerAdapter</span><span class="params">(Context context, <span class="meta">@NonNull</span> FragmentManager fm)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(fm);</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有多少个Fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> datum.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getData</span><span class="params">(<span class="type">int</span> position)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> datum.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDatum</span><span class="params">(List&lt;T&gt; datum)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (datum != <span class="literal">null</span> &amp;&amp; datum.size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.datum.clear();</span><br><span class="line">            <span class="built_in">this</span>.datum.addAll(datum);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通知控件我的数据改变了</span></span><br><span class="line">            notifyDataSetChanged();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="这个轮播图的适配器">这个轮播图的适配器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.Fragment;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.adapter.BaseFragmentStatePagerAdapter;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.component.guide.fragment.GuideFragment;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ViewPage的适配器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GuideAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseFragmentStatePagerAdapter</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GuideAdapter</span><span class="params">(Context context, <span class="meta">@NonNull</span> FragmentManager fm)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, fm);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前位置Fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Fragment <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> GuideFragment.newInstance(getData(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="技术总结">技术总结</h2><p>轮播图其实就是两个：上面轮播的View 和下面的指示器。</p><p>轮播的View：可以是图片，可以是ViewPage</p><p>指示器我们就直接用三方库</p>]]></content>
    
    
    <summary type="html">【Android】轮播图</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】MMKV实现偏好配置</title>
    <link href="http://lmc.pub/posts/1144384476.html"/>
    <id>http://lmc.pub/posts/1144384476.html</id>
    <published>2023-05-30T00:58:49.000Z</published>
    <updated>2023-05-30T02:47:19.826Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这个性能非常厉害。</p><p><img src="https://github.com/Tencent/MMKV/wiki/assets/profile_android_mini.png" alt=""></p></blockquote><h2 id="依赖">依赖</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//腾讯开源的高性能keyValue存储，用来替代系统的SharedPreferences</span></span><br><span class="line"><span class="comment">//https://github.com/Tencent/MMKV</span></span><br><span class="line">implementation <span class="string">&#x27;com.tencent:mmkv-static:+&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="初始化">初始化</h2><p>在<code>MainActivity</code>旁加一个<code>AppContext</code></p><p>意思为整个app的一些配置，只会在app启动时候运行一次。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mmkv.MMKV;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局Application</span></span><br><span class="line"><span class="comment"> * 整个生命周期只执行一次</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppContext</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">        initMMKV();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化 腾讯开源的高性能keyValue存储，用来替代系统的SharedPreferences</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initMMKV</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">rootDir</span> <span class="operator">=</span> MMKV.initialize(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后还要去配置文件中设置 App 的 name</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230530101638129.png" alt="image-20230530101638129"></p><h2 id="封装">封装</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.tencent.mmkv.MMKV;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 偏好设置工具类MMKV</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PreferenceUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 偏好设置文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PreferenceUtil instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> MMKV preference;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否显示引导界面key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SHOW_GUIDE</span> <span class="operator">=</span> <span class="string">&quot;SHOW_GUIDE&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//region basicsetting</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PreferenceUtil</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="comment">//保存上下文（getApplicationContext代表整个app，就脱离activity。避免内存泄漏）</span></span><br><span class="line">        <span class="built_in">this</span>.context = context.getApplicationContext();</span><br><span class="line">        preference = MMKV.defaultMMKV();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取偏好设置单例</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> PreferenceUtil <span class="title function_">getInstance</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="comment">//保存上下文</span></span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">PreferenceUtil</span>(context);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//endregion</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否显示引导界面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isShowGuide</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBoolean(SHOW_GUIDE, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置是否显示引导界面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShowGuide</span><span class="params">(<span class="type">boolean</span> value)</span> &#123;</span><br><span class="line">        putBoolean(SHOW_GUIDE, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//region help function</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存boolean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">putBoolean</span><span class="params">(String key, <span class="type">boolean</span> value)</span> &#123;</span><br><span class="line">        preference.edit().putBoolean(key, value).apply();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取boolean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultValue</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">getBoolean</span><span class="params">(String key, <span class="type">boolean</span> defaultValue)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> preference.getBoolean(key, defaultValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//endregion</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">prepareNext</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (PreferenceUtil.getInstance(getHostActivity()).isShowGuide())&#123;</span><br><span class="line">        startActivityAfterFinishThis(GuideActivity.class);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    postNext();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后记得在有些地方去设置这个偏好设置为false。</p><p>就可以正常工作了。</p><h2 id="优化">优化</h2><p>每次写<code>PreferenceUtil.getInstance(getHostActivity())</code>太重复了。</p><p>我们去<code>BaseLogicActivity</code>（这个项目APP通用逻辑）里面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> PreferenceUtil sp;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.initDatum();</span><br><span class="line">    sp = PreferenceUtil.getInstance(getHostActivity());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后要用偏好设置的Activity 继承这个BaseLogicActivity 然后就可以改成成这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">prepareNext</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (sp.isShowGuide())&#123;</span><br><span class="line">        startActivityAfterFinishThis(GuideActivity.class);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    postNext();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成果展示">成果展示</h2><blockquote><p>理论逻辑是：</p><p>第一来</p><p>splash界面然后用户协议，然后动态授权后去guide界面</p><p>第二次进入就是 splash 直接去main界面</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/MMKV.gif" alt=""></p><p>所以我们以后就用腾讯的这个<code>MMKV</code>来代替原生的<code>Preference</code></p>]]></content>
    
    
    <summary type="html">【Android】MMKV实现偏好配置</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】模块封装</title>
    <link href="http://lmc.pub/posts/2096721227.html"/>
    <id>http://lmc.pub/posts/2096721227.html</id>
    <published>2023-05-29T04:47:37.000Z</published>
    <updated>2023-05-29T07:01:48.631Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模块创建">模块创建</h2><blockquote><p>一般来说，我们用三方库都是在build文件里面去写网络仓库的。</p><p>但有时候，也需要做成本地模块。就像下面这样。</p></blockquote><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529131932326.png" alt="image-20230529131932326"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529131712566.png" alt="image-20230529131712566"></p><h2 id="模块引入">模块引入</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529132317170.png" alt="image-20230529132317170"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529132401507.png" alt="image-20230529132401507"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529132554482.png" alt="image-20230529132554482"></p><p>等同于这样：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230529132706224.png" alt="image-20230529132706224"></p><p>然后 MainActivity 里面就可以用 super-java 里面的类和方法</p><h2 id="common-gradle">common.gradle</h2><blockquote><p>app模块和super-java模块都有自己的build.gradle文件。</p><p>但里面很多东西是相同的，如果要更改还要一个个打开改。</p><p>所以提取封装出来成一个公共的 common.gradle 这样一些目标 sdk 什么的只用直接改 common.gradle 就可以了。</p></blockquote><p>项目根目录创建 <code>common.gradle</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通用配置文件</span></span><br><span class="line"><span class="comment">//把这个项目下各个模块的 build.gradle 文件相同重复的放在这里。</span></span><br><span class="line"><span class="comment">//方便同意管理。</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="comment">//编译版本，旧版项目是compileSdkVersion</span></span><br><span class="line">    <span class="comment">//有些旧版本，还需要配置buildToolsVersion</span></span><br><span class="line">    compileSdk rootProject.ext.targetSdk</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="comment">//最小版本，低于该版本的手机无法运行，和安装</span></span><br><span class="line">        <span class="comment">//旧版项目是minSdkVersion</span></span><br><span class="line">        minSdk rootProject.ext.miniSdk</span><br><span class="line"></span><br><span class="line">        <span class="comment">//目标版本，可以理解为是基于那个版本开发</span></span><br><span class="line">        <span class="comment">//例如：基于31，那么就可以使用31版本里面的新特性</span></span><br><span class="line">        <span class="comment">//如果基于20，那就只能使用20里面的特性，但最终也可以安装到31版本的手机</span></span><br><span class="line">        <span class="comment">//旧版项目是targetSdkVersion</span></span><br><span class="line">        targetSdk rootProject.ext.targetSdk</span><br><span class="line"></span><br><span class="line">        testInstrumentationRunner <span class="string">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_8</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">&#x27;proguard-android-optimize.txt&#x27;</span>), <span class="string">&#x27;proguard-rules.pro&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每个Andoid项目都会带的一些 dependencies</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation <span class="string">&#x27;androidx.appcompat:appcompat:1.6.1&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.google.android.material:material:1.9.0&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;androidx.constraintlayout:constraintlayout:2.1.4&#x27;</span></span><br><span class="line">    testImplementation <span class="string">&#x27;junit:junit:4.13.2&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.ext:junit:1.1.5&#x27;</span></span><br><span class="line">    androidTestImplementation <span class="string">&#x27;androidx.test.espresso:espresso-core:3.5.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后 项目下的 TestAndroid 加一个：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    扩展配置：相当于定义给gradle文件用的常量</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ext &#123;</span><br><span class="line">    <span class="comment">//目标版本</span></span><br><span class="line">    targetSdk = <span class="number">33</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//最低版本</span></span><br><span class="line">    miniSdk = <span class="number">24</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他gradle引入common-gradle">其他gradle引入common.gradle</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入上层目录的 common.gradle 文件内容</span></span><br><span class="line">apply <span class="attr">from:</span> <span class="string">&#x27;../common.gradle&#x27;</span></span><br></pre></td></tr></table></figure><p>然后其他 gradle 文件中如果有和 common.gradle 文件相同的，那就会重写那个属性。</p><h2 id="总结-v21">总结</h2><p>通过上面的两大步骤配置，我们就把多个模块直接的公众配置集中到了一起方便管理。</p><p>以后还有别的模块，就只用在他们的build.gradle文件里面引入<code>common.gradle</code>。</p><p>然后删除自己重复的。</p><p>而且以后想改app的目标版本什么的就只要在项目的<code>build.gradle</code>文件中改一下就可以了。</p><p>这样就做到了高复用。</p>]]></content>
    
    
    <summary type="html">【Android】模块封装</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】ViewBinding</title>
    <link href="http://lmc.pub/posts/564292173.html"/>
    <id>http://lmc.pub/posts/564292173.html</id>
    <published>2023-05-29T03:57:07.000Z</published>
    <updated>2023-05-29T06:41:56.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v18">描述</h2><p>现阶段代替<code>findViewById</code>的</p><h2 id="引入使用">引入使用</h2><h3 id="启用">启用</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    viewBinding &#123;</span><br><span class="line">        <span class="comment">//开启视图绑定，用来替代findViewById</span></span><br><span class="line">        <span class="comment">//官方文档：https://developer.android.com/topic/libraries/view-binding</span></span><br><span class="line">        enabled = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后 <code>onCreate</code>里面就可以这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    binding = ActivitySplashBinding.inflate(getLayoutInflater());</span><br><span class="line">    setContentView(binding.getRoot());</span><br><span class="line">    <span class="comment">//setContentView(R.layout.activity_splash);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后想要那个带 id 的控件，就不用再 findViewById 了。</p><p>直接 <a href="http://binding.id">binding.id</a></p><h2 id="封装-v2">封装</h2><h3 id="ViewModelActivity">ViewModelActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.viewbinding.ViewBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.superutils.reflect.ReflectUtil;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用ViewModel Activity</span></span><br><span class="line"><span class="comment"> * 包括ViewBinding，主要是处理每次要setContentView</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseViewModelActivity</span>&lt;VB <span class="keyword">extends</span> <span class="title class_">ViewBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">BaseLogicActivity</span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> VB binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//调用inflate方法，创建viewBinding</span></span><br><span class="line">        binding = ReflectUtil.newViewBinding(getLayoutInflater(),<span class="built_in">this</span>.getClass());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反射方法类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.viewbinding.ViewBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 反射工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReflectUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建view binding</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;VB <span class="keyword">extends</span> <span class="title class_">ViewBinding</span>&gt; VB <span class="title function_">newViewBinding</span><span class="params">(LayoutInflater layoutInflater, Class&lt;?&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取泛型参数对象</span></span><br><span class="line">            ParameterizedType type;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                type = (ParameterizedType) clazz.getGenericSuperclass();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassCastException e) &#123;</span><br><span class="line">                type = (ParameterizedType) clazz.getSuperclass().getGenericSuperclass();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//type.actualTypeArguments[0]：ViewBinding</span></span><br><span class="line">            Class&lt;VB&gt; clazzVB = (Class&lt;VB&gt;) type.getActualTypeArguments()[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取inflate方法</span></span><br><span class="line">            <span class="type">Method</span> <span class="variable">inflateMethod</span> <span class="operator">=</span> clazzVB.getMethod(<span class="string">&quot;inflate&quot;</span>, LayoutInflater.class);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> (VB) inflateMethod.invoke(<span class="literal">null</span>, layoutInflater);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="融合">融合</h3><p>想要用ViewBinding的直接继承自这个类，然后后面泛型写好对应的类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SplashActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseViewModelActivity</span>&lt;ActivitySplashBinding&gt; &#123;</span><br></pre></td></tr></table></figure><p>然后那个 onCreate 就可以全部删了</p><h2 id="Fragment-v2">Fragment</h2><h3 id="BaseViewModelDialogFragment">BaseViewModelDialogFragment</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.viewbinding.ViewBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.superutils.reflect.ReflectUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseViewModelDialogFragment</span>&lt;VB <span class="keyword">extends</span> <span class="title class_">ViewBinding</span>&gt; <span class="keyword">extends</span> <span class="title class_">BaseDialogFragment</span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> VB binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//调用inflate方法，创建viewBinding</span></span><br><span class="line">        binding = ReflectUtil.newViewBinding(getLayoutInflater(),<span class="built_in">this</span>.getClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> View <span class="title function_">getLayoutView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> binding.getRoot();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroyView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDestroyView();</span><br><span class="line">        binding = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-v2">使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TermServiceDialogFragment</span> <span class="keyword">extends</span> <span class="title class_">BaseViewModelDialogFragment</span>&lt;FragmentDialogTermServiceBinding&gt; &#123;</span><br></pre></td></tr></table></figure><p>然后就一样用了</p><p>同时要特别注意。如果使用的 Fragment 中有 <code>getLayoutView</code>方法。</p><p>记得去掉。</p>]]></content>
    
    
    <summary type="html">【Android】ViewBinding</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】动态获取权限</title>
    <link href="http://lmc.pub/posts/1659486308.html"/>
    <id>http://lmc.pub/posts/1659486308.html</id>
    <published>2023-05-28T08:56:31.000Z</published>
    <updated>2023-05-28T12:29:52.830Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第三方框架">第三方框架</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态处理权限</span></span><br><span class="line"><span class="comment">//https://github.com/permissions-dispatcher/PermissionsDispatcher</span></span><br><span class="line">implementation <span class="string">&quot;com.github.permissions-dispatcher:permissionsdispatcher:4.9.2&quot;</span></span><br><span class="line">annotationProcessor <span class="string">&quot;com.github.permissions-dispatcher:permissionsdispatcher-processor:4.9.2&quot;</span></span><br></pre></td></tr></table></figure><h2 id="AndroidManifest">AndroidManifest</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CAMERA&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_MEDIA_AUDIO&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="java">java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//region AboutPermission</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检查是否有需要的权限</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">checkPermission</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//让动态框架检查是否授权了</span></span><br><span class="line">    SplashActivityPermissionsDispatcher.onPermissionGrantedWithPermissionCheck(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 权限授权了就会调用该方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@NeedsPermission(&#123;</span></span><br><span class="line"><span class="meta">        Manifest.permission.CAMERA,</span></span><br><span class="line"><span class="meta">        Manifest.permission.READ_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="meta">        Manifest.permission.WRITE_EXTERNAL_STORAGE</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">onPermissionGranted</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//如果有权限就进入下一步</span></span><br><span class="line">    prepareNext();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示权限授权对话框</span></span><br><span class="line"><span class="comment"> * 目的是提示用户</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@OnShowRationale(&#123;</span></span><br><span class="line"><span class="meta">        Manifest.permission.CAMERA,</span></span><br><span class="line"><span class="meta">        Manifest.permission.READ_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="meta">        Manifest.permission.WRITE_EXTERNAL_STORAGE</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">showRequestPermission</span><span class="params">(PermissionRequest request)</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(getHostActivity())</span><br><span class="line">            .setMessage(R.string.permission_hint)</span><br><span class="line">            .setPositiveButton(R.string.allow, (dialog, which) -&gt; request.proceed())</span><br><span class="line">            .setNegativeButton(R.string.deny, (dialog, which) -&gt; request.cancel()).show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拒绝了权限调用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@OnPermissionDenied(&#123;</span></span><br><span class="line"><span class="meta">        Manifest.permission.CAMERA,</span></span><br><span class="line"><span class="meta">        Manifest.permission.READ_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="meta">        Manifest.permission.WRITE_EXTERNAL_STORAGE</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">showDenied</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//退出应用</span></span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 再次获取权限的提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@OnNeverAskAgain(&#123;</span></span><br><span class="line"><span class="meta">        Manifest.permission.CAMERA,</span></span><br><span class="line"><span class="meta">        Manifest.permission.READ_EXTERNAL_STORAGE,</span></span><br><span class="line"><span class="meta">        Manifest.permission.WRITE_EXTERNAL_STORAGE</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">showNeverAsk</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//继续请求权限</span></span><br><span class="line">    checkPermission();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 授权后回调</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> requestCode</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> permissions</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> grantResults</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onRequestPermissionsResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="meta">@NonNull</span> String[] permissions, <span class="meta">@NonNull</span> <span class="type">int</span>[] grantResults)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">    <span class="comment">//将授权结果传递到框架</span></span><br><span class="line">    SplashActivityPermissionsDispatcher.onRequestPermissionsResult(<span class="built_in">this</span>, requestCode, grantResults);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//endregion</span></span><br></pre></td></tr></table></figure><p>然后在合适的地方加上 <code>checkPermission();</code></p><h2 id="关键点">关键点</h2><p>前面记得加<code>@RuntimePermissions</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 启动界面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//声明当前界面有动态获取权限的逻辑</span></span><br><span class="line"><span class="meta">@RuntimePermissions</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SplashActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseLogicActivity</span> &#123;</span><br></pre></td></tr></table></figure><h2 id="最后结果">最后结果</h2><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/2.gif" alt=""></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/3.gif" alt=""></p>]]></content>
    
    
    <summary type="html">【Android】动态获取权限</summary>
    
    
    
    <category term="ANdroid" scheme="http://lmc.pub/categories/ANdroid/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】实现圆角按钮的4种办法</title>
    <link href="http://lmc.pub/posts/2641894244.html"/>
    <id>http://lmc.pub/posts/2641894244.html</id>
    <published>2023-05-28T04:12:19.000Z</published>
    <updated>2023-05-28T04:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结-v19">总结</h2><ol><li>Button</li><li>MaterialButton</li><li>CardView</li><li>三方库</li></ol><p><strong>conclusion：用 2</strong></p><h2 id="Button">Button</h2><p>写一个 drawable 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">&quot;rectangle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">&quot;25dp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">&quot;@color/material_dynamic_primary0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以直接用：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Button + 自定义drawable文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Click me&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/my_button_background&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528122513200.png" alt="image-20230528122513200"></p><p>大小控制在 drawable 文件哪里</p><h2 id="MaterialButoon">MaterialButoon</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.google.android.material.button.MaterialButton</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Click me&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cornerRadius</span>=<span class="string">&quot;25dp&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528123122350.png" alt="image-20230528123122350"></p><h2 id="CardView">CardView</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.cardview.widget.CardView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:cardCornerRadius</span>=<span class="string">&quot;25dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;@string/click_me&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.cardview.widget.CardView</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528123141388.png" alt="image-20230528123141388"></p><h2 id="开源三方库">开源三方库</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆角效果</span></span><br><span class="line">implementation <span class="string">&#x27;com.github.rey5137:material:1.2.5&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.rey.material.widget.Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/my_button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Click me&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:backgroundTint</span>=<span class="string">&quot;@color/btn_filled_blue_bg_normal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:rc_cornerRadius</span>=<span class="string">&quot;25dp&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528123551381.png" alt="image-20230528123551381"></p>]]></content>
    
    
    <summary type="html">【Android】实现圆角按钮的几种办法</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】用户协议对话框实现</title>
    <link href="http://lmc.pub/posts/4188338148.html"/>
    <id>http://lmc.pub/posts/4188338148.html</id>
    <published>2023-05-28T02:57:19.000Z</published>
    <updated>2023-05-28T08:54:17.101Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>实现市面上常见app的用户协议对话框的效果：</p><ol><li>该对话框无法关闭</li><li>显示协议文本</li><li>文本中的超链接跳转到指定url</li><li>点不同意关闭app</li><li>点同意继续下一步</li><li>偏好设置：如果同意了下次来就不会显示对话框</li></ol></blockquote><h2 id="对话框UI构建">对话框UI构建</h2><p>几个点注意：</p><ol><li>这个类是继承了我们自己封装的<code>BaseDialogFragment</code>（这个在Fragment通用控制器封装有详细介绍）</li><li>Fragment 获取实例不能直接new，而是去 newInstance 方法里面构造。</li></ol><p>codes：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.FragmentManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.R;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.fragment.BaseDialogFragment;</span><br><span class="line"><span class="keyword">import</span> com.example.testandroid.superutils.ScreenUtil;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务条款和隐私协议对话框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TermServiceDialogFragment</span> <span class="keyword">extends</span> <span class="title class_">BaseDialogFragment</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改对话框宽度的，如果不需要可以直接去掉</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        <span class="comment">//修改宽度，默认比AlertDialog.Builder 显示对话框宽度窄</span></span><br><span class="line">        ViewGroup.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> getDialog().getWindow().getAttributes();</span><br><span class="line"></span><br><span class="line">        params.width = (<span class="type">int</span>) (ScreenUtil.getScreenWith(getContext()) * <span class="number">0.9</span>);</span><br><span class="line">        params.height = ViewGroup.LayoutParams.WRAP_CONTENT;</span><br><span class="line">        getDialog().getWindow().setAttributes((android.view.WindowManager.LayoutParams) params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示对话框</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragmentManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> onAgreementClickListener 同意按钮点击回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">(FragmentManager fragmentManager, View.OnClickListener onAgreementClickListener)</span> &#123;</span><br><span class="line">        <span class="comment">//创建Fragment</span></span><br><span class="line">        <span class="type">TermServiceDialogFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> newInstance();</span><br><span class="line">        <span class="comment">//展示</span></span><br><span class="line">        fragment.show(fragmentManager,<span class="string">&quot;TermServiceDialogFragment&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回当前 DialogFragment 显示的布局</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inflater           inflater</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> container          容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState 保存的实例状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> View <span class="title function_">getLayoutView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> inflater.inflate(R.layout.fragment_dialog_term_service,container,<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> TermServiceDialogFragment <span class="title function_">newInstance</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Bundle</span> <span class="variable">args</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">TermServiceDialogFragment</span> <span class="variable">fragment</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TermServiceDialogFragment</span>();</span><br><span class="line">        fragment.setArguments(args);</span><br><span class="line">        <span class="keyword">return</span> fragment;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用到的时候展示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TermServiceDialogFragment.show(getSupportFragmentManager(),<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h2 id="对话框逻辑处理">对话框逻辑处理</h2><ol><li>html处理&amp;超链接</li><li>不能关闭</li><li>不同意按钮</li><li>同意回调外层界面</li></ol><h3 id="html处理">html处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.initDatum();</span><br><span class="line">    <span class="type">Spanned</span> <span class="variable">content</span> <span class="operator">=</span> Html.fromHtml(getString(R.string.term_service_privacy_content));</span><br><span class="line"></span><br><span class="line">    <span class="type">SpannableStringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> SuperTextUtil.setHtmlLinkClick(content,<span class="literal">null</span>);</span><br><span class="line">    contentView.setText(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 SuperTextUtil 类是这样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.testandroid.superutils.text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.text.SpannableStringBuilder;</span><br><span class="line"><span class="keyword">import</span> android.text.Spanned;</span><br><span class="line"><span class="keyword">import</span> android.text.method.LinkMovementMethod;</span><br><span class="line"><span class="keyword">import</span> android.text.style.URLSpan;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文本相关工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperTextUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置文本点击</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data     html文本</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> listener 这个文本点击的监听器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回处理后的html文本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SpannableStringBuilder <span class="title function_">setHtmlLinkClick</span><span class="params">(Spanned data, OnLinkClickListener listener)</span> &#123;</span><br><span class="line">        <span class="type">SpannableStringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpannableStringBuilder</span>(data);</span><br><span class="line">        URLSpan[] spans = sb.getSpans(<span class="number">0</span>, sb.length(), URLSpan.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (URLSpan span : spans) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> sb.getSpanStart(span);</span><br><span class="line">            <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> sb.getSpanEnd(span);</span><br><span class="line">            <span class="type">int</span> <span class="variable">flags</span> <span class="operator">=</span> sb.getSpanFlags(span);</span><br><span class="line"></span><br><span class="line">            sb.setSpan(<span class="keyword">new</span> <span class="title class_">SuperClickableSpan</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(<span class="meta">@NonNull</span> View widget)</span> &#123;</span><br><span class="line">                    <span class="comment">//这里拦截的没用</span></span><br><span class="line">                    listener.onLinkClick(span.getURL());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, start, end, flags);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sb;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置富文本，超链接颜色</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view  超链接个体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> color 超链接的颜色</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setLinkColor</span><span class="params">(TextView view, <span class="type">int</span> color)</span> &#123;</span><br><span class="line">        <span class="comment">//设置后才可以点击</span></span><br><span class="line">        view.setMovementMethod(LinkMovementMethod.getInstance());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链接的颜色</span></span><br><span class="line">        view.setLinkTextColor(color);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链接点击监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnLinkClickListener</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onLinkClick</span><span class="params">(String data)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面只是显示html文本。</p><p>下面是这段<code>SuperClickableSpan</code></p><p>里面是让超链接那个地方，去掉下划线。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.testandroid.superutils.text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.text.TextPaint;</span><br><span class="line"><span class="keyword">import</span> android.text.style.ClickableSpan;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义ClickableSpan</span></span><br><span class="line"><span class="comment"> * 目的是去除下划线</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">SuperClickableSpan</span> <span class="keyword">extends</span> <span class="title class_">ClickableSpan</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新绘制状态</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ds 哪一个绘制状态DrawState</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateDrawState</span><span class="params">(<span class="meta">@NonNull</span> TextPaint ds)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//只设置颜色</span></span><br><span class="line">        ds.setColor(ds.linkColor);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//去掉下划线</span></span><br><span class="line">        ds.setUnderlineText(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，content文字就可以正常显示了。</p><p>且点击就会用系统默认浏览器打开 content 里面的超链接。</p><p>然后颜色设置为灰色：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SuperTextUtil.setLinkColor(contentView,getActivity().getColor(R.color.link));</span><br></pre></td></tr></table></figure><p>这句放在 Fragment 的 initView 里面</p><p>到这里，content就完全处理好了</p><h3 id="不能关闭">不能关闭</h3><p>指的是在这个对话框弹出来的时候，点击对话框外or按返回键对话框会关闭。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TermServiceDialogFragment</span> <span class="keyword">extends</span> <span class="title class_">BaseDialogFragment</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.initViews();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//点击弹窗外不能关闭对话框</span></span><br><span class="line">        setCancelable(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不同意按钮">不同意按钮</h3><p>在 fragment 里面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initListeners</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.initListeners();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不同意按钮点击</span></span><br><span class="line">    disagree.setOnClickListener(view -&gt; &#123;</span><br><span class="line">        <span class="comment">//关闭对话框</span></span><br><span class="line">        dismiss();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//杀死app</span></span><br><span class="line">        SuperProcessUtil.killApp();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个杀死app是一个工具类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 进程工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperProcessUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 杀死当前应用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">killApp</span><span class="params">()</span> &#123;</span><br><span class="line">        Process.killProcess(Process.myPid());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="同意按钮">同意按钮</h3><p>这个如果同意了，结果想回调到外面去处理。</p><p>所以外面是这样的：<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528155704452.png" alt="image-20230528155704452"></p><p>直接调用 fragment 里面的 show 方法。传一个监听器进去。</p><p>这个监听器在 fragment 里面被保存起来了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230528155817441.png" alt="image-20230528155817441"></p><p>然后我们在 fragment 的initListeners</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同意按钮点击</span></span><br><span class="line">primary.setOnClickListener(view -&gt; &#123;</span><br><span class="line">    <span class="comment">//关闭对话框</span></span><br><span class="line">    dismiss();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当用户点击同意之后，监听回调到外面的界面处理了。</span></span><br><span class="line">    onAgreementClickListener.onClick(view);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>直接丢外面去了。</p><p>所以整个的一个流程就是：</p><ol><li>外面在展示dialogfragment的时候就写一个监听器。</li><li>fragment直接保存为类变量</li><li>在同意按钮被点的时候，调用这个监听器的onClick方法</li><li>这个onClick方法在外面实现的</li></ol><p>这样就实现了，结果在外面监听。</p><p>本质就是传了一个监听器，然后合适的地方去调用监听器的onClick回到外面</p><h3 id="阶段性成果">阶段性成果</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/dialogfragment.gif" alt=""></p><h2 id="偏好设置">偏好设置</h2><p>也就是说：</p><p>第一次来就要同意这个，如果已经同意了就不用再提示了。</p><h3 id="工具类">工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 偏好设置工具类</span></span><br><span class="line"><span class="comment"> * 是否登录了，是否显示引导界面，用户Id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultPreferenceUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 偏好设置文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">KEY_MOBILE_NETWORK_PLAY</span> <span class="operator">=</span> <span class="string">&quot;mobile_network_play&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TERMS_SERVICE</span> <span class="operator">=</span> <span class="string">&quot;TERMS_SERVICE&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DefaultPreferenceUtil instance;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SharedPreferences preference;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//region basicsetting</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DefaultPreferenceUtil</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="comment">//保存上下文（getApplicationContext代表整个app，就脱离activity。避免内存泄漏）</span></span><br><span class="line">        <span class="built_in">this</span>.context = context.getApplicationContext();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这样写有内存泄漏</span></span><br><span class="line">        <span class="comment">//因为当前工具类不会马上释放</span></span><br><span class="line">        <span class="comment">//如果当前工具类引用了界面实例</span></span><br><span class="line">        <span class="comment">//当界面关闭后</span></span><br><span class="line">        <span class="comment">//因为界面对应在这里还有引用</span></span><br><span class="line">        <span class="comment">//所以会导致界面对象不会被释放</span></span><br><span class="line">        <span class="comment">//this.context = context;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取系统默认偏好设置，在设置界面保存的值就可以这样获取</span></span><br><span class="line">        preference = PreferenceManager.getDefaultSharedPreferences(<span class="built_in">this</span>.context);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//自定义名称</span></span><br><span class="line">        <span class="comment">//preference = this.context.getSharedPreferences(NAME, Context.MODE_PRIVATE);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取偏好设置单例</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> DefaultPreferenceUtil <span class="title function_">getInstance</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="comment">//保存上下文</span></span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> <span class="title class_">DefaultPreferenceUtil</span>(context);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//endregion</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置同意了用户协议</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAcceptTermsServiceAgreement</span><span class="params">()</span> &#123;</span><br><span class="line">        putBoolean(TERMS_SERVICE, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取是否同意了用户条款</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAcceptTermsServiceAgreement</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> preference.getBoolean(TERMS_SERVICE, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存boolean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">putBoolean</span><span class="params">(String key, <span class="type">boolean</span> value)</span> &#123;</span><br><span class="line">        preference.edit().putBoolean(key, value).apply();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="业务处理">业务处理</h3><p>在SplashActivity界面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.initDatum();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (DefaultPreferenceUtil.getInstance(getHostActivity()).isAcceptTermsServiceAgreement())&#123;</span><br><span class="line">        <span class="comment">//已经同意用户协议 -&gt; 下一步</span></span><br><span class="line">        prepareNext();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//展示用户协议对话框</span></span><br><span class="line">        showTermsServiceAgreementDialog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时记得如果，<code>同意按钮</code>点击了，记得标记：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示同意服务条款对话框</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showTermsServiceAgreementDialog</span><span class="params">()</span> &#123;</span><br><span class="line">    TermServiceDialogFragment.show(getSupportFragmentManager(), view -&gt; &#123;               DefaultPreferenceUtil.getInstance(getHostActivity()).setAcceptTermsServiceAgreement();</span><br><span class="line">        prepareNext();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现结果">实现结果</h3><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/1.gif" alt=""></p>]]></content>
    
    
    <summary type="html">【Android】用户协议对话框实现</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】Activity/Fragment通用控制器</title>
    <link href="http://lmc.pub/posts/1904213499.html"/>
    <id>http://lmc.pub/posts/1904213499.html</id>
    <published>2023-05-28T02:26:14.000Z</published>
    <updated>2023-05-28T08:39:53.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Activity-v2">Activity</h2><h3 id="整体规划">整体规划</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BaseActivity：把onPostCreate逻辑拆分为三个方法，方便管理。</span><br><span class="line">BaseCommonActivity：不同项目可以复用的逻辑，例如：启动界面等</span><br><span class="line">BaseLogicActivity：本项目的通用逻辑，例如：背景颜色，全局迷你播放控制等。</span><br><span class="line">BaseTitleActivity：标题相关。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="BaseActivity">BaseActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.testandroid.activity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有Activity父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 找控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initListeners</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在onCreate方法后面调用</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onPostCreate(savedInstanceState);</span><br><span class="line">        initViews();</span><br><span class="line">        initDatum();</span><br><span class="line">        initListeners();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最主要的三个动作就是：</p><p>initView：初始化控件</p><p>initDatum： 初始化数据</p><p>initListeners：界面中的控件监听器设置</p><p>为什么放在 <code>postCreate</code>？</p><blockquote><p>因为<code>onCreate</code>里面：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="comment">//显示当前Activity要显示那个布局</span></span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必须要有【设置当前Activity要显示那个布局】的哪一行代码。</p><p>然后我们的 initView 要想拿到控件，就只能在这行代码后面 findViewById 找到控件。</p><p>而 onPostCreate 就是在 OnCreate 完成之后才调用的，所以就刚好放在这里。</p></blockquote><h3 id="BaseCommonActivity">BaseCommonActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用界面逻辑</span></span><br><span class="line"><span class="comment"> * 所有项目APP都可以用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseCommonActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BaseLogicActivity">BaseLogicActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本项目APP的通用逻辑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseLogicActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseCommonActivity</span>&#123;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取界面方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回当前界面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> BaseLogicActivity <span class="title function_">getHostActivity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的<code>getHostActivity</code>是为了让 Activity 和 fragment 都能通过这个方法拿到自己界面的 activity 实例。</p><p>不然 activity 界面用 this，fragment 又不能用很不协调。</p><h3 id="BaseTitleActivity">BaseTitleActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标题相关</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseTitleActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseLogicActivity</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Fragment">Fragment</h2><p>基本道理一直。</p><p>这里我们用 <code>BaseDialogFragment</code>举例</p><p>结构逻辑：</p><p>DialogFragment -&gt; BasedialogFragment -&gt; TermServiceDialogFragment</p><p>系统类 我们定制的通用控制器开发中用到的具体Fragment</p><h3 id="BasedialogFragment">BasedialogFragment</h3><p>Fragment 和 Activity 不同的点在：</p><p>Activity onCreate方法中 <code>setContentView(R.layout.activity_main);</code>这钟设置当前 Activity 的 xml 显示方法没有了。</p><p>Fragment 里面要我们自己封装。</p><p>如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.testandroid.fragment;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.fragment.app.DialogFragment;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有 DialogFragment 对话框父类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDialogFragment</span> <span class="keyword">extends</span> <span class="title class_">DialogFragment</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 找控件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initDatum</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initListeners</span><span class="params">()</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把当前 Fragment 显示的控件返回</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inflater The LayoutInflater object that can be used to inflate</span></span><br><span class="line"><span class="comment">     * any views in the fragment,</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> container If non-null, this is the parent view that the fragment&#x27;s</span></span><br><span class="line"><span class="comment">     * UI should be attached to.  The fragment should not add the view itself,</span></span><br><span class="line"><span class="comment">     * but this can be used to generate the LayoutParams of the view.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState If non-null, this fragment is being re-constructed</span></span><br><span class="line"><span class="comment">     * from a previous saved state as given here.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">onCreateView</span><span class="params">(<span class="meta">@NonNull</span> LayoutInflater inflater, <span class="meta">@Nullable</span> ViewGroup container, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">//获取view</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getLayoutView(inflater, container, savedInstanceState);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回view</span></span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取View</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inflater           inflater</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> container          容器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState 保存的实例状态</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 生成的fragment实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span>  View <span class="title function_">getLayoutView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * View创建了</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> view               view</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> savedInstanceState 保存的实例状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onViewCreated</span><span class="params">(<span class="meta">@NonNull</span> View view, <span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onViewCreated(view, savedInstanceState);</span><br><span class="line">        initViews();</span><br><span class="line">        initDatum();</span><br><span class="line">        initListeners();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 给fragment增加findViewById</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id  想找的控件 id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 控件类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回控件实体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">View</span>&gt; T <span class="title function_">findViewById</span><span class="params">(<span class="meta">@IdRes</span> <span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getView().findViewById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取界面方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> BaseCommonActivity <span class="title function_">getHostActivity</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (BaseCommonActivity) getActivity();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>onViewCreated 就是 Fragment 中的 <code>onpostCreate</code></li><li>onCreateView 即是 Fragment 中的 <code>onCreate</code> 这个方法会返回 Fragment 会显示的View</li><li>getLayoutView ：将一个 xml 文件 to 一个View 。不过是 abstract 抽象的，谁继承，谁就要实现。</li></ul><p>这样继承了这个 BaseDialogFragment 的Fragment</p><p>都要重写 getLayoutView 这个方法来<code>指定当前 Fragment 对应的xml 是什么</code>。</p><p>就像这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回当前 DialogFragment 显示的布局</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> inflater           inflater</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> container          容器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> savedInstanceState 保存的实例状态</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> View <span class="title function_">getLayoutView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> inflater.inflate(R.layout.fragment_dialog_term_service,container,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">【Android】Activity通用控制器</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】Activity生命周期以及设计方法和状态</title>
    <link href="http://lmc.pub/posts/3514545500.html"/>
    <id>http://lmc.pub/posts/3514545500.html</id>
    <published>2023-05-28T02:04:29.000Z</published>
    <updated>2023-05-28T02:23:22.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="涉及方法">涉及方法</h2><p>onCreate ：创建界面</p><p>onContentChanged ：当界面布局改动==之后==就会调用这个方法</p><p>onStart ： 显示界面</p><p>onPostCreate ：界面准备工作==全部结束后==调用</p><p>onResume ：重新显示界面时调用</p><p>onPostResume ：重新显示了界面完成之后调用</p><p>onPause ：界面被遮挡</p><p>onStop ：界面看不见了</p><p>onDestroy：界面被后台回收了</p><h2 id="处于状态">处于状态</h2><p>onCreate 和 onDestory 之间是<strong>完全生存期</strong></p><p>onStart 和 onStop之间是<strong>可见生存期</strong></p><p>onResume 和 onPause 之间<strong>前台生存期</strong></p><p>运行态：</p><p>暂停态</p><p>停止态</p><p>销毁态</p>]]></content>
    
    
    <summary type="html">【Android】Activity生命周期以及设计方法和状态</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】NoActionBar主题/和状态栏设置</title>
    <link href="http://lmc.pub/posts/2025037414.html"/>
    <id>http://lmc.pub/posts/2025037414.html</id>
    <published>2023-05-27T13:23:34.000Z</published>
    <updated>2023-05-27T15:04:04.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述-v16">描述</h2><p>原生创建一个界面的时候，AS会给出一个比较丑的样式。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527213933995.png" alt="image-20230527213933995"></p><p>比如：</p><blockquote><ol><li>没有沉浸式状态栏</li><li>不好看的头部ActionBar</li></ol></blockquote><p>下面是一些解决方案：</p><blockquote><ol><li>通过改主题文件实现ActionBar</li><li>通过三方库实现美化状态栏</li></ol></blockquote><h2 id="实现-v16">实现</h2><h3 id="一，去掉头部ActionBar">一，去掉头部ActionBar</h3><ul><li><p>首先把<code>Theme</code>文件中做一个 NoActionBar（继承已有的就好了）<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527214454802.png" alt="image-20230527214454802"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span> <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    不带头部ActionBar的主题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;SuperUI.NoActionBar&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.MaterialComponents.DayNight.NoActionBar&quot;</span>/&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>在<code>AndroidManifest</code>里面更换原来的主题文件：</p><ul><li>如果想整个APP都是 NoActionBar 就换在 <code>Application</code>上：<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527214637053.png" alt="image-20230527214637053"></li><li>如果只是想某个Activity 是无头部Action Bar就放在对应 Activity 的上：<img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527214807410.png" alt="image-20230527214807410"></li></ul></li></ul><p>这个时候 NoActionBar 就实现了。</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527214926314.png" alt="image-20230527214926314"></p><p>插一句，这里的实现原理其实很简单，两行代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;Theme.MaterialComponents.Light.NoActionBar&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowActionBar&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;windowNoTitle&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二，状态栏设置">二，状态栏设置</h3><p>到现在这步，状态栏显得很突兀。</p><p>我们想实现界面沉浸到状态栏效果。</p><p>这里我们用腾讯的 <a href="https://qmuiteam.com/android/get-started">QMUI</a>。</p><blockquote><p>这个库很厉害，建议深入了解</p></blockquote><p>引入三方库,同步。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.qmuiteam:qmui:2.0.1&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527221336729.png" alt="image-20230527221336729"></p><h4 id="沉浸状态栏">沉浸状态栏</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置沉浸式状态栏</span></span><br><span class="line">QMUIStatusBarHelper.translucent(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527221944870.png" alt="image-20230527221944870"></p><p>看下效果图：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527222039709.png" alt="image-20230527222039709"></p><p>现在沉浸状态栏实现了，但是这个状态栏的文字因为颜色和Activity背景混了。</p><p>不好，处理一下。</p><h4 id="状态栏文字设置">状态栏文字设置</h4><p>思路：</p><p>如果此时为浅色模式（界面是白的），设置状态栏文字为黑的。</p><p>如果此时为深色模式（界面是黑的），设置状态栏为白的。</p><p><strong>判断此时是不是黑色界面的方法：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDark</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (context.getResources().getConfiguration().uiMode &amp; Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_YES;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后就直接 if 判断：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isDark(<span class="built_in">this</span>)) &#123;</span><br><span class="line">    <span class="comment">//状态栏文字白色</span></span><br><span class="line">    QMUIStatusBarHelper.setStatusBarDarkMode(<span class="built_in">this</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//状态栏文字黑色</span></span><br><span class="line">    QMUIStatusBarHelper.setStatusBarLightMode(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整体代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置沉浸式状态栏</span></span><br><span class="line">        QMUIStatusBarHelper.translucent(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isDark(<span class="built_in">this</span>)) &#123;</span><br><span class="line">            <span class="comment">//状态栏文字白色</span></span><br><span class="line">            QMUIStatusBarHelper.setStatusBarDarkMode(<span class="built_in">this</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//状态栏文字黑色</span></span><br><span class="line">            QMUIStatusBarHelper.setStatusBarLightMode(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDark</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (context.getResources().getConfiguration().uiMode &amp; Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_YES;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527222930147.png" alt="image-20230527222930147"></p><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527222937349.png" alt="image-20230527222937349"></p><p>终于顺眼了。</p><h2 id="总结-v16">总结</h2><p>我们如果很多地方都想要这种效果就可以封装一个工具类</p><p><code>SuperStatusBarUtil</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.testandroid.superutils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qmuiteam.qmui.util.QMUIStatusBarHelper;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 状态栏工具类</span></span><br><span class="line"><span class="comment"> * 依赖以下实现：</span></span><br><span class="line"><span class="comment"> * //Tencent`s UI框架</span></span><br><span class="line"><span class="comment"> * //https://qmuiteam.com/android/get-started</span></span><br><span class="line"><span class="comment"> * implementation &#x27;com.qmuiteam:qmui:2.0.1&#x27;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SuperStatusBarUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 我想要的状态栏：1. 沉浸式 2. 字体自然变化</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> activity 想沉浸式状态栏的Activity</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myStatusBar</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        <span class="comment">//沉浸式</span></span><br><span class="line">        QMUIStatusBarHelper.translucent(activity);</span><br><span class="line">        <span class="comment">//字体设置</span></span><br><span class="line">        <span class="keyword">if</span> (isDark(activity)) &#123;</span><br><span class="line">            <span class="comment">//状态栏文字白色</span></span><br><span class="line">            QMUIStatusBarHelper.setStatusBarDarkMode(activity);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//状态栏文字黑色</span></span><br><span class="line">            QMUIStatusBarHelper.setStatusBarLightMode(activity);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断当前是不是深色模式/当前界面是不是深色Activity</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDark</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (context.getResources().getConfiguration().uiMode &amp; Configuration.UI_MODE_NIGHT_MASK) == Configuration.UI_MODE_NIGHT_YES;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后用到的Activity直接调用就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//状态栏设置</span></span><br><span class="line">SuperStatusBarUtil.myStatusBar(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure><p><img src="https://article-picture-resource.oss-cn-chengdu.aliyuncs.com/imags/image-20230527225528494.png" alt="image-20230527225528494"></p>]]></content>
    
    
    <summary type="html">【Android】怎么设置NoActionBar主题</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】安卓常见布局layout盘点</title>
    <link href="http://lmc.pub/posts/1467610810.html"/>
    <id>http://lmc.pub/posts/1467610810.html</id>
    <published>2023-05-27T10:28:32.000Z</published>
    <updated>2023-05-27T11:29:49.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总结-v20">总结</h2><ol><li>约束布局：ConstraintLayout</li><li>线性布局：LinearLayout</li><li>相对布局：RelativeLayout</li><li>帧布局：FrameLayout</li><li>网格布局：GridLayout</li></ol><h3 id="ConstraintLayout">ConstraintLayout</h3><p>最推荐的一个，各种组件之间的约束关系来锁定位置。</p><p>RelativeLayout Plus</p><p>可视化拖拽使用良好。</p><h3 id="LinearLayout">LinearLayout</h3><p>人如其名，只能线性摆放控件。</p><p>呈线性横向或纵向，依次绘制每个被添加进来的子组件。</p><p>可读性强，但是性能差。</p><p>嵌套LinearLayout加深视图层级，摆放子组件会消耗更多计算。</p><p><img src="https://pic4.zhimg.com/v2-1ddaafe2fc0409c986c560dfa46fadff_r.jpg" alt=""></p><h3 id="RelativeLayout">RelativeLayout</h3><p>不虚要嵌套，但是每个子View可以相对其他VIew或者父控件去摆放。</p><p><img src="https://pic1.zhimg.com/v2-c8bc3bcb2d44b18ed4abba56c653a3ec_r.jpg" alt=""></p><h3 id="OtherLayout">OtherLayout</h3><p>FrameLayout：默认堆在左上角</p><p>Tablelayout：表格</p><p>AbsoluteLayout：直接xy定位置</p><h3 id="布局优化">布局优化</h3><ol><li>用<code>include</code>加载重复布局</li><li><code>merge</code>标签减少布局嵌套</li><li>使用<code>ViewStub</code>动态控制布局显示</li></ol>]]></content>
    
    
    <summary type="html">【Android】安卓常见布局layout盘点</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】软件架构模式</title>
    <link href="http://lmc.pub/posts/2642054592.html"/>
    <id>http://lmc.pub/posts/2642054592.html</id>
    <published>2023-05-26T11:00:51.000Z</published>
    <updated>2023-05-27T07:38:01.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="类型">类型</h2><p>MVCMVP MVVMMVI</p><p>（先后循序）</p><h2 id="MVC">MVC</h2><p>Model：数据类型和堆数据类型的操作：增删改查</p><p>View：视图，展示数据和接受用户交互</p><p>Controller：Model和View的连接器。接受View的要求转交给Model去处理。</p><p>优点：为了让业务（Model）和视图（View）代码分离，实现解耦。</p><p>缺点：</p><ol><li>Model和View是可以直接通信的</li><li>Controler太臃肿</li></ol><h2 id="MVP">MVP</h2><p>Presenter代替了Controller</p><p>MVC是View和Model直接通信</p><p>MVP是让P在中间双向同心，这样MV就不需要接触。</p><p>全部给P中转。</p><p>优点：</p><ol><li>解决MVC的C太臃肿</li><li>M和V不直接通信，进一步降低耦合</li></ol><h2 id="MVVM">MVVM</h2><p>把P换成了ViewModel</p><p>采用<strong>数据绑定</strong>。</p><p>View的变动自动反应再ViewModel上。</p><p>单项绑定：只有VM变了，View才变</p><p>双向绑定：V和VM同步</p><p>优点：</p><ol><li>通过数据绑定简化代码，无需手动同步View和Model之间的数据</li><li>提高效率，降低出错率</li><li>View和ViewModel直接通信自动，降低耦合度提高代码可维护性和可测试性</li></ol><h2 id="MVI">MVI</h2><p>将app状态管理集中再Intent中</p><p>View发出意图，意图转为状态存在Model中。</p><p>然后Model将心状态推送回View来更新用户界面。</p>]]></content>
    
    
    <summary type="html">【Android】软件架构模式</summary>
    
    
    
    <category term="Android" scheme="http://lmc.pub/categories/Android/"/>
    
    
    <category term="Android" scheme="http://lmc.pub/tags/Android/"/>
    
  </entry>
  
</feed>
